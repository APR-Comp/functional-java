import spoon.Launcher;
import spoon.reflect.declaration.CtType;
import spoon.support.compiler.VirtualFile;

import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.assertEquals;

public class ReferenceBuilder_ESTest {
    @Test
    public void test000() {
        Launcher launcher = new Launcher();
        launcher.getEnvironment().setComplianceLevel(17);
        launcher.getEnvironment().setAutoImports(true);
        launcher.getEnvironment().setShouldCompile(true);
        launcher.addInputResource(new VirtualFile("class y {\n  class cG6 {\n    class w {\n      class sg {\n        class I {\n          class te {\n            class E {\n              class BO{}\n              class J3{}\n              class d{}\n              \n            }\n            class J {\n\n              I.te H = new w.sg.I.te();\n            }\n            class f{}\n            \n          }\n          class z{}\n          \n        }\n        class Y {\n\n          y.cG6.w NL = new cG6.w();\n        }\n        class a {\n\n          y.cG6.w ok0YS0 = new w();\n        }\n        \n      }\n      class vu{}\n      y x = new y();\n      y.cG6 EZRB = new y.cG6();\n    }\n    class eKZ {\n\n      y BGMzw = new y();\n      y.cG6.eKZ RXRkq6lRK = new eKZ();\n    }\n    class Cu{}\n    class FJh {\n\n      cG6.FJh D = new y.cG6.FJh();\n      y p = new y();\n      cG6.FJh O = new FJh();\n      cG6 PMvo = new cG6();\n      FJh cS = new cG6.FJh();\n    }\n    \n  }\n  class IZ {\n\n    y C = new y();\n    y uD0 = new y();\n  }\n  class CZKll_ {\n\n    y AnW0 = new y();\n  }\n  class i {\n\n    y S = new y();\n    y.i r = new y.i();\n  }\n  y jbn = new y();\n}"));
        CtType<?> innerClass = launcher.buildModel().getAllTypes().iterator().next();
        assertEquals("class y {\n    class cG6 {\n        class w {\n            class sg {\n                class I {\n                    class te {\n                        class E {\n                            class BO {}\n\n                            class J3 {}\n\n                            class d {}\n                        }\n\n                        class J {\n                            I.te H = new w.sg.I.te();\n                        }\n\n                        class f {}\n                    }\n\n                    class z {}\n                }\n\n                class Y {\n                    y.cG6.w NL = new cG6.w();\n                }\n\n                class a {\n                    y.cG6.w ok0YS0 = new w();\n                }\n            }\n\n            class vu {}\n\n            y x = new y();\n\n            y.cG6 EZRB = new y.cG6();\n        }\n\n        class eKZ {\n            y BGMzw = new y();\n\n            y.cG6.eKZ RXRkq6lRK = new eKZ();\n        }\n\n        class Cu {}\n\n        class FJh {\n            cG6.FJh D = new y.cG6.FJh();\n\n            y p = new y();\n\n            cG6.FJh O = new FJh();\n\n            cG6 PMvo = new cG6();\n\n            FJh cS = new cG6.FJh();\n        }\n    }\n\n    class IZ {\n        y C = new y();\n\n        y uD0 = new y();\n    }\n\n    class CZKll_ {\n        y AnW0 = new y();\n    }\n\n    class i {\n        y S = new y();\n\n        y.i r = new y.i();\n    }\n\n    y jbn = new y();\n}", innerClass.toString());
    }

    @Test
    public void test001() {
        Launcher launcher = new Launcher();
        launcher.getEnvironment().setComplianceLevel(17);
        launcher.getEnvironment().setAutoImports(true);
        launcher.getEnvironment().setShouldCompile(true);
        launcher.addInputResource(new VirtualFile("class x {\n  class V {\n    class T {\n      class O3 {\n        class y {\n          class ivx {\n            class X {\n              class r_ {\n                class z{}\n                class iE {\n\n                  V q = new x.V();\n                  T.O3 e = new x.V.T.O3();\n                }\n                class d2 {\n\n                  r_.d2 hqc = new O3.y.ivx.X.r_.d2();\n                }\n                \n              }\n              T.O3.y.ivx.X jM = new y.ivx.X();\n              y.ivx.X R = new O3.y.ivx.X();\n              O3.y.ivx.X.r_ a9 = new O3.y.ivx.X.r_();\n              x M = new x();\n            }\n            class e1AJ{}\n            class EZ{}\n            \n          }\n          x.V.T.O3.y ot23j = new x.V.T.O3.y();\n          O3.y Gf = new y();\n        }\n        class vh{}\n        \n      }\n      class Bv{}\n      class j{}\n      class O {\n\n        O Z4lKeq = new O();\n        O d7s = new O();\n        x j3 = new x();\n        V c = new V();\n        x Xc = new x();\n        x.V.T J = new T();\n        x.V.T.O N = new x.V.T.O();\n      }\n      \n    }\n    class Z{}\n    class OZVyz{}\n    class sF{}\n    V H = new x.V();\n  }\n  V DOc = new x.V();\n  x f = new x();\n}"));
        CtType<?> innerClass = launcher.buildModel().getAllTypes().iterator().next();
        assertEquals("class x {\n    class V {\n        class T {\n            class O3 {\n                class y {\n                    class ivx {\n                        class X {\n                            class r_ {\n                                class z {}\n\n                                class iE {\n                                    V q = new x.V();\n\n                                    T.O3 e = new x.V.T.O3();\n                                }\n\n                                class d2 {\n                                    r_.d2 hqc = new O3.y.ivx.X.r_.d2();\n                                }\n                            }\n\n                            T.O3.y.ivx.X jM = new y.ivx.X();\n\n                            y.ivx.X R = new O3.y.ivx.X();\n\n                            O3.y.ivx.X.r_ a9 = new O3.y.ivx.X.r_();\n\n                            x M = new x();\n                        }\n\n                        class e1AJ {}\n\n                        class EZ {}\n                    }\n\n                    x.V.T.O3.y ot23j = new x.V.T.O3.y();\n\n                    O3.y Gf = new y();\n                }\n\n                class vh {}\n            }\n\n            class Bv {}\n\n            class j {}\n\n            class O {\n                O Z4lKeq = new O();\n\n                O d7s = new O();\n\n                x j3 = new x();\n\n                V c = new V();\n\n                x Xc = new x();\n\n                x.V.T J = new T();\n\n                x.V.T.O N = new x.V.T.O();\n            }\n        }\n\n        class Z {}\n\n        class OZVyz {}\n\n        class sF {}\n\n        V H = new x.V();\n    }\n\n    V DOc = new x.V();\n\n    x f = new x();\n}", innerClass.toString());
    }

    @Test
    public void test002() {
        Launcher launcher = new Launcher();
        launcher.getEnvironment().setComplianceLevel(17);
        launcher.getEnvironment().setAutoImports(true);
        launcher.getEnvironment().setShouldCompile(true);
        launcher.addInputResource(new VirtualFile("class O {\n  class Gh5 {\n    class AA {\n      class YRF {\n        class Uww {\n          class w1 {\n            class e {\n              class nQ {\n                class Vx {\n                  class jhT{}\n                  class inE {\n\n                    O Cs = new O();\n                    O.Gh5.AA h = new Gh5.AA();\n                  }\n                  \n                }\n                Gh5.AA lDHD = new Gh5.AA();\n                O.Gh5.AA.YRF.Uww NnX = new YRF.Uww();\n                w1.e EF = new e();\n                O.Gh5.AA.YRF.Uww r = new O.Gh5.AA.YRF.Uww();\n                Uww.w1.e Tg = new Uww.w1.e();\n                O.Gh5 YIH = new O.Gh5();\n              }\n              class s{}\n              Uww K = new Gh5.AA.YRF.Uww();\n              w1.e z = new Uww.w1.e();\n            }\n            class J {\n\n              AA.YRF khLJ = new Gh5.AA.YRF();\n              YRF EGP = new Gh5.AA.YRF();\n              Gh5 Nw4 = new O.Gh5();\n            }\n            class l{}\n            \n          }\n          class fLy {\n\n            fLy ah = new YRF.Uww.fLy();\n          }\n          class i{}\n          \n        }\n        class u{}\n        class p {\n\n          AA.YRF.p gTkP = new Gh5.AA.YRF.p();\n          Gh5.AA.YRF ilY = new AA.YRF();\n          YRF Y8TyOlV = new Gh5.AA.YRF();\n          AA.YRF.p f = new p();\n        }\n        YRF Q = new O.Gh5.AA.YRF();\n      }\n      \n    }\n    \n  }\n  static class sQi{}\n  class SAA {\n\n    O.SAA rdaaYo = new SAA();\n    O v = new O();\n  }\n  class BwC {\n\n    BwC uHx3 = new BwC();\n    O t = new O();\n    BwC cJDCZFhpW4 = new O.BwC();\n    O c = new O();\n    O wB5I = new O();\n  }\n  \n}"));
        CtType<?> innerClass = launcher.buildModel().getAllTypes().iterator().next();
        assertEquals("class O {\n    class Gh5 {\n        class AA {\n            class YRF {\n                class Uww {\n                    class w1 {\n                        class e {\n                            class nQ {\n                                class Vx {\n                                    class jhT {}\n\n                                    class inE {\n                                        O Cs = new O();\n\n                                        O.Gh5.AA h = new Gh5.AA();\n                                    }\n                                }\n\n                                Gh5.AA lDHD = new Gh5.AA();\n\n                                O.Gh5.AA.YRF.Uww NnX = new YRF.Uww();\n\n                                w1.e EF = new e();\n\n                                O.Gh5.AA.YRF.Uww r = new O.Gh5.AA.YRF.Uww();\n\n                                Uww.w1.e Tg = new Uww.w1.e();\n\n                                O.Gh5 YIH = new O.Gh5();\n                            }\n\n                            class s {}\n\n                            Uww K = new Gh5.AA.YRF.Uww();\n\n                            w1.e z = new Uww.w1.e();\n                        }\n\n                        class J {\n                            AA.YRF khLJ = new Gh5.AA.YRF();\n\n                            YRF EGP = new Gh5.AA.YRF();\n\n                            Gh5 Nw4 = new O.Gh5();\n                        }\n\n                        class l {}\n                    }\n\n                    class fLy {\n                        fLy ah = new YRF.Uww.fLy();\n                    }\n\n                    class i {}\n                }\n\n                class u {}\n\n                class p {\n                    AA.YRF.p gTkP = new Gh5.AA.YRF.p();\n\n                    Gh5.AA.YRF ilY = new AA.YRF();\n\n                    YRF Y8TyOlV = new Gh5.AA.YRF();\n\n                    AA.YRF.p f = new p();\n                }\n\n                YRF Q = new O.Gh5.AA.YRF();\n            }\n        }\n    }\n\n    static class sQi {}\n\n    class SAA {\n        O.SAA rdaaYo = new SAA();\n\n        O v = new O();\n    }\n\n    class BwC {\n        BwC uHx3 = new BwC();\n\n        O t = new O();\n\n        BwC cJDCZFhpW4 = new O.BwC();\n\n        O c = new O();\n\n        O wB5I = new O();\n    }\n}", innerClass.toString());
    }

    @Test
    public void test003() {
        Launcher launcher = new Launcher();
        launcher.getEnvironment().setComplianceLevel(17);
        launcher.getEnvironment().setAutoImports(true);
        launcher.getEnvironment().setShouldCompile(true);
        launcher.addInputResource(new VirtualFile("class G {\n  class rh {\n    class UnV {\n      class V {\n        class dP_ {\n          class o {\n            class pt {\n              class x {\n                class LZGL {\n\n                  rh.UnV.V.dP_.o.pt CwPY = new rh.UnV.V.dP_.o.pt();\n                  UnV.V.dP_.o.pt I = new dP_.o.pt();\n                }\n                class Zzl{}\n                class en{}\n                \n              }\n              class XX {\n\n                rh.UnV.V.dP_.o.pt G3 = new G.rh.UnV.V.dP_.o.pt();\n              }\n              \n            }\n            class ni {\n\n              G.rh b = new G.rh();\n            }\n            class WM{}\n            \n          }\n          class O61MD9P49{}\n          class I2i{}\n          G N = new G();\n          V.dP_.I2i O = new G.rh.UnV.V.dP_.I2i();\n          rh.UnV jGV = new UnV();\n          G.rh.UnV.V H = new UnV.V();\n        }\n        class Tu{}\n        class y{}\n        class nU{}\n        V zdV = new G.rh.UnV.V();\n        rh qK = new rh();\n      }\n      \n    }\n    class pC {\n\n      pC R = new pC();\n      G L = new G();\n    }\n    \n  }\n  class Q {\n\n    Q YB = new Q();\n    G ia = new G();\n    G.Q J = new G.Q();\n    G LG = new G();\n  }\n  class QbIObdc8 {\n\n    QbIObdc8 sX = new QbIObdc8();\n  }\n  \n}"));
        CtType<?> innerClass = launcher.buildModel().getAllTypes().iterator().next();
        assertEquals("class G {\n    class rh {\n        class UnV {\n            class V {\n                class dP_ {\n                    class o {\n                        class pt {\n                            class x {\n                                class LZGL {\n                                    rh.UnV.V.dP_.o.pt CwPY = new rh.UnV.V.dP_.o.pt();\n\n                                    UnV.V.dP_.o.pt I = new dP_.o.pt();\n                                }\n\n                                class Zzl {}\n\n                                class en {}\n                            }\n\n                            class XX {\n                                rh.UnV.V.dP_.o.pt G3 = new G.rh.UnV.V.dP_.o.pt();\n                            }\n                        }\n\n                        class ni {\n                            G.rh b = new G.rh();\n                        }\n\n                        class WM {}\n                    }\n\n                    class O61MD9P49 {}\n\n                    class I2i {}\n\n                    G N = new G();\n\n                    V.dP_.I2i O = new G.rh.UnV.V.dP_.I2i();\n\n                    rh.UnV jGV = new UnV();\n\n                    G.rh.UnV.V H = new UnV.V();\n                }\n\n                class Tu {}\n\n                class y {}\n\n                class nU {}\n\n                V zdV = new G.rh.UnV.V();\n\n                rh qK = new rh();\n            }\n        }\n\n        class pC {\n            pC R = new pC();\n\n            G L = new G();\n        }\n    }\n\n    class Q {\n        Q YB = new Q();\n\n        G ia = new G();\n\n        G.Q J = new G.Q();\n\n        G LG = new G();\n    }\n\n    class QbIObdc8 {\n        QbIObdc8 sX = new QbIObdc8();\n    }\n}", innerClass.toString());
    }

    @Test
    public void test004() {
        Launcher launcher = new Launcher();
        launcher.getEnvironment().setComplianceLevel(17);
        launcher.getEnvironment().setAutoImports(true);
        launcher.getEnvironment().setShouldCompile(true);
        launcher.addInputResource(new VirtualFile("class I {\n  class vYj {\n    class Y {\n      class xc {\n        class O {\n          class b_ {\n            class OSU {\n              class rW{}\n              class e {\n\n                I TIu = new I();\n              }\n              \n            }\n            class p {\n\n              vYj Qjt = new vYj();\n              vYj U = new I.vYj();\n              xc.O fl = new vYj.Y.xc.O();\n              vYj.Y Tq = new Y();\n              vYj c = new I.vYj();\n              I.vYj.Y.xc.O eYp = new Y.xc.O();\n            }\n            \n          }\n          class C{}\n          I.vYj.Y.xc.O vXB = new O();\n        }\n        class Z {\n\n          Y.xc ibi4 = new I.vYj.Y.xc();\n          I d = new I();\n        }\n        class g {\n\n          I C5 = new I();\n          Y AD = new vYj.Y();\n          I.vYj.Y.xc gwz = new Y.xc();\n        }\n        class ke {\n\n          xc f = new xc();\n        }\n        I vgcH = new I();\n        I k = new I();\n      }\n      class Or4 {\n\n        I.vYj b4 = new vYj();\n        I.vYj vpk = new vYj();\n        vYj a = new I.vYj();\n      }\n      class w {\n\n        I.vYj u = new I.vYj();\n        I R = new I();\n      }\n      class fFqzX {\n\n        Y in = new I.vYj.Y();\n        Y.fFqzX B = new I.vYj.Y.fFqzX();\n        vYj.Y.fFqzX z = new fFqzX();\n        vYj.Y x = new Y();\n      }\n      \n    }\n    class R4{}\n    I.vYj j = new I.vYj();\n    vYj.R4 MkA6 = new vYj.R4();\n    vYj OE = new I.vYj();\n  }\n  class L1 {\n\n    I.L1 scBAUiNbzP = new L1();\n  }\n  static class rb6{}\n  \n}"));
        CtType<?> innerClass = launcher.buildModel().getAllTypes().iterator().next();
        assertEquals("class I {\n    class vYj {\n        class Y {\n            class xc {\n                class O {\n                    class b_ {\n                        class OSU {\n                            class rW {}\n\n                            class e {\n                                I TIu = new I();\n                            }\n                        }\n\n                        class p {\n                            vYj Qjt = new vYj();\n\n                            vYj U = new I.vYj();\n\n                            xc.O fl = new vYj.Y.xc.O();\n\n                            vYj.Y Tq = new Y();\n\n                            vYj c = new I.vYj();\n\n                            I.vYj.Y.xc.O eYp = new Y.xc.O();\n                        }\n                    }\n\n                    class C {}\n\n                    I.vYj.Y.xc.O vXB = new O();\n                }\n\n                class Z {\n                    Y.xc ibi4 = new I.vYj.Y.xc();\n\n                    I d = new I();\n                }\n\n                class g {\n                    I C5 = new I();\n\n                    Y AD = new vYj.Y();\n\n                    I.vYj.Y.xc gwz = new Y.xc();\n                }\n\n                class ke {\n                    xc f = new xc();\n                }\n\n                I vgcH = new I();\n\n                I k = new I();\n            }\n\n            class Or4 {\n                I.vYj b4 = new vYj();\n\n                I.vYj vpk = new vYj();\n\n                vYj a = new I.vYj();\n            }\n\n            class w {\n                I.vYj u = new I.vYj();\n\n                I R = new I();\n            }\n\n            class fFqzX {\n                Y in = new I.vYj.Y();\n\n                Y.fFqzX B = new I.vYj.Y.fFqzX();\n\n                vYj.Y.fFqzX z = new fFqzX();\n\n                vYj.Y x = new Y();\n            }\n        }\n\n        class R4 {}\n\n        I.vYj j = new I.vYj();\n\n        vYj.R4 MkA6 = new vYj.R4();\n\n        vYj OE = new I.vYj();\n    }\n\n    class L1 {\n        I.L1 scBAUiNbzP = new L1();\n    }\n\n    static class rb6 {}\n}", innerClass.toString());
    }

    @Test
    public void test005() {
        Launcher launcher = new Launcher();
        launcher.getEnvironment().setComplianceLevel(17);
        launcher.getEnvironment().setAutoImports(true);
        launcher.getEnvironment().setShouldCompile(true);
        launcher.addInputResource(new VirtualFile("class Jjoi {\n  class N {\n    class R9 {\n      class X {\n        class v {\n          class I {\n            class V {\n\n              Jjoi.N.R9.X.v kP = new v();\n            }\n            class t6{}\n            class wE{}\n            class A {\n\n              I qi = new X.v.I();\n              Jjoi.N.R9.X ZLo = new X();\n              Jjoi.N.R9.X GPqIt = new R9.X();\n            }\n            Jjoi K = new Jjoi();\n          }\n          class g {\n\n            Jjoi.N jg3QJc = new N();\n          }\n          class jL{}\n          Jjoi Xg = new Jjoi();\n          N.R9 a8 = new Jjoi.N.R9();\n        }\n        class T {\n\n          R9 o = new N.R9();\n        }\n        \n      }\n      class HX {\n\n        Jjoi.N.R9 X4 = new R9();\n        Jjoi.N w = new N();\n        R9 B_X = new N.R9();\n        Jjoi hw = new Jjoi();\n      }\n      class n{}\n      class M {\n\n        Jjoi.N yD = new N();\n      }\n      \n    }\n    class hU{}\n    class yc5Ug{}\n    \n  }\n  class x {\n\n    Jjoi.x E5 = new Jjoi.x();\n  }\n  class F {\n\n    Jjoi fUhSo = new Jjoi();\n    Jjoi mDa = new Jjoi();\n  }\n  Jjoi AZnW9Lx = new Jjoi();\n}"));
        CtType<?> innerClass = launcher.buildModel().getAllTypes().iterator().next();
        assertEquals("class Jjoi {\n    class N {\n        class R9 {\n            class X {\n                class v {\n                    class I {\n                        class V {\n                            Jjoi.N.R9.X.v kP = new v();\n                        }\n\n                        class t6 {}\n\n                        class wE {}\n\n                        class A {\n                            I qi = new X.v.I();\n\n                            Jjoi.N.R9.X ZLo = new X();\n\n                            Jjoi.N.R9.X GPqIt = new R9.X();\n                        }\n\n                        Jjoi K = new Jjoi();\n                    }\n\n                    class g {\n                        Jjoi.N jg3QJc = new N();\n                    }\n\n                    class jL {}\n\n                    Jjoi Xg = new Jjoi();\n\n                    N.R9 a8 = new Jjoi.N.R9();\n                }\n\n                class T {\n                    R9 o = new N.R9();\n                }\n            }\n\n            class HX {\n                Jjoi.N.R9 X4 = new R9();\n\n                Jjoi.N w = new N();\n\n                R9 B_X = new N.R9();\n\n                Jjoi hw = new Jjoi();\n            }\n\n            class n {}\n\n            class M {\n                Jjoi.N yD = new N();\n            }\n        }\n\n        class hU {}\n\n        class yc5Ug {}\n    }\n\n    class x {\n        Jjoi.x E5 = new Jjoi.x();\n    }\n\n    class F {\n        Jjoi fUhSo = new Jjoi();\n\n        Jjoi mDa = new Jjoi();\n    }\n\n    Jjoi AZnW9Lx = new Jjoi();\n}", innerClass.toString());
    }

    @Test
    public void test006() {
        Launcher launcher = new Launcher();
        launcher.getEnvironment().setComplianceLevel(17);
        launcher.getEnvironment().setAutoImports(true);
        launcher.getEnvironment().setShouldCompile(true);
        launcher.addInputResource(new VirtualFile("class PH8gSX {\n  class n {\n    class A {\n      class J6G {\n        class lvqK {\n          class DE {\n            class b4z {\n              class oqjsF {\n\n                DE.b4z.oqjsF ai3 = new J6G.lvqK.DE.b4z.oqjsF();\n                n RRx = new n();\n                b4z.oqjsF QDo = new oqjsF();\n              }\n              class j{}\n              class H {\n\n                J6G.lvqK.DE.b4z.H Tz2K = new DE.b4z.H();\n                PH8gSX.n.A.J6G FI = new n.A.J6G();\n                PH8gSX.n.A.J6G.lvqK.DE.b4z.H xVZ9 = new J6G.lvqK.DE.b4z.H();\n              }\n              class mH{}\n              PH8gSX.n.A.J6G.lvqK C1 = new lvqK();\n              A.J6G cO = new PH8gSX.n.A.J6G();\n              A.J6G.lvqK.DE.b4z U = new J6G.lvqK.DE.b4z();\n              PH8gSX.n.A Tc = new PH8gSX.n.A();\n              A.J6G.lvqK.DE N = new A.J6G.lvqK.DE();\n              lvqK.DE aF = new lvqK.DE();\n            }\n            class h {\n\n              n Y = new PH8gSX.n();\n              PH8gSX F1 = new PH8gSX();\n              n.A.J6G.lvqK oM = new n.A.J6G.lvqK();\n              n J = new n();\n              A.J6G.lvqK.DE.h r = new n.A.J6G.lvqK.DE.h();\n            }\n            class jv {\n\n              A.J6G.lvqK.DE T = new A.J6G.lvqK.DE();\n              PH8gSX ZTm = new PH8gSX();\n              PH8gSX.n.A.J6G G = new J6G();\n              PH8gSX lOSb = new PH8gSX();\n            }\n            class Z5RFz8 {\n\n              DE.Z5RFz8 u = new A.J6G.lvqK.DE.Z5RFz8();\n            }\n            DE.h id = new lvqK.DE.h();\n            n.A F = new A();\n          }\n          class v {\n\n            PH8gSX.n yf0i = new PH8gSX.n();\n            A FzS = new n.A();\n            lvqK.v mo = new A.J6G.lvqK.v();\n          }\n          PH8gSX.n.A.J6G.lvqK o = new n.A.J6G.lvqK();\n        }\n        class R{}\n        class m{}\n        class l {\n\n          n.A.J6G.l Rp = new l();\n        }\n        \n      }\n      \n    }\n    class I{}\n    PH8gSX kyI = new PH8gSX();\n    PH8gSX.n.A a = new PH8gSX.n.A();\n  }\n  static class M{}\n  class S {\n\n    S QUWp = new S();\n  }\n  static class K{}\n  PH8gSX.n W = new n();\n}"));
        CtType<?> innerClass = launcher.buildModel().getAllTypes().iterator().next();
        assertEquals("class PH8gSX {\n    class n {\n        class A {\n            class J6G {\n                class lvqK {\n                    class DE {\n                        class b4z {\n                            class oqjsF {\n                                DE.b4z.oqjsF ai3 = new J6G.lvqK.DE.b4z.oqjsF();\n\n                                n RRx = new n();\n\n                                b4z.oqjsF QDo = new oqjsF();\n                            }\n\n                            class j {}\n\n                            class H {\n                                J6G.lvqK.DE.b4z.H Tz2K = new DE.b4z.H();\n\n                                PH8gSX.n.A.J6G FI = new n.A.J6G();\n\n                                PH8gSX.n.A.J6G.lvqK.DE.b4z.H xVZ9 = new J6G.lvqK.DE.b4z.H();\n                            }\n\n                            class mH {}\n\n                            PH8gSX.n.A.J6G.lvqK C1 = new lvqK();\n\n                            A.J6G cO = new PH8gSX.n.A.J6G();\n\n                            A.J6G.lvqK.DE.b4z U = new J6G.lvqK.DE.b4z();\n\n                            PH8gSX.n.A Tc = new PH8gSX.n.A();\n\n                            A.J6G.lvqK.DE N = new A.J6G.lvqK.DE();\n\n                            lvqK.DE aF = new lvqK.DE();\n                        }\n\n                        class h {\n                            n Y = new PH8gSX.n();\n\n                            PH8gSX F1 = new PH8gSX();\n\n                            n.A.J6G.lvqK oM = new n.A.J6G.lvqK();\n\n                            n J = new n();\n\n                            A.J6G.lvqK.DE.h r = new n.A.J6G.lvqK.DE.h();\n                        }\n\n                        class jv {\n                            A.J6G.lvqK.DE T = new A.J6G.lvqK.DE();\n\n                            PH8gSX ZTm = new PH8gSX();\n\n                            PH8gSX.n.A.J6G G = new J6G();\n\n                            PH8gSX lOSb = new PH8gSX();\n                        }\n\n                        class Z5RFz8 {\n                            DE.Z5RFz8 u = new A.J6G.lvqK.DE.Z5RFz8();\n                        }\n\n                        DE.h id = new lvqK.DE.h();\n\n                        n.A F = new A();\n                    }\n\n                    class v {\n                        PH8gSX.n yf0i = new PH8gSX.n();\n\n                        A FzS = new n.A();\n\n                        lvqK.v mo = new A.J6G.lvqK.v();\n                    }\n\n                    PH8gSX.n.A.J6G.lvqK o = new n.A.J6G.lvqK();\n                }\n\n                class R {}\n\n                class m {}\n\n                class l {\n                    n.A.J6G.l Rp = new l();\n                }\n            }\n        }\n\n        class I {}\n\n        PH8gSX kyI = new PH8gSX();\n\n        PH8gSX.n.A a = new PH8gSX.n.A();\n    }\n\n    static class M {}\n\n    class S {\n        S QUWp = new S();\n    }\n\n    static class K {}\n\n    PH8gSX.n W = new n();\n}", innerClass.toString());
    }

    @Test
    public void test007() {
        Launcher launcher = new Launcher();
        launcher.getEnvironment().setComplianceLevel(17);
        launcher.getEnvironment().setAutoImports(true);
        launcher.getEnvironment().setShouldCompile(true);
        launcher.addInputResource(new VirtualFile("class GMQ1 {\n  class iZ {\n    class MEis {\n      class w {\n        class z {\n          class R {\n            class mq {\n              class Z {\n\n                mq SlIV6ulj = new GMQ1.iZ.MEis.w.z.R.mq();\n              }\n              class W{}\n              \n            }\n            class X{}\n            \n          }\n          class PvtP {\n\n            GMQ1.iZ.MEis.w.z Gt6 = new iZ.MEis.w.z();\n          }\n          class Y {\n\n            GMQ1 u = new GMQ1();\n          }\n          MEis.w.z PZ = new MEis.w.z();\n        }\n        class qeMq{}\n        class a{}\n        class n {\n\n          w M = new iZ.MEis.w();\n        }\n        \n      }\n      class l{}\n      class QZR{}\n      iZ qh = new iZ();\n    }\n    class b6{}\n    GMQ1.iZ.MEis hY = new GMQ1.iZ.MEis();\n  }\n  class t {\n\n    GMQ1 P = new GMQ1();\n  }\n  class F {\n\n    GMQ1.F i = new GMQ1.F();\n  }\n  GMQ1 J = new GMQ1();\n  GMQ1 sna = new GMQ1();\n}"));
        CtType<?> innerClass = launcher.buildModel().getAllTypes().iterator().next();
        assertEquals("class GMQ1 {\n    class iZ {\n        class MEis {\n            class w {\n                class z {\n                    class R {\n                        class mq {\n                            class Z {\n                                mq SlIV6ulj = new GMQ1.iZ.MEis.w.z.R.mq();\n                            }\n\n                            class W {}\n                        }\n\n                        class X {}\n                    }\n\n                    class PvtP {\n                        GMQ1.iZ.MEis.w.z Gt6 = new iZ.MEis.w.z();\n                    }\n\n                    class Y {\n                        GMQ1 u = new GMQ1();\n                    }\n\n                    MEis.w.z PZ = new MEis.w.z();\n                }\n\n                class qeMq {}\n\n                class a {}\n\n                class n {\n                    w M = new iZ.MEis.w();\n                }\n            }\n\n            class l {}\n\n            class QZR {}\n\n            iZ qh = new iZ();\n        }\n\n        class b6 {}\n\n        GMQ1.iZ.MEis hY = new GMQ1.iZ.MEis();\n    }\n\n    class t {\n        GMQ1 P = new GMQ1();\n    }\n\n    class F {\n        GMQ1.F i = new GMQ1.F();\n    }\n\n    GMQ1 J = new GMQ1();\n\n    GMQ1 sna = new GMQ1();\n}", innerClass.toString());
    }

    @Test
    public void test008() {
        Launcher launcher = new Launcher();
        launcher.getEnvironment().setComplianceLevel(17);
        launcher.getEnvironment().setAutoImports(true);
        launcher.getEnvironment().setShouldCompile(true);
        launcher.addInputResource(new VirtualFile("class H {\n  class a {\n    class W {\n      class v0jWxCFHuXE {\n        class oz {\n          class j {\n            class jP {\n              class HtQ {\n                class z {\n                  class V {\n                    class GX {\n\n                      W.v0jWxCFHuXE.oz.j.jP.HtQ u = new HtQ();\n                    }\n                    class U_Y{}\n                    class p{}\n                    class EB{}\n                    \n                  }\n                  class c {\n\n                    v0jWxCFHuXE.oz.j p9L = new W.v0jWxCFHuXE.oz.j();\n                  }\n                  class lF6{}\n                  W.v0jWxCFHuXE.oz.j.jP.HtQ.z.c pWl = new j.jP.HtQ.z.c();\n                }\n                class AP {\n\n                  HtQ Sw = new v0jWxCFHuXE.oz.j.jP.HtQ();\n                }\n                class P {\n\n                  v0jWxCFHuXE.oz.j.jP.HtQ ymAb91Jq = new oz.j.jP.HtQ();\n                }\n                class w {\n\n                  j S = new j();\n                  H.a N = new a();\n                  jP.HtQ.w xRf = new HtQ.w();\n                }\n                j.jP.HtQ.z Kc = new a.W.v0jWxCFHuXE.oz.j.jP.HtQ.z();\n              }\n              \n            }\n            class Y {\n\n              v0jWxCFHuXE.oz X = new a.W.v0jWxCFHuXE.oz();\n            }\n            \n          }\n          class E{}\n          class k{}\n          H.a ioYV = new H.a();\n          v0jWxCFHuXE.oz.j m = new a.W.v0jWxCFHuXE.oz.j();\n          v0jWxCFHuXE.oz.k i = new k();\n        }\n        a.W.v0jWxCFHuXE.oz ajc = new H.a.W.v0jWxCFHuXE.oz();\n      }\n      \n    }\n    class S4 {\n\n      a.S4 r = new H.a.S4();\n      a sJl9 = new a();\n    }\n    \n  }\n  H U = new H();\n}"));
        CtType<?> innerClass = launcher.buildModel().getAllTypes().iterator().next();
        assertEquals("class H {\n    class a {\n        class W {\n            class v0jWxCFHuXE {\n                class oz {\n                    class j {\n                        class jP {\n                            class HtQ {\n                                class z {\n                                    class V {\n                                        class GX {\n                                            W.v0jWxCFHuXE.oz.j.jP.HtQ u = new HtQ();\n                                        }\n\n                                        class U_Y {}\n\n                                        class p {}\n\n                                        class EB {}\n                                    }\n\n                                    class c {\n                                        v0jWxCFHuXE.oz.j p9L = new W.v0jWxCFHuXE.oz.j();\n                                    }\n\n                                    class lF6 {}\n\n                                    W.v0jWxCFHuXE.oz.j.jP.HtQ.z.c pWl = new j.jP.HtQ.z.c();\n                                }\n\n                                class AP {\n                                    HtQ Sw = new v0jWxCFHuXE.oz.j.jP.HtQ();\n                                }\n\n                                class P {\n                                    v0jWxCFHuXE.oz.j.jP.HtQ ymAb91Jq = new oz.j.jP.HtQ();\n                                }\n\n                                class w {\n                                    j S = new j();\n\n                                    H.a N = new a();\n\n                                    jP.HtQ.w xRf = new HtQ.w();\n                                }\n\n                                j.jP.HtQ.z Kc = new a.W.v0jWxCFHuXE.oz.j.jP.HtQ.z();\n                            }\n                        }\n\n                        class Y {\n                            v0jWxCFHuXE.oz X = new a.W.v0jWxCFHuXE.oz();\n                        }\n                    }\n\n                    class E {}\n\n                    class k {}\n\n                    H.a ioYV = new H.a();\n\n                    v0jWxCFHuXE.oz.j m = new a.W.v0jWxCFHuXE.oz.j();\n\n                    v0jWxCFHuXE.oz.k i = new k();\n                }\n\n                a.W.v0jWxCFHuXE.oz ajc = new H.a.W.v0jWxCFHuXE.oz();\n            }\n        }\n\n        class S4 {\n            a.S4 r = new H.a.S4();\n\n            a sJl9 = new a();\n        }\n    }\n\n    H U = new H();\n}", innerClass.toString());
    }

    @Test
    public void test009() {
        Launcher launcher = new Launcher();
        launcher.getEnvironment().setComplianceLevel(17);
        launcher.getEnvironment().setAutoImports(true);
        launcher.getEnvironment().setShouldCompile(true);
        launcher.addInputResource(new VirtualFile("class l {\n  class C {\n    class w {\n      class JT {\n        class t {\n          class nz {\n            class h {\n              class cpy4 {\n\n                C m = new l.C();\n              }\n              class mf2i {\n\n                JT.t.nz.h js = new l.C.w.JT.t.nz.h();\n                JT j = new w.JT();\n              }\n              l.C Il = new l.C();\n              C gH3 = new l.C();\n            }\n            class H {\n\n              w.JT.t.nz.H LJ = new nz.H();\n              l.C.w.JT.t.nz L = new nz();\n            }\n            class z {\n\n              C.w.JT oM = new l.C.w.JT();\n            }\n            class R{}\n            \n          }\n          static class M{}\n          class X{}\n          static class c{}\n          l.C.w NXA = new C.w();\n        }\n        l q = new l();\n        w n = new l.C.w();\n      }\n      class aDMPv {\n\n        C a = new C();\n        C mC = new C();\n        C.w xbPO = new l.C.w();\n        aDMPv k = new C.w.aDMPv();\n        w.aDMPv F = new C.w.aDMPv();\n        C.w.aDMPv r = new aDMPv();\n        l g = new l();\n        w mX = new w();\n      }\n      class TQh {\n\n        w C12x = new C.w();\n      }\n      static class N{}\n      l pUd = new l();\n      C.w R_fvm4 = new w();\n      aDMPv gv = new l.C.w.aDMPv();\n      l.C.w I = new l.C.w();\n    }\n    l.C.w kq = new C.w();\n  }\n  class i4bj {\n\n    l hf = new l();\n    i4bj D = new l.i4bj();\n  }\n  static class V{}\n  l su2 = new l();\n  V X4DbN = new V();\n}"));
        CtType<?> innerClass = launcher.buildModel().getAllTypes().iterator().next();
        assertEquals("class l {\n    class C {\n        class w {\n            class JT {\n                class t {\n                    class nz {\n                        class h {\n                            class cpy4 {\n                                C m = new l.C();\n                            }\n\n                            class mf2i {\n                                JT.t.nz.h js = new l.C.w.JT.t.nz.h();\n\n                                JT j = new w.JT();\n                            }\n\n                            l.C Il = new l.C();\n\n                            C gH3 = new l.C();\n                        }\n\n                        class H {\n                            w.JT.t.nz.H LJ = new nz.H();\n\n                            l.C.w.JT.t.nz L = new nz();\n                        }\n\n                        class z {\n                            C.w.JT oM = new l.C.w.JT();\n                        }\n\n                        class R {}\n                    }\n\n                    static class M {}\n\n                    class X {}\n\n                    static class c {}\n\n                    l.C.w NXA = new C.w();\n                }\n\n                l q = new l();\n\n                w n = new l.C.w();\n            }\n\n            class aDMPv {\n                C a = new C();\n\n                C mC = new C();\n\n                C.w xbPO = new l.C.w();\n\n                aDMPv k = new C.w.aDMPv();\n\n                w.aDMPv F = new C.w.aDMPv();\n\n                C.w.aDMPv r = new aDMPv();\n\n                l g = new l();\n\n                w mX = new w();\n            }\n\n            class TQh {\n                w C12x = new C.w();\n            }\n\n            static class N {}\n\n            l pUd = new l();\n\n            C.w R_fvm4 = new w();\n\n            aDMPv gv = new l.C.w.aDMPv();\n\n            l.C.w I = new l.C.w();\n        }\n\n        l.C.w kq = new C.w();\n    }\n\n    class i4bj {\n        l hf = new l();\n\n        i4bj D = new l.i4bj();\n    }\n\n    static class V {}\n\n    l su2 = new l();\n\n    V X4DbN = new V();\n}", innerClass.toString());
    }

    @Test
    public void test010() {
        Launcher launcher = new Launcher();
        launcher.getEnvironment().setComplianceLevel(17);
        launcher.getEnvironment().setAutoImports(true);
        launcher.getEnvironment().setShouldCompile(true);
        launcher.addInputResource(new VirtualFile("class R_U {\n  class m {\n    class JFD {\n      class xKF {\n        class U {\n          class NfIV6NW {\n            class C {\n              class e{}\n              class fPY {\n\n                NfIV6NW.C lCIE5hUZz0Wd = new xKF.U.NfIV6NW.C();\n              }\n              class W {\n\n                U.NfIV6NW.C.W y = new xKF.U.NfIV6NW.C.W();\n                R_U adN3 = new R_U();\n                R_U.m V = new R_U.m();\n              }\n              R_U.m Fh3G = new R_U.m();\n              m.JFD B = new JFD();\n              R_U H = new R_U();\n            }\n            class o_a{}\n            class OFR {\n\n              R_U.m.JFD SMX = new JFD();\n            }\n            class z{}\n            \n          }\n          class X {\n\n            R_U n = new R_U();\n            R_U Q9i = new R_U();\n            JFD.xKF.U.X uOYOm = new X();\n          }\n          class L{}\n          class tx0 {\n\n            R_U.m.JFD.xKF c = new JFD.xKF();\n            R_U q_f = new R_U();\n          }\n          R_U.m x = new m();\n        }\n        \n      }\n      class P {\n\n        R_U.m s = new m();\n      }\n      class wC {\n\n        R_U l = new R_U();\n        R_U.m D = new R_U.m();\n      }\n      class to{}\n      \n    }\n    class oNl{}\n    class F {\n\n      R_U x3 = new R_U();\n    }\n    \n  }\n  static class X8{}\n  \n}"));
        CtType<?> innerClass = launcher.buildModel().getAllTypes().iterator().next();
        assertEquals("class R_U {\n    class m {\n        class JFD {\n            class xKF {\n                class U {\n                    class NfIV6NW {\n                        class C {\n                            class e {}\n\n                            class fPY {\n                                NfIV6NW.C lCIE5hUZz0Wd = new xKF.U.NfIV6NW.C();\n                            }\n\n                            class W {\n                                U.NfIV6NW.C.W y = new xKF.U.NfIV6NW.C.W();\n\n                                R_U adN3 = new R_U();\n\n                                R_U.m V = new R_U.m();\n                            }\n\n                            R_U.m Fh3G = new R_U.m();\n\n                            m.JFD B = new JFD();\n\n                            R_U H = new R_U();\n                        }\n\n                        class o_a {}\n\n                        class OFR {\n                            R_U.m.JFD SMX = new JFD();\n                        }\n\n                        class z {}\n                    }\n\n                    class X {\n                        R_U n = new R_U();\n\n                        R_U Q9i = new R_U();\n\n                        JFD.xKF.U.X uOYOm = new X();\n                    }\n\n                    class L {}\n\n                    class tx0 {\n                        R_U.m.JFD.xKF c = new JFD.xKF();\n\n                        R_U q_f = new R_U();\n                    }\n\n                    R_U.m x = new m();\n                }\n            }\n\n            class P {\n                R_U.m s = new m();\n            }\n\n            class wC {\n                R_U l = new R_U();\n\n                R_U.m D = new R_U.m();\n            }\n\n            class to {}\n        }\n\n        class oNl {}\n\n        class F {\n            R_U x3 = new R_U();\n        }\n    }\n\n    static class X8 {}\n}", innerClass.toString());
    }

    @Test
    public void test011() {
        Launcher launcher = new Launcher();
        launcher.getEnvironment().setComplianceLevel(17);
        launcher.getEnvironment().setAutoImports(true);
        launcher.getEnvironment().setShouldCompile(true);
        launcher.addInputResource(new VirtualFile("class U {\n  class W {\n    class N {\n      class Wj {\n        class C {\n          class q7K6 {\n            class g {\n              class lH{}\n              class AUDMq{}\n              class y{}\n              \n            }\n            class bP {\n\n              N.Wj.C I = new Wj.C();\n            }\n            W.N.Wj.C e = new W.N.Wj.C();\n            Wj K = new U.W.N.Wj();\n            W.N.Wj.C qw = new C();\n          }\n          class Gr{}\n          U QLXWz = new U();\n          Wj yZB = new Wj();\n          W xZp_v = new W();\n          C lu7T = new C();\n          W.N m = new W.N();\n          U.W pH = new W();\n        }\n        class Wc {\n\n          U.W.N.Wj Dj = new Wj();\n          U z = new U();\n          U V = new U();\n        }\n        class A {\n\n          W Wl = new W();\n          U.W n = new U.W();\n        }\n        class ZZF{}\n        \n      }\n      class w {\n\n        U tdl7i = new U();\n        U hmJF = new U();\n      }\n      class HV{}\n      class E {\n\n        W.N lG = new U.W.N();\n      }\n      U H = new U();\n    }\n    class Z{}\n    \n  }\n  class b {\n\n    b o = new b();\n  }\n  class BgMi {\n\n    U a2i = new U();\n    BgMi Xd = new U.BgMi();\n  }\n  static class j9{}\n  j9 M = new U.j9();\n}"));
        CtType<?> innerClass = launcher.buildModel().getAllTypes().iterator().next();
        assertEquals("class U {\n    class W {\n        class N {\n            class Wj {\n                class C {\n                    class q7K6 {\n                        class g {\n                            class lH {}\n\n                            class AUDMq {}\n\n                            class y {}\n                        }\n\n                        class bP {\n                            N.Wj.C I = new Wj.C();\n                        }\n\n                        W.N.Wj.C e = new W.N.Wj.C();\n\n                        Wj K = new U.W.N.Wj();\n\n                        W.N.Wj.C qw = new C();\n                    }\n\n                    class Gr {}\n\n                    U QLXWz = new U();\n\n                    Wj yZB = new Wj();\n\n                    W xZp_v = new W();\n\n                    C lu7T = new C();\n\n                    W.N m = new W.N();\n\n                    U.W pH = new W();\n                }\n\n                class Wc {\n                    U.W.N.Wj Dj = new Wj();\n\n                    U z = new U();\n\n                    U V = new U();\n                }\n\n                class A {\n                    W Wl = new W();\n\n                    U.W n = new U.W();\n                }\n\n                class ZZF {}\n            }\n\n            class w {\n                U tdl7i = new U();\n\n                U hmJF = new U();\n            }\n\n            class HV {}\n\n            class E {\n                W.N lG = new U.W.N();\n            }\n\n            U H = new U();\n        }\n\n        class Z {}\n    }\n\n    class b {\n        b o = new b();\n    }\n\n    class BgMi {\n        U a2i = new U();\n\n        BgMi Xd = new U.BgMi();\n    }\n\n    static class j9 {}\n\n    j9 M = new U.j9();\n}", innerClass.toString());
    }

    @Test
    public void test012() {
        Launcher launcher = new Launcher();
        launcher.getEnvironment().setComplianceLevel(17);
        launcher.getEnvironment().setAutoImports(true);
        launcher.getEnvironment().setShouldCompile(true);
        launcher.addInputResource(new VirtualFile("class C {\n  class j {\n    class Yr {\n      class v {\n        class H {\n          class Y {\n            class Qz{}\n            class WS1{}\n            class D {\n\n              Yr.v.H.Y kTg = new Yr.v.H.Y();\n              C ZB = new C();\n              v pTvf = new Yr.v();\n            }\n            class zV {\n\n              H.Y.zV V = new Y.zV();\n            }\n            \n          }\n          class R9m {\n\n            C.j.Yr.v.H.R9m rbb = new v.H.R9m();\n            C vjCu = new C();\n            C K = new C();\n            v A = new j.Yr.v();\n            H.R9m Lfh5 = new Yr.v.H.R9m();\n          }\n          class k{}\n          class m71 {\n\n            Yr.v w = new Yr.v();\n            C.j.Yr.v.H C2W = new Yr.v.H();\n            H T = new v.H();\n          }\n          C.j.Yr U = new C.j.Yr();\n          Yr jq = new j.Yr();\n        }\n        class L {\n\n          C.j.Yr.v l = new C.j.Yr.v();\n          C nC = new C();\n        }\n        class QE{}\n        class B{}\n        \n      }\n      class h {\n\n        C n = new C();\n        C kQs = new C();\n      }\n      class d {\n\n        Yr Nt = new C.j.Yr();\n      }\n      class S{}\n      C.j.Yr r = new j.Yr();\n      Yr wa = new C.j.Yr();\n    }\n    class f{}\n    j aKe = new j();\n    C y = new C();\n  }\n  class LKwgi5{}\n  class W {\n\n    C syu = new C();\n  }\n  static class sA{}\n  \n}"));
        CtType<?> innerClass = launcher.buildModel().getAllTypes().iterator().next();
        assertEquals("class C {\n    class j {\n        class Yr {\n            class v {\n                class H {\n                    class Y {\n                        class Qz {}\n\n                        class WS1 {}\n\n                        class D {\n                            Yr.v.H.Y kTg = new Yr.v.H.Y();\n\n                            C ZB = new C();\n\n                            v pTvf = new Yr.v();\n                        }\n\n                        class zV {\n                            H.Y.zV V = new Y.zV();\n                        }\n                    }\n\n                    class R9m {\n                        C.j.Yr.v.H.R9m rbb = new v.H.R9m();\n\n                        C vjCu = new C();\n\n                        C K = new C();\n\n                        v A = new j.Yr.v();\n\n                        H.R9m Lfh5 = new Yr.v.H.R9m();\n                    }\n\n                    class k {}\n\n                    class m71 {\n                        Yr.v w = new Yr.v();\n\n                        C.j.Yr.v.H C2W = new Yr.v.H();\n\n                        H T = new v.H();\n                    }\n\n                    C.j.Yr U = new C.j.Yr();\n\n                    Yr jq = new j.Yr();\n                }\n\n                class L {\n                    C.j.Yr.v l = new C.j.Yr.v();\n\n                    C nC = new C();\n                }\n\n                class QE {}\n\n                class B {}\n            }\n\n            class h {\n                C n = new C();\n\n                C kQs = new C();\n            }\n\n            class d {\n                Yr Nt = new C.j.Yr();\n            }\n\n            class S {}\n\n            C.j.Yr r = new j.Yr();\n\n            Yr wa = new C.j.Yr();\n        }\n\n        class f {}\n\n        j aKe = new j();\n\n        C y = new C();\n    }\n\n    class LKwgi5 {}\n\n    class W {\n        C syu = new C();\n    }\n\n    static class sA {}\n}", innerClass.toString());
    }

    @Test
    public void test013() {
        Launcher launcher = new Launcher();
        launcher.getEnvironment().setComplianceLevel(17);
        launcher.getEnvironment().setAutoImports(true);
        launcher.getEnvironment().setShouldCompile(true);
        launcher.addInputResource(new VirtualFile("class McG {\n  class mUmmWUjUd {\n    class W {\n      class k {\n        class A {\n          class J {\n            class c {\n              class n {\n                class o {\n\n                  McG.mUmmWUjUd.W.k.A.J.c q = new A.J.c();\n                }\n                class f {\n\n                  McG.mUmmWUjUd.W.k.A.J.c QB = new A.J.c();\n                  W.k g = new McG.mUmmWUjUd.W.k();\n                  J.c.n.f s = new W.k.A.J.c.n.f();\n                }\n                class j{}\n                class th9 {\n\n                  mUmmWUjUd.W.k.A L = new A();\n                  W.k r = new k();\n                }\n                \n              }\n              class H{}\n              McG.mUmmWUjUd.W z = new mUmmWUjUd.W();\n              W.k.A.J.c.H cZLWzO8 = new A.J.c.H();\n            }\n            class l {\n\n              McG.mUmmWUjUd.W.k.A dVxXP = new A();\n            }\n            class qYc{}\n            mUmmWUjUd.W.k XM = new k();\n            McG.mUmmWUjUd ju = new mUmmWUjUd();\n            A.J V = new McG.mUmmWUjUd.W.k.A.J();\n          }\n          class TNA{}\n          \n        }\n        class Xp {\n\n          McG.mUmmWUjUd.W.k.Xp zTL = new mUmmWUjUd.W.k.Xp();\n          McG C = new McG();\n          mUmmWUjUd.W bu = new mUmmWUjUd.W();\n        }\n        \n      }\n      class mg{}\n      class r1q{}\n      class w6p{}\n      mUmmWUjUd.W b = new W();\n    }\n    McG d = new McG();\n  }\n  \n}"));
        CtType<?> innerClass = launcher.buildModel().getAllTypes().iterator().next();
        assertEquals("class McG {\n    class mUmmWUjUd {\n        class W {\n            class k {\n                class A {\n                    class J {\n                        class c {\n                            class n {\n                                class o {\n                                    McG.mUmmWUjUd.W.k.A.J.c q = new A.J.c();\n                                }\n\n                                class f {\n                                    McG.mUmmWUjUd.W.k.A.J.c QB = new A.J.c();\n\n                                    W.k g = new McG.mUmmWUjUd.W.k();\n\n                                    J.c.n.f s = new W.k.A.J.c.n.f();\n                                }\n\n                                class j {}\n\n                                class th9 {\n                                    mUmmWUjUd.W.k.A L = new A();\n\n                                    W.k r = new k();\n                                }\n                            }\n\n                            class H {}\n\n                            McG.mUmmWUjUd.W z = new mUmmWUjUd.W();\n\n                            W.k.A.J.c.H cZLWzO8 = new A.J.c.H();\n                        }\n\n                        class l {\n                            McG.mUmmWUjUd.W.k.A dVxXP = new A();\n                        }\n\n                        class qYc {}\n\n                        mUmmWUjUd.W.k XM = new k();\n\n                        McG.mUmmWUjUd ju = new mUmmWUjUd();\n\n                        A.J V = new McG.mUmmWUjUd.W.k.A.J();\n                    }\n\n                    class TNA {}\n                }\n\n                class Xp {\n                    McG.mUmmWUjUd.W.k.Xp zTL = new mUmmWUjUd.W.k.Xp();\n\n                    McG C = new McG();\n\n                    mUmmWUjUd.W bu = new mUmmWUjUd.W();\n                }\n            }\n\n            class mg {}\n\n            class r1q {}\n\n            class w6p {}\n\n            mUmmWUjUd.W b = new W();\n        }\n\n        McG d = new McG();\n    }\n}", innerClass.toString());
    }

    @Test
    public void test014() {
        Launcher launcher = new Launcher();
        launcher.getEnvironment().setComplianceLevel(17);
        launcher.getEnvironment().setAutoImports(true);
        launcher.getEnvironment().setShouldCompile(true);
        launcher.addInputResource(new VirtualFile("class W {\n  class Ko {\n    class br {\n      class U {\n        class k {\n          class fd {\n            class FK {\n              class P {\n                class N {\n                  class pn{}\n                  \n                }\n                class gc{}\n                class f{}\n                class BCV{}\n                \n              }\n              class O{}\n              class u {\n\n                W.Ko bVH = new W.Ko();\n                br.U Y = new br.U();\n                k.fd.FK Ea = new U.k.fd.FK();\n              }\n              \n            }\n            class nt{}\n            W.Ko.br.U.k.fd y0N = new Ko.br.U.k.fd();\n          }\n          \n        }\n        \n      }\n      static class RH{}\n      W.Ko.br.RH R = new W.Ko.br.RH();\n    }\n    static class KzQh{}\n    class q {\n\n      Ko y = new W.Ko();\n      Ko I = new W.Ko();\n      Ko w = new W.Ko();\n    }\n    \n  }\n  class C6 {\n\n    C6 apoPC = new C6();\n  }\n  \n}"));
        CtType<?> innerClass = launcher.buildModel().getAllTypes().iterator().next();
        assertEquals("class W {\n    class Ko {\n        class br {\n            class U {\n                class k {\n                    class fd {\n                        class FK {\n                            class P {\n                                class N {\n                                    class pn {}\n                                }\n\n                                class gc {}\n\n                                class f {}\n\n                                class BCV {}\n                            }\n\n                            class O {}\n\n                            class u {\n                                W.Ko bVH = new W.Ko();\n\n                                br.U Y = new br.U();\n\n                                k.fd.FK Ea = new U.k.fd.FK();\n                            }\n                        }\n\n                        class nt {}\n\n                        W.Ko.br.U.k.fd y0N = new Ko.br.U.k.fd();\n                    }\n                }\n            }\n\n            static class RH {}\n\n            W.Ko.br.RH R = new W.Ko.br.RH();\n        }\n\n        static class KzQh {}\n\n        class q {\n            Ko y = new W.Ko();\n\n            Ko I = new W.Ko();\n\n            Ko w = new W.Ko();\n        }\n    }\n\n    class C6 {\n        C6 apoPC = new C6();\n    }\n}", innerClass.toString());
    }

    @Test
    public void test015() {
        Launcher launcher = new Launcher();
        launcher.getEnvironment().setComplianceLevel(17);
        launcher.getEnvironment().setAutoImports(true);
        launcher.getEnvironment().setShouldCompile(true);
        launcher.addInputResource(new VirtualFile("class cR9Sg {\n  class JgaH {\n    class ZE {\n      class vV {\n        class H {\n          class u_ {\n            class J0{}\n            \n          }\n          class uTF{}\n          class Bqx {\n\n            H g = new H();\n            ZE.vV lxjYC = new vV();\n            JgaH.ZE w = new ZE();\n            cR9Sg.JgaH LMY = new cR9Sg.JgaH();\n            cR9Sg b_ = new cR9Sg();\n          }\n          class s {\n\n            cR9Sg N = new cR9Sg();\n            H.s z = new JgaH.ZE.vV.H.s();\n            vV zl1G = new vV();\n            JgaH.ZE.vV q5X3WK = new JgaH.ZE.vV();\n            JgaH xs = new cR9Sg.JgaH();\n          }\n          JgaH q = new cR9Sg.JgaH();\n        }\n        class Vra4{}\n        class g_ {\n\n          JgaH x = new JgaH();\n        }\n        class Kc {\n\n          cR9Sg.JgaH Q = new JgaH();\n          JgaH qM17 = new JgaH();\n        }\n        cR9Sg H3tj = new cR9Sg();\n        cR9Sg.JgaH.ZE L = new ZE();\n        ZE sr = new JgaH.ZE();\n      }\n      class k {\n\n        JgaH.ZE M = new ZE();\n      }\n      class jj{}\n      \n    }\n    class AxX{}\n    class b6X{}\n    JgaH oA = new JgaH();\n    JgaH.AxX Z = new AxX();\n    JgaH I = new cR9Sg.JgaH();\n  }\n  class vK {\n\n    cR9Sg P = new cR9Sg();\n    cR9Sg n = new cR9Sg();\n  }\n  static class ex{}\n  class Z1 {\n\n    cR9Sg.Z1 U = new cR9Sg.Z1();\n    cR9Sg y29 = new cR9Sg();\n    cR9Sg O = new cR9Sg();\n  }\n  \n}"));
        CtType<?> innerClass = launcher.buildModel().getAllTypes().iterator().next();
        assertEquals("class cR9Sg {\n    class JgaH {\n        class ZE {\n            class vV {\n                class H {\n                    class u_ {\n                        class J0 {}\n                    }\n\n                    class uTF {}\n\n                    class Bqx {\n                        H g = new H();\n\n                        ZE.vV lxjYC = new vV();\n\n                        JgaH.ZE w = new ZE();\n\n                        cR9Sg.JgaH LMY = new cR9Sg.JgaH();\n\n                        cR9Sg b_ = new cR9Sg();\n                    }\n\n                    class s {\n                        cR9Sg N = new cR9Sg();\n\n                        H.s z = new JgaH.ZE.vV.H.s();\n\n                        vV zl1G = new vV();\n\n                        JgaH.ZE.vV q5X3WK = new JgaH.ZE.vV();\n\n                        JgaH xs = new cR9Sg.JgaH();\n                    }\n\n                    JgaH q = new cR9Sg.JgaH();\n                }\n\n                class Vra4 {}\n\n                class g_ {\n                    JgaH x = new JgaH();\n                }\n\n                class Kc {\n                    cR9Sg.JgaH Q = new JgaH();\n\n                    JgaH qM17 = new JgaH();\n                }\n\n                cR9Sg H3tj = new cR9Sg();\n\n                cR9Sg.JgaH.ZE L = new ZE();\n\n                ZE sr = new JgaH.ZE();\n            }\n\n            class k {\n                JgaH.ZE M = new ZE();\n            }\n\n            class jj {}\n        }\n\n        class AxX {}\n\n        class b6X {}\n\n        JgaH oA = new JgaH();\n\n        JgaH.AxX Z = new AxX();\n\n        JgaH I = new cR9Sg.JgaH();\n    }\n\n    class vK {\n        cR9Sg P = new cR9Sg();\n\n        cR9Sg n = new cR9Sg();\n    }\n\n    static class ex {}\n\n    class Z1 {\n        cR9Sg.Z1 U = new cR9Sg.Z1();\n\n        cR9Sg y29 = new cR9Sg();\n\n        cR9Sg O = new cR9Sg();\n    }\n}", innerClass.toString());
    }

    @Test
    public void test016() {
        Launcher launcher = new Launcher();
        launcher.getEnvironment().setComplianceLevel(17);
        launcher.getEnvironment().setAutoImports(true);
        launcher.getEnvironment().setShouldCompile(true);
        launcher.addInputResource(new VirtualFile("class F {\n  class K {\n    class Pcvs {\n      class Y {\n        class j {\n          class iKE {\n            class n {\n              class TC8 {\n                class m{}\n                class MKBkM {\n\n                  j JS = new K.Pcvs.Y.j();\n                  Pcvs.Y.j.iKE.n.TC8 tE = new F.K.Pcvs.Y.j.iKE.n.TC8();\n                }\n                static class p{}\n                class Kt_ {\n\n                  Y.j.iKE.n.TC8.Kt_ t = new K.Pcvs.Y.j.iKE.n.TC8.Kt_();\n                }\n                Y s = new Pcvs.Y();\n                F.K.Pcvs.Y tpInD = new Pcvs.Y();\n                n L = new F.K.Pcvs.Y.j.iKE.n();\n                Pcvs Z = new F.K.Pcvs();\n                Y.j.iKE.n b = new K.Pcvs.Y.j.iKE.n();\n              }\n              class ou07 {\n\n                Y.j.iKE y78 = new iKE();\n                F.K N = new F.K();\n                Y.j.iKE GW = new K.Pcvs.Y.j.iKE();\n                K NiTrHD = new F.K();\n              }\n              \n            }\n            class Yd9 {\n\n              F.K.Pcvs.Y.j.iKE z_ = new j.iKE();\n              Y.j.iKE Gy3Fn = new iKE();\n            }\n            \n          }\n          class PJAVvw{}\n          \n        }\n        static class QS{}\n        static class O{}\n        static class cLrlj{}\n        F.K R = new K();\n      }\n      static class M{}\n      static class d{}\n      \n    }\n    static class e{}\n    class S {\n\n      F.K w5T = new K();\n    }\n    class pW {\n\n      pW m8 = new pW();\n      F ZZ = new F();\n    }\n    F.K Ph = new F.K();\n    F Uw3 = new F();\n  }\n  \n}"));
        CtType<?> innerClass = launcher.buildModel().getAllTypes().iterator().next();
        assertEquals("class F {\n    class K {\n        class Pcvs {\n            class Y {\n                class j {\n                    class iKE {\n                        class n {\n                            class TC8 {\n                                class m {}\n\n                                class MKBkM {\n                                    j JS = new K.Pcvs.Y.j();\n\n                                    Pcvs.Y.j.iKE.n.TC8 tE = new F.K.Pcvs.Y.j.iKE.n.TC8();\n                                }\n\n                                static class p {}\n\n                                class Kt_ {\n                                    Y.j.iKE.n.TC8.Kt_ t = new K.Pcvs.Y.j.iKE.n.TC8.Kt_();\n                                }\n\n                                Y s = new Pcvs.Y();\n\n                                F.K.Pcvs.Y tpInD = new Pcvs.Y();\n\n                                n L = new F.K.Pcvs.Y.j.iKE.n();\n\n                                Pcvs Z = new F.K.Pcvs();\n\n                                Y.j.iKE.n b = new K.Pcvs.Y.j.iKE.n();\n                            }\n\n                            class ou07 {\n                                Y.j.iKE y78 = new iKE();\n\n                                F.K N = new F.K();\n\n                                Y.j.iKE GW = new K.Pcvs.Y.j.iKE();\n\n                                K NiTrHD = new F.K();\n                            }\n                        }\n\n                        class Yd9 {\n                            F.K.Pcvs.Y.j.iKE z_ = new j.iKE();\n\n                            Y.j.iKE Gy3Fn = new iKE();\n                        }\n                    }\n\n                    class PJAVvw {}\n                }\n\n                static class QS {}\n\n                static class O {}\n\n                static class cLrlj {}\n\n                F.K R = new K();\n            }\n\n            static class M {}\n\n            static class d {}\n        }\n\n        static class e {}\n\n        class S {\n            F.K w5T = new K();\n        }\n\n        class pW {\n            pW m8 = new pW();\n\n            F ZZ = new F();\n        }\n\n        F.K Ph = new F.K();\n\n        F Uw3 = new F();\n    }\n}", innerClass.toString());
    }

    @Test
    public void test017() {
        Launcher launcher = new Launcher();
        launcher.getEnvironment().setComplianceLevel(17);
        launcher.getEnvironment().setAutoImports(true);
        launcher.getEnvironment().setShouldCompile(true);
        launcher.addInputResource(new VirtualFile("class e {\n  class Q {\n    class D {\n      class OV3 {\n        class ws_ {\n          class I {\n            class J{}\n            class c{}\n            \n          }\n          class C{}\n          class O{}\n          class i {\n\n            e.Q ooB = new Q();\n            D.OV3.ws_ PnyR = new D.OV3.ws_();\n            OV3.ws_.i w = new D.OV3.ws_.i();\n          }\n          e mF = new e();\n        }\n        e.Q H34 = new e.Q();\n      }\n      class s {\n\n        Q.D m = new D();\n      }\n      class qx {\n\n        Q IQX = new Q();\n      }\n      class sct {\n\n        D.sct R = new sct();\n      }\n      \n    }\n    static class CcJ{}\n    class k {\n\n      Q X = new Q();\n    }\n    class o {\n\n      o LQ = new e.Q.o();\n    }\n    D Z = new D();\n    Q.D tS = new Q.D();\n    e.Q.o yn8E = new e.Q.o();\n    e no = new e();\n  }\n  class z {\n\n    z j = new z();\n    e q = new e();\n    e x = new e();\n  }\n  class Un{}\n  static class Wv{}\n  \n}"));
        CtType<?> innerClass = launcher.buildModel().getAllTypes().iterator().next();
        assertEquals("class e {\n    class Q {\n        class D {\n            class OV3 {\n                class ws_ {\n                    class I {\n                        class J {}\n\n                        class c {}\n                    }\n\n                    class C {}\n\n                    class O {}\n\n                    class i {\n                        e.Q ooB = new Q();\n\n                        D.OV3.ws_ PnyR = new D.OV3.ws_();\n\n                        OV3.ws_.i w = new D.OV3.ws_.i();\n                    }\n\n                    e mF = new e();\n                }\n\n                e.Q H34 = new e.Q();\n            }\n\n            class s {\n                Q.D m = new D();\n            }\n\n            class qx {\n                Q IQX = new Q();\n            }\n\n            class sct {\n                D.sct R = new sct();\n            }\n        }\n\n        static class CcJ {}\n\n        class k {\n            Q X = new Q();\n        }\n\n        class o {\n            o LQ = new e.Q.o();\n        }\n\n        D Z = new D();\n\n        Q.D tS = new Q.D();\n\n        e.Q.o yn8E = new e.Q.o();\n\n        e no = new e();\n    }\n\n    class z {\n        z j = new z();\n\n        e q = new e();\n\n        e x = new e();\n    }\n\n    class Un {}\n\n    static class Wv {}\n}", innerClass.toString());
    }

    @Test
    public void test018() {
        Launcher launcher = new Launcher();
        launcher.getEnvironment().setComplianceLevel(17);
        launcher.getEnvironment().setAutoImports(true);
        launcher.getEnvironment().setShouldCompile(true);
        launcher.addInputResource(new VirtualFile("class R {\n  class J {\n    class keA {\n      class hz9 {\n        class Jr {\n          class p {\n            class cY {\n              class O {\n                class sd {\n                  class Br {\n                    class i {\n                      class x {\n\n                        Br.i.x Y54 = new Br.i.x();\n                        hz9.Jr.p.cY p4y = new keA.hz9.Jr.p.cY();\n                      }\n                      class r{}\n                      class ds{}\n                      \n                    }\n                    J lv = new R.J();\n                  }\n                  \n                }\n                \n              }\n              J.keA.hz9.Jr.p wvXuk = new J.keA.hz9.Jr.p();\n            }\n            \n          }\n          class Z3 {\n\n            keA.hz9.Jr h4 = new keA.hz9.Jr();\n          }\n          class ioBQl {\n\n            R.J g = new J();\n          }\n          \n        }\n        class o{}\n        class fT{}\n        class XOD {\n\n          R.J.keA.hz9 e6 = new J.keA.hz9();\n        }\n        \n      }\n      class m {\n\n        R RNkU = new R();\n      }\n      \n    }\n    class C {\n\n      J afTp = new J();\n    }\n    \n  }\n  class w {\n\n    R K3 = new R();\n    R D = new R();\n    R F1 = new R();\n  }\n  R F = new R();\n  R yM = new R();\n}"));
        CtType<?> innerClass = launcher.buildModel().getAllTypes().iterator().next();
        assertEquals("class R {\n    class J {\n        class keA {\n            class hz9 {\n                class Jr {\n                    class p {\n                        class cY {\n                            class O {\n                                class sd {\n                                    class Br {\n                                        class i {\n                                            class x {\n                                                Br.i.x Y54 = new Br.i.x();\n\n                                                hz9.Jr.p.cY p4y = new keA.hz9.Jr.p.cY();\n                                            }\n\n                                            class r {}\n\n                                            class ds {}\n                                        }\n\n                                        J lv = new R.J();\n                                    }\n                                }\n                            }\n\n                            J.keA.hz9.Jr.p wvXuk = new J.keA.hz9.Jr.p();\n                        }\n                    }\n\n                    class Z3 {\n                        keA.hz9.Jr h4 = new keA.hz9.Jr();\n                    }\n\n                    class ioBQl {\n                        R.J g = new J();\n                    }\n                }\n\n                class o {}\n\n                class fT {}\n\n                class XOD {\n                    R.J.keA.hz9 e6 = new J.keA.hz9();\n                }\n            }\n\n            class m {\n                R RNkU = new R();\n            }\n        }\n\n        class C {\n            J afTp = new J();\n        }\n    }\n\n    class w {\n        R K3 = new R();\n\n        R D = new R();\n\n        R F1 = new R();\n    }\n\n    R F = new R();\n\n    R yM = new R();\n}", innerClass.toString());
    }

    @Test
    public void test019() {
        Launcher launcher = new Launcher();
        launcher.getEnvironment().setComplianceLevel(17);
        launcher.getEnvironment().setAutoImports(true);
        launcher.getEnvironment().setShouldCompile(true);
        launcher.addInputResource(new VirtualFile("class m {\n  class YI {\n    class Sn7zZ {\n      class gw {\n        class X0 {\n          class Qn {\n            class na7Lp {\n              class un{}\n              class e7kS{}\n              class B{}\n              class s{}\n              \n            }\n            class kHWP{}\n            class aC {\n\n              gw z = new m.YI.Sn7zZ.gw();\n            }\n            gw.X0 NR = new X0();\n          }\n          class I{}\n          class O{}\n          class R{}\n          \n        }\n        class tX9{}\n        class w2Mq{}\n        YI.Sn7zZ dU = new YI.Sn7zZ();\n      }\n      class P {\n\n        Sn7zZ.P r = new P();\n      }\n      class Bv{}\n      class Fdx {\n\n        m.YI Vp = new YI();\n        m.YI.Sn7zZ Te = new Sn7zZ();\n        m.YI kt = new YI();\n      }\n      m.YI wCFo = new m.YI();\n      YI.Sn7zZ h = new YI.Sn7zZ();\n    }\n    Sn7zZ Hr = new YI.Sn7zZ();\n  }\n  class C{}\n  class V {\n\n    m S = new m();\n    V VV = new V();\n  }\n  \n}"));
        CtType<?> innerClass = launcher.buildModel().getAllTypes().iterator().next();
        assertEquals("class m {\n    class YI {\n        class Sn7zZ {\n            class gw {\n                class X0 {\n                    class Qn {\n                        class na7Lp {\n                            class un {}\n\n                            class e7kS {}\n\n                            class B {}\n\n                            class s {}\n                        }\n\n                        class kHWP {}\n\n                        class aC {\n                            gw z = new m.YI.Sn7zZ.gw();\n                        }\n\n                        gw.X0 NR = new X0();\n                    }\n\n                    class I {}\n\n                    class O {}\n\n                    class R {}\n                }\n\n                class tX9 {}\n\n                class w2Mq {}\n\n                YI.Sn7zZ dU = new YI.Sn7zZ();\n            }\n\n            class P {\n                Sn7zZ.P r = new P();\n            }\n\n            class Bv {}\n\n            class Fdx {\n                m.YI Vp = new YI();\n\n                m.YI.Sn7zZ Te = new Sn7zZ();\n\n                m.YI kt = new YI();\n            }\n\n            m.YI wCFo = new m.YI();\n\n            YI.Sn7zZ h = new YI.Sn7zZ();\n        }\n\n        Sn7zZ Hr = new YI.Sn7zZ();\n    }\n\n    class C {}\n\n    class V {\n        m S = new m();\n\n        V VV = new V();\n    }\n}", innerClass.toString());
    }

    @Test
    public void test020() {
        Launcher launcher = new Launcher();
        launcher.getEnvironment().setComplianceLevel(17);
        launcher.getEnvironment().setAutoImports(true);
        launcher.getEnvironment().setShouldCompile(true);
        launcher.addInputResource(new VirtualFile("class b {\n  class bB {\n    class f {\n      class PDP {\n        class H {\n          class g {\n            class v {\n              class j{}\n              class dC0P{}\n              class O {\n\n                bB.f lE18 = new f();\n              }\n              class k {\n\n                H.g nK = new PDP.H.g();\n              }\n              bB.f.PDP d = new PDP();\n              b.bB.f HVh = new b.bB.f();\n              bB.f hv = new b.bB.f();\n              b m = new b();\n              b.bB q = new b.bB();\n            }\n            \n          }\n          class RG {\n\n            f.PDP.H.RG ui = new H.RG();\n          }\n          class kh {\n\n            bB.f.PDP.H.kh i = new bB.f.PDP.H.kh();\n          }\n          bB.f.PDP.H Yg = new H();\n          bB QKB = new b.bB();\n          b.bB.f.PDP.H.kh wv = new kh();\n          b C = new b();\n          bB WznmN = new bB();\n          f r = new f();\n        }\n        class w {\n\n          bB.f.PDP X = new b.bB.f.PDP();\n          b e = new b();\n        }\n        class o {\n\n          b.bB.f Oq = new b.bB.f();\n        }\n        \n      }\n      class Y{}\n      class M {\n\n        f fm = new b.bB.f();\n      }\n      bB B = new bB();\n      b.bB x = new bB();\n    }\n    \n  }\n  static class K{}\n  class tIQ{}\n  class J {\n\n    b.J Du1u = new J();\n  }\n  \n}"));
        CtType<?> innerClass = launcher.buildModel().getAllTypes().iterator().next();
        assertEquals("class b {\n    class bB {\n        class f {\n            class PDP {\n                class H {\n                    class g {\n                        class v {\n                            class j {}\n\n                            class dC0P {}\n\n                            class O {\n                                bB.f lE18 = new f();\n                            }\n\n                            class k {\n                                H.g nK = new PDP.H.g();\n                            }\n\n                            bB.f.PDP d = new PDP();\n\n                            b.bB.f HVh = new b.bB.f();\n\n                            bB.f hv = new b.bB.f();\n\n                            b m = new b();\n\n                            b.bB q = new b.bB();\n                        }\n                    }\n\n                    class RG {\n                        f.PDP.H.RG ui = new H.RG();\n                    }\n\n                    class kh {\n                        bB.f.PDP.H.kh i = new bB.f.PDP.H.kh();\n                    }\n\n                    bB.f.PDP.H Yg = new H();\n\n                    bB QKB = new b.bB();\n\n                    b.bB.f.PDP.H.kh wv = new kh();\n\n                    b C = new b();\n\n                    bB WznmN = new bB();\n\n                    f r = new f();\n                }\n\n                class w {\n                    bB.f.PDP X = new b.bB.f.PDP();\n\n                    b e = new b();\n                }\n\n                class o {\n                    b.bB.f Oq = new b.bB.f();\n                }\n            }\n\n            class Y {}\n\n            class M {\n                f fm = new b.bB.f();\n            }\n\n            bB B = new bB();\n\n            b.bB x = new bB();\n        }\n    }\n\n    static class K {}\n\n    class tIQ {}\n\n    class J {\n        b.J Du1u = new J();\n    }\n}", innerClass.toString());
    }

    @Test
    public void test021() {
        Launcher launcher = new Launcher();
        launcher.getEnvironment().setComplianceLevel(17);
        launcher.getEnvironment().setAutoImports(true);
        launcher.getEnvironment().setShouldCompile(true);
        launcher.addInputResource(new VirtualFile("class J {\n  class t {\n    class ETs {\n      class T {\n        class QMD {\n          class jqe {\n            class o {\n              class Y {\n                class v {\n                  class b {\n\n                    QMD.jqe.o XEqx = new jqe.o();\n                  }\n                  class R{}\n                  class U12 {\n\n                    ETs.T.QMD sySm = new QMD();\n                    ETs.T P = new ETs.T();\n                  }\n                  class p1Ad{}\n                  \n                }\n                class r{}\n                class X {\n\n                  Y.X g = new jqe.o.Y.X();\n                }\n                J.t e = new J.t();\n              }\n              QMD.jqe fU4 = new J.t.ETs.T.QMD.jqe();\n              QMD.jqe i = new T.QMD.jqe();\n              T.QMD.jqe.o.Y LcyALioD = new T.QMD.jqe.o.Y();\n              QMD U = new t.ETs.T.QMD();\n              ETs.T.QMD f8 = new t.ETs.T.QMD();\n            }\n            \n          }\n          J x = new J();\n        }\n        class n {\n\n          J.t.ETs m = new t.ETs();\n        }\n        class j{}\n        \n      }\n      J.t.ETs d7 = new ETs();\n    }\n    ETs L = new J.t.ETs();\n  }\n  class a{}\n  class qc {\n\n    J.qc M = new qc();\n  }\n  class Mo{}\n  \n}"));
        CtType<?> innerClass = launcher.buildModel().getAllTypes().iterator().next();
        assertEquals("class J {\n    class t {\n        class ETs {\n            class T {\n                class QMD {\n                    class jqe {\n                        class o {\n                            class Y {\n                                class v {\n                                    class b {\n                                        QMD.jqe.o XEqx = new jqe.o();\n                                    }\n\n                                    class R {}\n\n                                    class U12 {\n                                        ETs.T.QMD sySm = new QMD();\n\n                                        ETs.T P = new ETs.T();\n                                    }\n\n                                    class p1Ad {}\n                                }\n\n                                class r {}\n\n                                class X {\n                                    Y.X g = new jqe.o.Y.X();\n                                }\n\n                                J.t e = new J.t();\n                            }\n\n                            QMD.jqe fU4 = new J.t.ETs.T.QMD.jqe();\n\n                            QMD.jqe i = new T.QMD.jqe();\n\n                            T.QMD.jqe.o.Y LcyALioD = new T.QMD.jqe.o.Y();\n\n                            QMD U = new t.ETs.T.QMD();\n\n                            ETs.T.QMD f8 = new t.ETs.T.QMD();\n                        }\n                    }\n\n                    J x = new J();\n                }\n\n                class n {\n                    J.t.ETs m = new t.ETs();\n                }\n\n                class j {}\n            }\n\n            J.t.ETs d7 = new ETs();\n        }\n\n        ETs L = new J.t.ETs();\n    }\n\n    class a {}\n\n    class qc {\n        J.qc M = new qc();\n    }\n\n    class Mo {}\n}", innerClass.toString());
    }

    @Test
    public void test022() {
        Launcher launcher = new Launcher();
        launcher.getEnvironment().setComplianceLevel(17);
        launcher.getEnvironment().setAutoImports(true);
        launcher.getEnvironment().setShouldCompile(true);
        launcher.addInputResource(new VirtualFile("class RZor {\n  class CvD4o {\n    class w {\n      class SCn {\n        class Q3N {\n          class Mlc9t {\n            class Vn {\n              class k {\n                class yC {\n\n                  SCn.Q3N S = new RZor.CvD4o.w.SCn.Q3N();\n                }\n                class VKXN{}\n                class i{}\n                class IGRKe{}\n                RZor Z = new RZor();\n                SCn.Q3N s = new SCn.Q3N();\n                w.SCn.Q3N Y = new SCn.Q3N();\n                RZor V6XZ = new RZor();\n              }\n              class Fjqi{}\n              \n            }\n            static class pv{}\n            static class Wc{}\n            class m {\n\n              RZor.CvD4o y = new CvD4o();\n            }\n            Mlc9t RO = new Mlc9t();\n            RZor.CvD4o.w.SCn.Q3N.Mlc9t Be = new Mlc9t();\n            w.SCn C = new RZor.CvD4o.w.SCn();\n            Q3N.Mlc9t f = new SCn.Q3N.Mlc9t();\n          }\n          \n        }\n        \n      }\n      class lFC{}\n      \n    }\n    class oUA {\n\n      RZor r = new RZor();\n    }\n    w M = new CvD4o.w();\n  }\n  static class uX1IDVbm{}\n  static class X9{}\n  \n}"));
        CtType<?> innerClass = launcher.buildModel().getAllTypes().iterator().next();
        assertEquals("class RZor {\n    class CvD4o {\n        class w {\n            class SCn {\n                class Q3N {\n                    class Mlc9t {\n                        class Vn {\n                            class k {\n                                class yC {\n                                    SCn.Q3N S = new RZor.CvD4o.w.SCn.Q3N();\n                                }\n\n                                class VKXN {}\n\n                                class i {}\n\n                                class IGRKe {}\n\n                                RZor Z = new RZor();\n\n                                SCn.Q3N s = new SCn.Q3N();\n\n                                w.SCn.Q3N Y = new SCn.Q3N();\n\n                                RZor V6XZ = new RZor();\n                            }\n\n                            class Fjqi {}\n                        }\n\n                        static class pv {}\n\n                        static class Wc {}\n\n                        class m {\n                            RZor.CvD4o y = new CvD4o();\n                        }\n\n                        Mlc9t RO = new Mlc9t();\n\n                        RZor.CvD4o.w.SCn.Q3N.Mlc9t Be = new Mlc9t();\n\n                        w.SCn C = new RZor.CvD4o.w.SCn();\n\n                        Q3N.Mlc9t f = new SCn.Q3N.Mlc9t();\n                    }\n                }\n            }\n\n            class lFC {}\n        }\n\n        class oUA {\n            RZor r = new RZor();\n        }\n\n        w M = new CvD4o.w();\n    }\n\n    static class uX1IDVbm {}\n\n    static class X9 {}\n}", innerClass.toString());
    }

    @Test
    public void test023() {
        Launcher launcher = new Launcher();
        launcher.getEnvironment().setComplianceLevel(17);
        launcher.getEnvironment().setAutoImports(true);
        launcher.getEnvironment().setShouldCompile(true);
        launcher.addInputResource(new VirtualFile("class V_ {\n  class p {\n    class mnH {\n      class x {\n        class P {\n          class Ge {\n            class t {\n              class gwD {\n                class pAL {\n                  class I {\n                    class W5{}\n                    class gjv {\n\n                      p.mnH c = new V_.p.mnH();\n                    }\n                    \n                  }\n                  class f {\n\n                    V_.p.mnH.x.P dde = new p.mnH.x.P();\n                    V_ y = new V_();\n                  }\n                  class q {\n\n                    p.mnH.x.P.Ge.t.gwD M = new x.P.Ge.t.gwD();\n                  }\n                  class qh {\n\n                    p.mnH.x K3M = new V_.p.mnH.x();\n                  }\n                  \n                }\n                class z{}\n                V_.p JjchCZ = new V_.p();\n                P.Ge.t.gwD o = new gwD();\n                p.mnH.x.P.Ge.t VO = new V_.p.mnH.x.P.Ge.t();\n              }\n              class UJ{}\n              \n            }\n            class tut {\n\n              V_.p.mnH.x.P.Ge Tm = new V_.p.mnH.x.P.Ge();\n              V_ B = new V_();\n              mnH.x.P Lil3 = new x.P();\n            }\n            class bicoHTsZ{}\n            \n          }\n          mnH QK = new mnH();\n        }\n        class U9{}\n        class AR{}\n        V_.p.mnH Q = new mnH();\n      }\n      \n    }\n    p WaH = new p();\n  }\n  V_ Ux = new V_();\n}"));
        CtType<?> innerClass = launcher.buildModel().getAllTypes().iterator().next();
        assertEquals("class V_ {\n    class p {\n        class mnH {\n            class x {\n                class P {\n                    class Ge {\n                        class t {\n                            class gwD {\n                                class pAL {\n                                    class I {\n                                        class W5 {}\n\n                                        class gjv {\n                                            p.mnH c = new V_.p.mnH();\n                                        }\n                                    }\n\n                                    class f {\n                                        V_.p.mnH.x.P dde = new p.mnH.x.P();\n\n                                        V_ y = new V_();\n                                    }\n\n                                    class q {\n                                        p.mnH.x.P.Ge.t.gwD M = new x.P.Ge.t.gwD();\n                                    }\n\n                                    class qh {\n                                        p.mnH.x K3M = new V_.p.mnH.x();\n                                    }\n                                }\n\n                                class z {}\n\n                                V_.p JjchCZ = new V_.p();\n\n                                P.Ge.t.gwD o = new gwD();\n\n                                p.mnH.x.P.Ge.t VO = new V_.p.mnH.x.P.Ge.t();\n                            }\n\n                            class UJ {}\n                        }\n\n                        class tut {\n                            V_.p.mnH.x.P.Ge Tm = new V_.p.mnH.x.P.Ge();\n\n                            V_ B = new V_();\n\n                            mnH.x.P Lil3 = new x.P();\n                        }\n\n                        class bicoHTsZ {}\n                    }\n\n                    mnH QK = new mnH();\n                }\n\n                class U9 {}\n\n                class AR {}\n\n                V_.p.mnH Q = new mnH();\n            }\n        }\n\n        p WaH = new p();\n    }\n\n    V_ Ux = new V_();\n}", innerClass.toString());
    }

    @Test
    public void test024() {
        Launcher launcher = new Launcher();
        launcher.getEnvironment().setComplianceLevel(17);
        launcher.getEnvironment().setAutoImports(true);
        launcher.getEnvironment().setShouldCompile(true);
        launcher.addInputResource(new VirtualFile("class y {\n  class aN {\n    class hOv {\n      class xvv {\n        class Ojzg9O {\n          class i {\n            class av {\n              class Sd8ogDY {\n                class f {\n\n                  y.aN R = new aN();\n                  hOv C3 = new aN.hOv();\n                }\n                class if {\n\n                  Ojzg9O.i.av.Sd8ogDY.if EK = new Sd8ogDY.if();\n                  y.aN Se = new y.aN();\n                  y X = new y();\n                }\n                \n              }\n              \n            }\n            y.aN zxg = new aN();\n            i.av tr = new y.aN.hOv.xvv.Ojzg9O.i.av();\n          }\n          class L{}\n          class s{}\n          y.aN.hOv.xvv.Ojzg9O O = new hOv.xvv.Ojzg9O();\n          aN.hOv JsSEZbjcYtt = new hOv();\n          aN.hOv ET = new aN.hOv();\n        }\n        class k {\n\n          y q = new y();\n        }\n        class E4r {\n\n          y.aN.hOv m = new y.aN.hOv();\n        }\n        hOv FhR = new hOv();\n        y.aN ag = new y.aN();\n        y G5 = new y();\n        Ojzg9O km = new Ojzg9O();\n        xvv.E4r Tj1 = new E4r();\n      }\n      class Wqs{}\n      class zUe{}\n      hOv N0 = new y.aN.hOv();\n    }\n    class JDx {\n\n      aN zA = new y.aN();\n    }\n    class ca{}\n    class xQ {\n\n      xQ E = new xQ();\n      aN W = new aN();\n    }\n    aN.hOv r = new y.aN.hOv();\n  }\n  class t {\n\n    y BG = new y();\n    y BX = new y();\n  }\n  class v9sC2B{}\n  y.aN Gkxh4 = new y.aN();\n}"));
        CtType<?> innerClass = launcher.buildModel().getAllTypes().iterator().next();
        assertEquals("class y {\n    class aN {\n        class hOv {\n            class xvv {\n                class Ojzg9O {\n                    class i {\n                        class av {\n                            class Sd8ogDY {\n                                class f {\n                                    y.aN R = new aN();\n\n                                    hOv C3 = new aN.hOv();\n                                }\n\n                                {\n                                    y.aN.hOv.xvv.Ojzg9O.i.av.Sd8ogDY.EK = new Sd8ogDY.$missing$();\n                                    y.aN Se = new y.aN();\n                                    y X = new y();\n                                }\n                            }\n                        }\n\n                        y.aN zxg = new aN();\n\n                        i.av tr = new y.aN.hOv.xvv.Ojzg9O.i.av();\n                    }\n\n                    class L {}\n\n                    class s {}\n\n                    y.aN.hOv.xvv.Ojzg9O O = new hOv.xvv.Ojzg9O();\n\n                    aN.hOv JsSEZbjcYtt = new hOv();\n\n                    aN.hOv ET = new aN.hOv();\n                }\n\n                class k {\n                    y q = new y();\n                }\n\n                class E4r {\n                    y.aN.hOv m = new y.aN.hOv();\n                }\n\n                hOv FhR = new hOv();\n\n                y.aN ag = new y.aN();\n\n                y G5 = new y();\n\n                Ojzg9O km = new Ojzg9O();\n\n                xvv.E4r Tj1 = new E4r();\n            }\n\n            class Wqs {}\n\n            class zUe {}\n\n            hOv N0 = new y.aN.hOv();\n        }\n\n        class JDx {\n            aN zA = new y.aN();\n        }\n\n        class ca {}\n\n        class xQ {\n            xQ E = new xQ();\n\n            aN W = new aN();\n        }\n\n        aN.hOv r = new y.aN.hOv();\n    }\n\n    class t {\n        y BG = new y();\n\n        y BX = new y();\n    }\n\n    class v9sC2B {}\n\n    y.aN Gkxh4 = new y.aN();\n}", innerClass.toString());
    }

    @Test
    public void test025() {
        Launcher launcher = new Launcher();
        launcher.getEnvironment().setComplianceLevel(17);
        launcher.getEnvironment().setAutoImports(true);
        launcher.getEnvironment().setShouldCompile(true);
        launcher.addInputResource(new VirtualFile("class z0 {\n  class Y {\n    class GLXHS {\n      class yem {\n        class TNw1 {\n          class S {\n            class p {\n              class TQ {\n                class z {\n                  class k {\n\n                    z0.Y.GLXHS.yem.TNw1.S.p.TQ H = new p.TQ();\n                    z0 d3 = new z0();\n                  }\n                  class u{}\n                  \n                }\n                class Q {\n\n                  z0 L = new z0();\n                }\n                Y.GLXHS.yem.TNw1 vZz = new z0.Y.GLXHS.yem.TNw1();\n                TQ CmM = new z0.Y.GLXHS.yem.TNw1.S.p.TQ();\n                Y.GLXHS.yem.TNw1.S.p dggzd = new z0.Y.GLXHS.yem.TNw1.S.p();\n              }\n              class Rm{}\n              \n            }\n            class i{}\n            class c{}\n            \n          }\n          class J{}\n          class xBi{}\n          \n        }\n        class RN {\n\n          z0.Y.GLXHS d = new Y.GLXHS();\n          z0.Y.GLXHS K6 = new Y.GLXHS();\n          z0.Y RDr = new Y();\n        }\n        \n      }\n      class j {\n\n        Y.GLXHS w = new Y.GLXHS();\n        GLXHS q = new z0.Y.GLXHS();\n      }\n      GLXHS O = new z0.Y.GLXHS();\n      GLXHS.j m = new j();\n      z0.Y r = new z0.Y();\n      GLXHS.yem b = new yem();\n    }\n    \n  }\n  class Mi1 {\n\n    Mi1 wx = new Mi1();\n  }\n  \n}"));
        CtType<?> innerClass = launcher.buildModel().getAllTypes().iterator().next();
        assertEquals("class z0 {\n    class Y {\n        class GLXHS {\n            class yem {\n                class TNw1 {\n                    class S {\n                        class p {\n                            class TQ {\n                                class z {\n                                    class k {\n                                        z0.Y.GLXHS.yem.TNw1.S.p.TQ H = new p.TQ();\n\n                                        z0 d3 = new z0();\n                                    }\n\n                                    class u {}\n                                }\n\n                                class Q {\n                                    z0 L = new z0();\n                                }\n\n                                Y.GLXHS.yem.TNw1 vZz = new z0.Y.GLXHS.yem.TNw1();\n\n                                TQ CmM = new z0.Y.GLXHS.yem.TNw1.S.p.TQ();\n\n                                Y.GLXHS.yem.TNw1.S.p dggzd = new z0.Y.GLXHS.yem.TNw1.S.p();\n                            }\n\n                            class Rm {}\n                        }\n\n                        class i {}\n\n                        class c {}\n                    }\n\n                    class J {}\n\n                    class xBi {}\n                }\n\n                class RN {\n                    z0.Y.GLXHS d = new Y.GLXHS();\n\n                    z0.Y.GLXHS K6 = new Y.GLXHS();\n\n                    z0.Y RDr = new Y();\n                }\n            }\n\n            class j {\n                Y.GLXHS w = new Y.GLXHS();\n\n                GLXHS q = new z0.Y.GLXHS();\n            }\n\n            GLXHS O = new z0.Y.GLXHS();\n\n            GLXHS.j m = new j();\n\n            z0.Y r = new z0.Y();\n\n            GLXHS.yem b = new yem();\n        }\n    }\n\n    class Mi1 {\n        Mi1 wx = new Mi1();\n    }\n}", innerClass.toString());
    }

    @Test
    public void test026() {
        Launcher launcher = new Launcher();
        launcher.getEnvironment().setComplianceLevel(17);
        launcher.getEnvironment().setAutoImports(true);
        launcher.getEnvironment().setShouldCompile(true);
        launcher.addInputResource(new VirtualFile("class u {\n  class U {\n    class b {\n      class Np {\n        class IuB0I {\n          class fD {\n            class I2nrb8xMQd0K {\n              class G {\n                class KD {\n\n                  fD.I2nrb8xMQd0K.G z = new Np.IuB0I.fD.I2nrb8xMQd0K.G();\n                }\n                \n              }\n              class EinW{}\n              class ZtY {\n\n                u.U xMl = new U();\n                IuB0I.fD.I2nrb8xMQd0K.ZtY e = new u.U.b.Np.IuB0I.fD.I2nrb8xMQd0K.ZtY();\n              }\n              \n            }\n            class BnYm{}\n            \n          }\n          class x{}\n          class H8{}\n          \n        }\n        class R8{}\n        class GY {\n\n          u xqMih = new u();\n          U.b y = new u.U.b();\n        }\n        u.U.b.Np.IuB0I mu = new u.U.b.Np.IuB0I();\n        U J = new u.U();\n        U N = new U();\n      }\n      class n{}\n      U.b z7kSk = new U.b();\n      b o = new b();\n    }\n    class S {\n\n      S C = new S();\n      U Z = new U();\n      u.U Fl = new u.U();\n    }\n    static class pw{}\n    \n  }\n  class t{}\n  \n}"));
        CtType<?> innerClass = launcher.buildModel().getAllTypes().iterator().next();
        assertEquals("class u {\n    class U {\n        class b {\n            class Np {\n                class IuB0I {\n                    class fD {\n                        class I2nrb8xMQd0K {\n                            class G {\n                                class KD {\n                                    fD.I2nrb8xMQd0K.G z = new Np.IuB0I.fD.I2nrb8xMQd0K.G();\n                                }\n                            }\n\n                            class EinW {}\n\n                            class ZtY {\n                                u.U xMl = new U();\n\n                                IuB0I.fD.I2nrb8xMQd0K.ZtY e = new u.U.b.Np.IuB0I.fD.I2nrb8xMQd0K.ZtY();\n                            }\n                        }\n\n                        class BnYm {}\n                    }\n\n                    class x {}\n\n                    class H8 {}\n                }\n\n                class R8 {}\n\n                class GY {\n                    u xqMih = new u();\n\n                    U.b y = new u.U.b();\n                }\n\n                u.U.b.Np.IuB0I mu = new u.U.b.Np.IuB0I();\n\n                U J = new u.U();\n\n                U N = new U();\n            }\n\n            class n {}\n\n            U.b z7kSk = new U.b();\n\n            b o = new b();\n        }\n\n        class S {\n            S C = new S();\n\n            U Z = new U();\n\n            u.U Fl = new u.U();\n        }\n\n        static class pw {}\n    }\n\n    class t {}\n}", innerClass.toString());
    }

    @Test
    public void test027() {
        Launcher launcher = new Launcher();
        launcher.getEnvironment().setComplianceLevel(17);
        launcher.getEnvironment().setAutoImports(true);
        launcher.getEnvironment().setShouldCompile(true);
        launcher.addInputResource(new VirtualFile("class i {\n  class L {\n    class JO {\n      class s {\n        class Fc {\n          class EI {\n            class WHR9 {\n              class emP {\n                class P {\n\n                  i.L.JO.s oQ = new s();\n                }\n                class l {\n\n                  i G3f = new i();\n                }\n                class ofxtd5{}\n                i e = new i();\n              }\n              \n            }\n            class Z {\n\n              Fc.EI B = new EI();\n              s RaRev = new s();\n              i.L.JO.s lP = new i.L.JO.s();\n              i w9 = new i();\n              s.Fc XglSBmp = new JO.s.Fc();\n            }\n            class hy {\n\n              s.Fc.EI.hy tA = new hy();\n            }\n            class S2u {\n\n              L.JO.s sJ = new s();\n              JO.s.Fc M = new s.Fc();\n            }\n            \n          }\n          class K{}\n          class p{}\n          \n        }\n        i Q = new i();\n      }\n      class u{}\n      class k{}\n      L.JO.u ir = new i.L.JO.u();\n      L.JO.s D = new s();\n      JO y = new L.JO();\n      s ps = new JO.s();\n      k UZt = new JO.k();\n      i.L.JO ikG = new L.JO();\n    }\n    class VYV {\n\n      VYV R = new i.L.VYV();\n    }\n    i g = new i();\n    i pJZ = new i();\n  }\n  class C {\n\n    i.C W = new C();\n    i s4A = new i();\n  }\n  \n}"));
        CtType<?> innerClass = launcher.buildModel().getAllTypes().iterator().next();
        assertEquals("class i {\n    class L {\n        class JO {\n            class s {\n                class Fc {\n                    class EI {\n                        class WHR9 {\n                            class emP {\n                                class P {\n                                    i.L.JO.s oQ = new s();\n                                }\n\n                                class l {\n                                    i G3f = new i();\n                                }\n\n                                class ofxtd5 {}\n\n                                i e = new i();\n                            }\n                        }\n\n                        class Z {\n                            Fc.EI B = new EI();\n\n                            s RaRev = new s();\n\n                            i.L.JO.s lP = new i.L.JO.s();\n\n                            i w9 = new i();\n\n                            s.Fc XglSBmp = new JO.s.Fc();\n                        }\n\n                        class hy {\n                            s.Fc.EI.hy tA = new hy();\n                        }\n\n                        class S2u {\n                            L.JO.s sJ = new s();\n\n                            JO.s.Fc M = new s.Fc();\n                        }\n                    }\n\n                    class K {}\n\n                    class p {}\n                }\n\n                i Q = new i();\n            }\n\n            class u {}\n\n            class k {}\n\n            L.JO.u ir = new i.L.JO.u();\n\n            L.JO.s D = new s();\n\n            JO y = new L.JO();\n\n            s ps = new JO.s();\n\n            k UZt = new JO.k();\n\n            i.L.JO ikG = new L.JO();\n        }\n\n        class VYV {\n            VYV R = new i.L.VYV();\n        }\n\n        i g = new i();\n\n        i pJZ = new i();\n    }\n\n    class C {\n        i.C W = new C();\n\n        i s4A = new i();\n    }\n}", innerClass.toString());
    }

    @Test
    public void test028() {
        Launcher launcher = new Launcher();
        launcher.getEnvironment().setComplianceLevel(17);
        launcher.getEnvironment().setAutoImports(true);
        launcher.getEnvironment().setShouldCompile(true);
        launcher.addInputResource(new VirtualFile("class m {\n  class fG {\n    class gpOI {\n      class H {\n        class B {\n          class G {\n            class Gg {\n              class fs {\n\n                H.B.G.Gg.fs N = new B.G.Gg.fs();\n                m.fG.gpOI.H.B.G.Gg.fs j = new m.fG.gpOI.H.B.G.Gg.fs();\n              }\n              class d{}\n              class d_w {\n\n                H Z = new fG.gpOI.H();\n                gpOI be = new gpOI();\n              }\n              class c {\n\n                Gg V = new G.Gg();\n              }\n              \n            }\n            class J{}\n            class Kf{}\n            H.B Y2U = new gpOI.H.B();\n            m b1 = new m();\n          }\n          class Wg{}\n          B t6r = new H.B();\n        }\n        m X = new m();\n        H.B w = new H.B();\n        m p4Bii = new m();\n        m.fG.gpOI.H cU = new H();\n      }\n      class uO {\n\n        m P = new m();\n        m.fG Y = new fG();\n        m.fG.gpOI qTp = new gpOI();\n        fG o8 = new fG();\n      }\n      class FOiIAC{}\n      class A{}\n      \n    }\n    class wDL {\n\n      m.fG.wDL wC = new m.fG.wDL();\n      fG.wDL IRs1T1 = new fG.wDL();\n    }\n    class XK0 {\n\n      fG kLg = new m.fG();\n      m D = new m();\n      m.fG Zw = new m.fG();\n      XK0 EF9c = new m.fG.XK0();\n      m b = new m();\n      fG.XK0 cZW6Ia = new XK0();\n    }\n    \n  }\n  class p {\n\n    m LV = new m();\n    m W5O = new m();\n    p cHl = new p();\n    m C_ = new m();\n    m EQ = new m();\n  }\n  \n}"));
        CtType<?> innerClass = launcher.buildModel().getAllTypes().iterator().next();
        assertEquals("class m {\n    class fG {\n        class gpOI {\n            class H {\n                class B {\n                    class G {\n                        class Gg {\n                            class fs {\n                                H.B.G.Gg.fs N = new B.G.Gg.fs();\n\n                                m.fG.gpOI.H.B.G.Gg.fs j = new m.fG.gpOI.H.B.G.Gg.fs();\n                            }\n\n                            class d {}\n\n                            class d_w {\n                                H Z = new fG.gpOI.H();\n\n                                gpOI be = new gpOI();\n                            }\n\n                            class c {\n                                Gg V = new G.Gg();\n                            }\n                        }\n\n                        class J {}\n\n                        class Kf {}\n\n                        H.B Y2U = new gpOI.H.B();\n\n                        m b1 = new m();\n                    }\n\n                    class Wg {}\n\n                    B t6r = new H.B();\n                }\n\n                m X = new m();\n\n                H.B w = new H.B();\n\n                m p4Bii = new m();\n\n                m.fG.gpOI.H cU = new H();\n            }\n\n            class uO {\n                m P = new m();\n\n                m.fG Y = new fG();\n\n                m.fG.gpOI qTp = new gpOI();\n\n                fG o8 = new fG();\n            }\n\n            class FOiIAC {}\n\n            class A {}\n        }\n\n        class wDL {\n            m.fG.wDL wC = new m.fG.wDL();\n\n            fG.wDL IRs1T1 = new fG.wDL();\n        }\n\n        class XK0 {\n            fG kLg = new m.fG();\n\n            m D = new m();\n\n            m.fG Zw = new m.fG();\n\n            XK0 EF9c = new m.fG.XK0();\n\n            m b = new m();\n\n            fG.XK0 cZW6Ia = new XK0();\n        }\n    }\n\n    class p {\n        m LV = new m();\n\n        m W5O = new m();\n\n        p cHl = new p();\n\n        m C_ = new m();\n\n        m EQ = new m();\n    }\n}", innerClass.toString());
    }

    @Test
    public void test029() {
        Launcher launcher = new Launcher();
        launcher.getEnvironment().setComplianceLevel(17);
        launcher.getEnvironment().setAutoImports(true);
        launcher.getEnvironment().setShouldCompile(true);
        launcher.addInputResource(new VirtualFile("class B {\n  class W {\n    class Uz {\n      class Mn {\n        class azeTQr {\n          class M {\n            class Y {\n              class y {\n\n                W.Uz.Mn M2o6 = new Mn();\n              }\n              class e {\n\n                Mn.azeTQr sg = new Uz.Mn.azeTQr();\n                Mn.azeTQr P = new azeTQr();\n              }\n              static class q{}\n              static class CT{}\n              Mn.azeTQr.M x = new W.Uz.Mn.azeTQr.M();\n            }\n            \n          }\n          class Yj{}\n          Uz.Mn b = new Uz.Mn();\n          W kA = new B.W();\n        }\n        static class I{}\n        static class LT{}\n        class z {\n\n          B Fub = new B();\n        }\n        W ry = new W();\n      }\n      static class H{}\n      class XV {\n\n        W.Uz L = new B.W.Uz();\n        B.W.Uz O = new B.W.Uz();\n      }\n      \n    }\n    class pecM {\n\n      W.pecM h = new pecM();\n      B.W n = new W();\n      B V = new B();\n    }\n    static class J{}\n    B MTA = new B();\n    B VY = new B();\n  }\n  class g {\n\n    B L6 = new B();\n    B.g aZ = new g();\n  }\n  class SB {\n\n    B i = new B();\n    B.SB S = new B.SB();\n    B Tu = new B();\n  }\n  class l {\n\n    B A = new B();\n  }\n  B sY = new B();\n  B abb = new B();\n}"));
        CtType<?> innerClass = launcher.buildModel().getAllTypes().iterator().next();
        assertEquals("class B {\n    class W {\n        class Uz {\n            class Mn {\n                class azeTQr {\n                    class M {\n                        class Y {\n                            class y {\n                                W.Uz.Mn M2o6 = new Mn();\n                            }\n\n                            class e {\n                                Mn.azeTQr sg = new Uz.Mn.azeTQr();\n\n                                Mn.azeTQr P = new azeTQr();\n                            }\n\n                            static class q {}\n\n                            static class CT {}\n\n                            Mn.azeTQr.M x = new W.Uz.Mn.azeTQr.M();\n                        }\n                    }\n\n                    class Yj {}\n\n                    Uz.Mn b = new Uz.Mn();\n\n                    W kA = new B.W();\n                }\n\n                static class I {}\n\n                static class LT {}\n\n                class z {\n                    B Fub = new B();\n                }\n\n                W ry = new W();\n            }\n\n            static class H {}\n\n            class XV {\n                W.Uz L = new B.W.Uz();\n\n                B.W.Uz O = new B.W.Uz();\n            }\n        }\n\n        class pecM {\n            W.pecM h = new pecM();\n\n            B.W n = new W();\n\n            B V = new B();\n        }\n\n        static class J {}\n\n        B MTA = new B();\n\n        B VY = new B();\n    }\n\n    class g {\n        B L6 = new B();\n\n        B.g aZ = new g();\n    }\n\n    class SB {\n        B i = new B();\n\n        B.SB S = new B.SB();\n\n        B Tu = new B();\n    }\n\n    class l {\n        B A = new B();\n    }\n\n    B sY = new B();\n\n    B abb = new B();\n}", innerClass.toString());
    }

    @Test
    public void test030() {
        Launcher launcher = new Launcher();
        launcher.getEnvironment().setComplianceLevel(17);
        launcher.getEnvironment().setAutoImports(true);
        launcher.getEnvironment().setShouldCompile(true);
        launcher.addInputResource(new VirtualFile("class N {\n  class F1d {\n    class Yg {\n      class C {\n        class U {\n          class yEu {\n            class n {\n              class z {\n                class V {\n\n                  F1d.Yg.C.U r = new C.U();\n                  N.F1d Le = new N.F1d();\n                }\n                class F {\n\n                  yEu e = new N.F1d.Yg.C.U.yEu();\n                }\n                \n              }\n              class Q{}\n              class J {\n\n                U P = new C.U();\n                N wF8Yotuf = new N();\n                U.yEu ZRcb = new N.F1d.Yg.C.U.yEu();\n                C.U.yEu i = new C.U.yEu();\n              }\n              class cublp{}\n              yEu.n.cublp K43 = new U.yEu.n.cublp();\n            }\n            \n          }\n          class uX {\n\n            Yg.C Ki7 = new F1d.Yg.C();\n            F1d YDG = new F1d();\n            F1d.Yg JbBU = new Yg();\n            U.uX o = new uX();\n          }\n          class yX{}\n          class L{}\n          Yg LThaZFsXPF = new N.F1d.Yg();\n          N.F1d.Yg.C.U.yX q = new F1d.Yg.C.U.yX();\n          U B = new F1d.Yg.C.U();\n          Yg.C.U.yEu BLPmehuk = new N.F1d.Yg.C.U.yEu();\n        }\n        static class O{}\n        class WZt6{}\n        \n      }\n      class A {\n\n        F1d.Yg.A cX5a = new F1d.Yg.A();\n      }\n      N.F1d bWGu = new F1d();\n    }\n    class lpx4G{}\n    \n  }\n  class gq {\n\n    N.gq OU = new gq();\n    N Tv = new N();\n  }\n  F1d ik = new N.F1d();\n  N.gq vO = new N.gq();\n  N Y = new N();\n}"));
        CtType<?> innerClass = launcher.buildModel().getAllTypes().iterator().next();
        assertEquals("class N {\n    class F1d {\n        class Yg {\n            class C {\n                class U {\n                    class yEu {\n                        class n {\n                            class z {\n                                class V {\n                                    F1d.Yg.C.U r = new C.U();\n\n                                    N.F1d Le = new N.F1d();\n                                }\n\n                                class F {\n                                    yEu e = new N.F1d.Yg.C.U.yEu();\n                                }\n                            }\n\n                            class Q {}\n\n                            class J {\n                                U P = new C.U();\n\n                                N wF8Yotuf = new N();\n\n                                U.yEu ZRcb = new N.F1d.Yg.C.U.yEu();\n\n                                C.U.yEu i = new C.U.yEu();\n                            }\n\n                            class cublp {}\n\n                            yEu.n.cublp K43 = new U.yEu.n.cublp();\n                        }\n                    }\n\n                    class uX {\n                        Yg.C Ki7 = new F1d.Yg.C();\n\n                        F1d YDG = new F1d();\n\n                        F1d.Yg JbBU = new Yg();\n\n                        U.uX o = new uX();\n                    }\n\n                    class yX {}\n\n                    class L {}\n\n                    Yg LThaZFsXPF = new N.F1d.Yg();\n\n                    N.F1d.Yg.C.U.yX q = new F1d.Yg.C.U.yX();\n\n                    U B = new F1d.Yg.C.U();\n\n                    Yg.C.U.yEu BLPmehuk = new N.F1d.Yg.C.U.yEu();\n                }\n\n                static class O {}\n\n                class WZt6 {}\n            }\n\n            class A {\n                F1d.Yg.A cX5a = new F1d.Yg.A();\n            }\n\n            N.F1d bWGu = new F1d();\n        }\n\n        class lpx4G {}\n    }\n\n    class gq {\n        N.gq OU = new gq();\n\n        N Tv = new N();\n    }\n\n    F1d ik = new N.F1d();\n\n    N.gq vO = new N.gq();\n\n    N Y = new N();\n}", innerClass.toString());
    }

    @Test
    public void test031() {
        Launcher launcher = new Launcher();
        launcher.getEnvironment().setComplianceLevel(17);
        launcher.getEnvironment().setAutoImports(true);
        launcher.getEnvironment().setShouldCompile(true);
        launcher.addInputResource(new VirtualFile("class L {\n  class Q {\n    class CAaa1 {\n      class l {\n        class mU {\n          class lc {\n            class rX {\n              class mbI{}\n              class b {\n\n                rX dj6 = new CAaa1.l.mU.lc.rX();\n                L.Q.CAaa1.l z = new CAaa1.l();\n                Q II = new L.Q();\n              }\n              class S{}\n              class e {\n\n                L CFt = new L();\n                CAaa1.l.mU.lc.rX.e i5 = new l.mU.lc.rX.e();\n                rX t = new l.mU.lc.rX();\n              }\n              lc.rX yw = new lc.rX();\n              Q.CAaa1.l.mU f = new CAaa1.l.mU();\n            }\n            class uIE4 {\n\n              L.Q.CAaa1.l a = new CAaa1.l();\n              l.mU eJ = new mU();\n            }\n            \n          }\n          \n        }\n        class T {\n\n          L zTatTq = new L();\n          L.Q.CAaa1 Q8_R = new L.Q.CAaa1();\n        }\n        L kYJ = new L();\n      }\n      class KKX {\n\n        Q.CAaa1.KKX eX = new Q.CAaa1.KKX();\n      }\n      CAaa1 R = new CAaa1();\n      Q.CAaa1 U = new CAaa1();\n    }\n    static class Z9{}\n    class cM{}\n    class EuR {\n\n      L Sz5 = new L();\n    }\n    L.Q.cM m = new Q.cM();\n  }\n  class F {\n\n    L O = new L();\n    L ul7eQ8BSK = new L();\n  }\n  class gNTS{}\n  class J8d {\n\n    L UE = new L();\n  }\n  \n}"));
        CtType<?> innerClass = launcher.buildModel().getAllTypes().iterator().next();
        assertEquals("class L {\n    class Q {\n        class CAaa1 {\n            class l {\n                class mU {\n                    class lc {\n                        class rX {\n                            class mbI {}\n\n                            class b {\n                                rX dj6 = new CAaa1.l.mU.lc.rX();\n\n                                L.Q.CAaa1.l z = new CAaa1.l();\n\n                                Q II = new L.Q();\n                            }\n\n                            class S {}\n\n                            class e {\n                                L CFt = new L();\n\n                                CAaa1.l.mU.lc.rX.e i5 = new l.mU.lc.rX.e();\n\n                                rX t = new l.mU.lc.rX();\n                            }\n\n                            lc.rX yw = new lc.rX();\n\n                            Q.CAaa1.l.mU f = new CAaa1.l.mU();\n                        }\n\n                        class uIE4 {\n                            L.Q.CAaa1.l a = new CAaa1.l();\n\n                            l.mU eJ = new mU();\n                        }\n                    }\n                }\n\n                class T {\n                    L zTatTq = new L();\n\n                    L.Q.CAaa1 Q8_R = new L.Q.CAaa1();\n                }\n\n                L kYJ = new L();\n            }\n\n            class KKX {\n                Q.CAaa1.KKX eX = new Q.CAaa1.KKX();\n            }\n\n            CAaa1 R = new CAaa1();\n\n            Q.CAaa1 U = new CAaa1();\n        }\n\n        static class Z9 {}\n\n        class cM {}\n\n        class EuR {\n            L Sz5 = new L();\n        }\n\n        L.Q.cM m = new Q.cM();\n    }\n\n    class F {\n        L O = new L();\n\n        L ul7eQ8BSK = new L();\n    }\n\n    class gNTS {}\n\n    class J8d {\n        L UE = new L();\n    }\n}", innerClass.toString());
    }

    @Test
    public void test032() {
        Launcher launcher = new Launcher();
        launcher.getEnvironment().setComplianceLevel(17);
        launcher.getEnvironment().setAutoImports(true);
        launcher.getEnvironment().setShouldCompile(true);
        launcher.addInputResource(new VirtualFile("class Pnb1M3 {\n  class hU {\n    class RrOg_PR {\n      class Lr {\n        class s {\n          class x7 {\n            class v_lpC {\n              static class w{}\n              static class tf{}\n              \n            }\n            class NLc {\n\n              hU.RrOg_PR.Lr.s k = new Lr.s();\n              Pnb1M3 vA8m_aIO78 = new Pnb1M3();\n            }\n            class g {\n\n              s Tb1 = new hU.RrOg_PR.Lr.s();\n            }\n            static class y{}\n            \n          }\n          static class K{}\n          hU L = new Pnb1M3.hU();\n        }\n        static class OQ{}\n        class V {\n\n          hU j = new hU();\n        }\n        static class QGaPF{}\n        hU vLP = new hU();\n      }\n      \n    }\n    class zJ{}\n    static class U{}\n    static class xe{}\n    Pnb1M3 X9 = new Pnb1M3();\n    Pnb1M3.hU yXgq = new Pnb1M3.hU();\n    zJ A7J = new hU.zJ();\n  }\n  class b1{}\n  \n}"));
        CtType<?> innerClass = launcher.buildModel().getAllTypes().iterator().next();
        assertEquals("class Pnb1M3 {\n    class hU {\n        class RrOg_PR {\n            class Lr {\n                class s {\n                    class x7 {\n                        class v_lpC {\n                            static class w {}\n\n                            static class tf {}\n                        }\n\n                        class NLc {\n                            hU.RrOg_PR.Lr.s k = new Lr.s();\n\n                            Pnb1M3 vA8m_aIO78 = new Pnb1M3();\n                        }\n\n                        class g {\n                            s Tb1 = new hU.RrOg_PR.Lr.s();\n                        }\n\n                        static class y {}\n                    }\n\n                    static class K {}\n\n                    hU L = new Pnb1M3.hU();\n                }\n\n                static class OQ {}\n\n                class V {\n                    hU j = new hU();\n                }\n\n                static class QGaPF {}\n\n                hU vLP = new hU();\n            }\n        }\n\n        class zJ {}\n\n        static class U {}\n\n        static class xe {}\n\n        Pnb1M3 X9 = new Pnb1M3();\n\n        Pnb1M3.hU yXgq = new Pnb1M3.hU();\n\n        zJ A7J = new hU.zJ();\n    }\n\n    class b1 {}\n}", innerClass.toString());
    }

    @Test
    public void test033() {
        Launcher launcher = new Launcher();
        launcher.getEnvironment().setComplianceLevel(17);
        launcher.getEnvironment().setAutoImports(true);
        launcher.getEnvironment().setShouldCompile(true);
        launcher.addInputResource(new VirtualFile("class uFWzpsd {\n  class uN {\n    class zsg {\n      class rSs {\n        class e {\n          class jpe4eWw {\n            class y {\n              class i{}\n              class MW {\n\n                uN.zsg A = new zsg();\n                zsg.rSs.e.jpe4eWw.y fY = new uN.zsg.rSs.e.jpe4eWw.y();\n                zsg ySjFK = new uFWzpsd.uN.zsg();\n                uFWzpsd.uN.zsg.rSs.e.jpe4eWw.y q = new y();\n              }\n              class B9{}\n              class r{}\n              uN ZP = new uFWzpsd.uN();\n              uFWzpsd.uN cK = new uN();\n            }\n            class Yt{}\n            class Rmg {\n\n              uFWzpsd Q = new uFWzpsd();\n            }\n            class duRi{}\n            \n          }\n          class p {\n\n            uFWzpsd.uN Llhr = new uN();\n          }\n          class P{}\n          \n        }\n        \n      }\n      class fcB{}\n      class O{}\n      class R {\n\n        uFWzpsd OoY = new uFWzpsd();\n        uN.zsg.R mq = new uN.zsg.R();\n      }\n      uN b = new uFWzpsd.uN();\n      uN.zsg.R cT2 = new R();\n    }\n    \n  }\n  class PM{}\n  static class QE{}\n  uFWzpsd G = new uFWzpsd();\n}"));
        CtType<?> innerClass = launcher.buildModel().getAllTypes().iterator().next();
        assertEquals("class uFWzpsd {\n    class uN {\n        class zsg {\n            class rSs {\n                class e {\n                    class jpe4eWw {\n                        class y {\n                            class i {}\n\n                            class MW {\n                                uN.zsg A = new zsg();\n\n                                zsg.rSs.e.jpe4eWw.y fY = new uN.zsg.rSs.e.jpe4eWw.y();\n\n                                zsg ySjFK = new uFWzpsd.uN.zsg();\n\n                                uFWzpsd.uN.zsg.rSs.e.jpe4eWw.y q = new y();\n                            }\n\n                            class B9 {}\n\n                            class r {}\n\n                            uN ZP = new uFWzpsd.uN();\n\n                            uFWzpsd.uN cK = new uN();\n                        }\n\n                        class Yt {}\n\n                        class Rmg {\n                            uFWzpsd Q = new uFWzpsd();\n                        }\n\n                        class duRi {}\n                    }\n\n                    class p {\n                        uFWzpsd.uN Llhr = new uN();\n                    }\n\n                    class P {}\n                }\n            }\n\n            class fcB {}\n\n            class O {}\n\n            class R {\n                uFWzpsd OoY = new uFWzpsd();\n\n                uN.zsg.R mq = new uN.zsg.R();\n            }\n\n            uN b = new uFWzpsd.uN();\n\n            uN.zsg.R cT2 = new R();\n        }\n    }\n\n    class PM {}\n\n    static class QE {}\n\n    uFWzpsd G = new uFWzpsd();\n}", innerClass.toString());
    }

    @Test
    public void test034() {
        Launcher launcher = new Launcher();
        launcher.getEnvironment().setComplianceLevel(17);
        launcher.getEnvironment().setAutoImports(true);
        launcher.getEnvironment().setShouldCompile(true);
        launcher.addInputResource(new VirtualFile("class S {\n  class H0Yp {\n    class ih {\n      class QrP {\n        class Gy {\n          class eEVW1 {\n            class KB {\n              class rE {\n                class B {\n                  class V_PO8{}\n                  class Xqd {\n\n                    S.H0Yp.ih G = new ih();\n                  }\n                  class uMb{}\n                  \n                }\n                S.H0Yp.ih.QrP.Gy.eEVW1.KB Q = new QrP.Gy.eEVW1.KB();\n                S.H0Yp.ih w_ = new ih();\n              }\n              class nBmKKZy{}\n              class V{}\n              Gy.eEVW1.KB BYKcD = new KB();\n            }\n            class a{}\n            H0Yp.ih.QrP.Gy.eEVW1 i = new QrP.Gy.eEVW1();\n          }\n          class V3Eo{}\n          class o {\n\n            H0Yp n = new H0Yp();\n          }\n          \n        }\n        ih Iz = new H0Yp.ih();\n        H0Yp nB = new S.H0Yp();\n        S D = new S();\n        QrP q7Es = new S.H0Yp.ih.QrP();\n      }\n      \n    }\n    static class V5{}\n    class J {\n\n      H0Yp o2H = new S.H0Yp();\n      S SwfI1 = new S();\n      S ls = new S();\n      S N = new S();\n      S UIQE = new S();\n      H0Yp M = new H0Yp();\n    }\n    class L {\n\n      S hT = new S();\n      L Jq0 = new H0Yp.L();\n    }\n    S E = new S();\n  }\n  class t {\n\n    t W = new t();\n  }\n  class aW {\n\n    S BZ = new S();\n  }\n  H0Yp d = new H0Yp();\n  S K = new S();\n}"));
        CtType<?> innerClass = launcher.buildModel().getAllTypes().iterator().next();
        assertEquals("class S {\n    class H0Yp {\n        class ih {\n            class QrP {\n                class Gy {\n                    class eEVW1 {\n                        class KB {\n                            class rE {\n                                class B {\n                                    class V_PO8 {}\n\n                                    class Xqd {\n                                        S.H0Yp.ih G = new ih();\n                                    }\n\n                                    class uMb {}\n                                }\n\n                                S.H0Yp.ih.QrP.Gy.eEVW1.KB Q = new QrP.Gy.eEVW1.KB();\n\n                                S.H0Yp.ih w_ = new ih();\n                            }\n\n                            class nBmKKZy {}\n\n                            class V {}\n\n                            Gy.eEVW1.KB BYKcD = new KB();\n                        }\n\n                        class a {}\n\n                        H0Yp.ih.QrP.Gy.eEVW1 i = new QrP.Gy.eEVW1();\n                    }\n\n                    class V3Eo {}\n\n                    class o {\n                        H0Yp n = new H0Yp();\n                    }\n                }\n\n                ih Iz = new H0Yp.ih();\n\n                H0Yp nB = new S.H0Yp();\n\n                S D = new S();\n\n                QrP q7Es = new S.H0Yp.ih.QrP();\n            }\n        }\n\n        static class V5 {}\n\n        class J {\n            H0Yp o2H = new S.H0Yp();\n\n            S SwfI1 = new S();\n\n            S ls = new S();\n\n            S N = new S();\n\n            S UIQE = new S();\n\n            H0Yp M = new H0Yp();\n        }\n\n        class L {\n            S hT = new S();\n\n            L Jq0 = new H0Yp.L();\n        }\n\n        S E = new S();\n    }\n\n    class t {\n        t W = new t();\n    }\n\n    class aW {\n        S BZ = new S();\n    }\n\n    H0Yp d = new H0Yp();\n\n    S K = new S();\n}", innerClass.toString());
    }

    @Test
    public void test035() {
        Launcher launcher = new Launcher();
        launcher.getEnvironment().setComplianceLevel(17);
        launcher.getEnvironment().setAutoImports(true);
        launcher.getEnvironment().setShouldCompile(true);
        launcher.addInputResource(new VirtualFile("class K2j {\n  class CFFlZcTG_ {\n    class N {\n      class V {\n        class Np {\n          class g {\n            class R {\n              class Nch {\n                class xb {\n                  class rgh {\n\n                    K2j MwAD = new K2j();\n                  }\n                  class Za{}\n                  CFFlZcTG_.N.V.Np.g.R maY = new CFFlZcTG_.N.V.Np.g.R();\n                  K2j m = new K2j();\n                  K2j.CFFlZcTG_.N.V.Np.g.R.Nch.xb dz = new CFFlZcTG_.N.V.Np.g.R.Nch.xb();\n                  K2j.CFFlZcTG_.N.V.Np.g.R.Nch H = new N.V.Np.g.R.Nch();\n                }\n                class MV{}\n                \n              }\n              class B {\n\n                K2j.CFFlZcTG_.N.V C = new N.V();\n                K2j.CFFlZcTG_.N.V.Np.g xy19 = new Np.g();\n                N.V.Np.g.R P = new R();\n                Np y = new CFFlZcTG_.N.V.Np();\n              }\n              class ExN{}\n              \n            }\n            class n{}\n            class l3 {\n\n              N.V.Np.g.l3 sC = new V.Np.g.l3();\n            }\n            class ss{}\n            N.V.Np.g FXl = new K2j.CFFlZcTG_.N.V.Np.g();\n          }\n          K2j.CFFlZcTG_.N.V kM = new V();\n        }\n        CFFlZcTG_ s = new CFFlZcTG_();\n        K2j dW = new K2j();\n      }\n      class N1lP{}\n      CFFlZcTG_.N T = new N();\n      CFFlZcTG_.N Bx = new N();\n      CFFlZcTG_ w = new CFFlZcTG_();\n    }\n    class t{}\n    \n  }\n  class c4y1BT{}\n  class xpJj {\n\n    K2j.xpJj i = new xpJj();\n  }\n  K2j rUHYa = new K2j();\n  K2j sK = new K2j();\n}"));
        CtType<?> innerClass = launcher.buildModel().getAllTypes().iterator().next();
        assertEquals("class K2j {\n    class CFFlZcTG_ {\n        class N {\n            class V {\n                class Np {\n                    class g {\n                        class R {\n                            class Nch {\n                                class xb {\n                                    class rgh {\n                                        K2j MwAD = new K2j();\n                                    }\n\n                                    class Za {}\n\n                                    CFFlZcTG_.N.V.Np.g.R maY = new CFFlZcTG_.N.V.Np.g.R();\n\n                                    K2j m = new K2j();\n\n                                    K2j.CFFlZcTG_.N.V.Np.g.R.Nch.xb dz = new CFFlZcTG_.N.V.Np.g.R.Nch.xb();\n\n                                    K2j.CFFlZcTG_.N.V.Np.g.R.Nch H = new N.V.Np.g.R.Nch();\n                                }\n\n                                class MV {}\n                            }\n\n                            class B {\n                                K2j.CFFlZcTG_.N.V C = new N.V();\n\n                                K2j.CFFlZcTG_.N.V.Np.g xy19 = new Np.g();\n\n                                N.V.Np.g.R P = new R();\n\n                                Np y = new CFFlZcTG_.N.V.Np();\n                            }\n\n                            class ExN {}\n                        }\n\n                        class n {}\n\n                        class l3 {\n                            N.V.Np.g.l3 sC = new V.Np.g.l3();\n                        }\n\n                        class ss {}\n\n                        N.V.Np.g FXl = new K2j.CFFlZcTG_.N.V.Np.g();\n                    }\n\n                    K2j.CFFlZcTG_.N.V kM = new V();\n                }\n\n                CFFlZcTG_ s = new CFFlZcTG_();\n\n                K2j dW = new K2j();\n            }\n\n            class N1lP {}\n\n            CFFlZcTG_.N T = new N();\n\n            CFFlZcTG_.N Bx = new N();\n\n            CFFlZcTG_ w = new CFFlZcTG_();\n        }\n\n        class t {}\n    }\n\n    class c4y1BT {}\n\n    class xpJj {\n        K2j.xpJj i = new xpJj();\n    }\n\n    K2j rUHYa = new K2j();\n\n    K2j sK = new K2j();\n}", innerClass.toString());
    }

    @Test
    public void test036() {
        Launcher launcher = new Launcher();
        launcher.getEnvironment().setComplianceLevel(17);
        launcher.getEnvironment().setAutoImports(true);
        launcher.getEnvironment().setShouldCompile(true);
        launcher.addInputResource(new VirtualFile("class M6G {\n  class W {\n    class jD {\n      class q {\n        class Cc_ {\n          class m {\n            class M {\n              class o {\n                class f5 {\n\n                  jD TR = new M6G.W.jD();\n                }\n                class L {\n\n                  W.jD Q = new M6G.W.jD();\n                }\n                class Le {\n\n                  M6G.W.jD qNt = new M6G.W.jD();\n                }\n                jD.q.Cc_.m.M.o ixfk = new o();\n                Cc_.m.M.o zr = new M6G.W.jD.q.Cc_.m.M.o();\n                M6G.W y = new M6G.W();\n              }\n              class Y {\n\n                jD.q.Cc_.m.M JZ = new Cc_.m.M();\n              }\n              class K_x{}\n              jD.q.Cc_.m.M.K_x E = new q.Cc_.m.M.K_x();\n              m BEzOHGNV = new W.jD.q.Cc_.m();\n            }\n            W.jD.q l = new jD.q();\n          }\n          class f{}\n          class G {\n\n            W.jD.q.Cc_.G uR = new W.jD.q.Cc_.G();\n          }\n          \n        }\n        class IB {\n\n          q.IB Nb5 = new W.jD.q.IB();\n        }\n        class cV {\n\n          jD ub = new jD();\n        }\n        \n      }\n      class R {\n\n        W.jD.R T = new R();\n        W.jD eU = new W.jD();\n      }\n      M6G.W.jD.q Tjn9Uzy = new M6G.W.jD.q();\n    }\n    class sY {\n\n      M6G K = new M6G();\n    }\n    static class mc{}\n    W H = new W();\n    M6G.W.sY U = new M6G.W.sY();\n    M6G.W eW = new M6G.W();\n  }\n  static class h{}\n  \n}"));
        CtType<?> innerClass = launcher.buildModel().getAllTypes().iterator().next();
        assertEquals("class M6G {\n    class W {\n        class jD {\n            class q {\n                class Cc_ {\n                    class m {\n                        class M {\n                            class o {\n                                class f5 {\n                                    jD TR = new M6G.W.jD();\n                                }\n\n                                class L {\n                                    W.jD Q = new M6G.W.jD();\n                                }\n\n                                class Le {\n                                    M6G.W.jD qNt = new M6G.W.jD();\n                                }\n\n                                jD.q.Cc_.m.M.o ixfk = new o();\n\n                                Cc_.m.M.o zr = new M6G.W.jD.q.Cc_.m.M.o();\n\n                                M6G.W y = new M6G.W();\n                            }\n\n                            class Y {\n                                jD.q.Cc_.m.M JZ = new Cc_.m.M();\n                            }\n\n                            class K_x {}\n\n                            jD.q.Cc_.m.M.K_x E = new q.Cc_.m.M.K_x();\n\n                            m BEzOHGNV = new W.jD.q.Cc_.m();\n                        }\n\n                        W.jD.q l = new jD.q();\n                    }\n\n                    class f {}\n\n                    class G {\n                        W.jD.q.Cc_.G uR = new W.jD.q.Cc_.G();\n                    }\n                }\n\n                class IB {\n                    q.IB Nb5 = new W.jD.q.IB();\n                }\n\n                class cV {\n                    jD ub = new jD();\n                }\n            }\n\n            class R {\n                W.jD.R T = new R();\n\n                W.jD eU = new W.jD();\n            }\n\n            M6G.W.jD.q Tjn9Uzy = new M6G.W.jD.q();\n        }\n\n        class sY {\n            M6G K = new M6G();\n        }\n\n        static class mc {}\n\n        W H = new W();\n\n        M6G.W.sY U = new M6G.W.sY();\n\n        M6G.W eW = new M6G.W();\n    }\n\n    static class h {}\n}", innerClass.toString());
    }

    @Test
    public void test037() {
        Launcher launcher = new Launcher();
        launcher.getEnvironment().setComplianceLevel(17);
        launcher.getEnvironment().setAutoImports(true);
        launcher.getEnvironment().setShouldCompile(true);
        launcher.addInputResource(new VirtualFile("class Nl {\n  class VS {\n    class KBkN_ {\n      class H {\n        class FYVF {\n          class S {\n            class ni {\n              class qB {\n                class G {\n                  class ZX {\n                    class rTH {\n\n                      ni.qB.G b = new H.FYVF.S.ni.qB.G();\n                    }\n                    class foH_Bp{}\n                    class sb{}\n                    Nl.VS.KBkN_ ynXb = new Nl.VS.KBkN_();\n                    VS.KBkN_.H.FYVF.S.ni.qB.G.ZX I = new ZX();\n                    VS.KBkN_.H.FYVF.S aG = new FYVF.S();\n                  }\n                  class eoKxZ {\n\n                    Nl O = new Nl();\n                  }\n                  FYVF.S.ni pxz = new ni();\n                }\n                class LQF {\n\n                  Nl M = new Nl();\n                }\n                class B {\n\n                  KBkN_.H.FYVF.S.ni.qB.B At = new qB.B();\n                  KBkN_.H.FYVF vwRW = new VS.KBkN_.H.FYVF();\n                  KBkN_.H.FYVF.S m = new VS.KBkN_.H.FYVF.S();\n                  ni W = new Nl.VS.KBkN_.H.FYVF.S.ni();\n                  VS.KBkN_.H E = new H();\n                  ni HxGBUb = new Nl.VS.KBkN_.H.FYVF.S.ni();\n                }\n                \n              }\n              H.FYVF.S g = new S();\n              FYVF.S.ni hlBA = new H.FYVF.S.ni();\n              VS.KBkN_.H.FYVF.S.ni mF = new Nl.VS.KBkN_.H.FYVF.S.ni();\n              ni.qB C = new KBkN_.H.FYVF.S.ni.qB();\n              VS.KBkN_.H yE = new Nl.VS.KBkN_.H();\n              ni jYm6Dfn5i = new ni();\n            }\n            H bA = new H();\n          }\n          class v{}\n          class d {\n\n            FYVF Niz = new KBkN_.H.FYVF();\n            Nl.VS.KBkN_.H.FYVF Gd = new FYVF();\n            Nl.VS.KBkN_.H.FYVF L = new FYVF();\n            FYVF o_qN = new VS.KBkN_.H.FYVF();\n          }\n          KBkN_.H.FYVF zq = new VS.KBkN_.H.FYVF();\n        }\n        \n      }\n      class RU {\n\n        Nl.VS.KBkN_ ID3 = new KBkN_();\n        Nl.VS.KBkN_.RU i0 = new Nl.VS.KBkN_.RU();\n        RU w = new Nl.VS.KBkN_.RU();\n      }\n      static class N{}\n      \n    }\n    static class Wd_{}\n    static class yB{}\n    Nl LB = new Nl();\n    Nl.VS V = new Nl.VS();\n  }\n  Nl.VS A = new VS();\n  Nl.VS j = new VS();\n  Nl ag = new Nl();\n}"));
        CtType<?> innerClass = launcher.buildModel().getAllTypes().iterator().next();
        assertEquals("class Nl {\n    class VS {\n        class KBkN_ {\n            class H {\n                class FYVF {\n                    class S {\n                        class ni {\n                            class qB {\n                                class G {\n                                    class ZX {\n                                        class rTH {\n                                            ni.qB.G b = new H.FYVF.S.ni.qB.G();\n                                        }\n\n                                        class foH_Bp {}\n\n                                        class sb {}\n\n                                        Nl.VS.KBkN_ ynXb = new Nl.VS.KBkN_();\n\n                                        VS.KBkN_.H.FYVF.S.ni.qB.G.ZX I = new ZX();\n\n                                        VS.KBkN_.H.FYVF.S aG = new FYVF.S();\n                                    }\n\n                                    class eoKxZ {\n                                        Nl O = new Nl();\n                                    }\n\n                                    FYVF.S.ni pxz = new ni();\n                                }\n\n                                class LQF {\n                                    Nl M = new Nl();\n                                }\n\n                                class B {\n                                    KBkN_.H.FYVF.S.ni.qB.B At = new qB.B();\n\n                                    KBkN_.H.FYVF vwRW = new VS.KBkN_.H.FYVF();\n\n                                    KBkN_.H.FYVF.S m = new VS.KBkN_.H.FYVF.S();\n\n                                    ni W = new Nl.VS.KBkN_.H.FYVF.S.ni();\n\n                                    VS.KBkN_.H E = new H();\n\n                                    ni HxGBUb = new Nl.VS.KBkN_.H.FYVF.S.ni();\n                                }\n                            }\n\n                            H.FYVF.S g = new S();\n\n                            FYVF.S.ni hlBA = new H.FYVF.S.ni();\n\n                            VS.KBkN_.H.FYVF.S.ni mF = new Nl.VS.KBkN_.H.FYVF.S.ni();\n\n                            ni.qB C = new KBkN_.H.FYVF.S.ni.qB();\n\n                            VS.KBkN_.H yE = new Nl.VS.KBkN_.H();\n\n                            ni jYm6Dfn5i = new ni();\n                        }\n\n                        H bA = new H();\n                    }\n\n                    class v {}\n\n                    class d {\n                        FYVF Niz = new KBkN_.H.FYVF();\n\n                        Nl.VS.KBkN_.H.FYVF Gd = new FYVF();\n\n                        Nl.VS.KBkN_.H.FYVF L = new FYVF();\n\n                        FYVF o_qN = new VS.KBkN_.H.FYVF();\n                    }\n\n                    KBkN_.H.FYVF zq = new VS.KBkN_.H.FYVF();\n                }\n            }\n\n            class RU {\n                Nl.VS.KBkN_ ID3 = new KBkN_();\n\n                Nl.VS.KBkN_.RU i0 = new Nl.VS.KBkN_.RU();\n\n                RU w = new Nl.VS.KBkN_.RU();\n            }\n\n            static class N {}\n        }\n\n        static class Wd_ {}\n\n        static class yB {}\n\n        Nl LB = new Nl();\n\n        Nl.VS V = new Nl.VS();\n    }\n\n    Nl.VS A = new VS();\n\n    Nl.VS j = new VS();\n\n    Nl ag = new Nl();\n}", innerClass.toString());
    }

    @Test
    public void test038() {
        Launcher launcher = new Launcher();
        launcher.getEnvironment().setComplianceLevel(17);
        launcher.getEnvironment().setAutoImports(true);
        launcher.getEnvironment().setShouldCompile(true);
        launcher.addInputResource(new VirtualFile("class W {\n  class c {\n    class r7 {\n      class g {\n        class w {\n          class Ah {\n            class ZZ {\n              class Y{}\n              class yoh{}\n              c.r7.g.w lHMxt = new c.r7.g.w();\n              W n = new W();\n            }\n            \n          }\n          class t{}\n          class Rz {\n\n            c jj = new c();\n            w a = new w();\n            g pP = new r7.g();\n          }\n          r7.g.w.t a_dif = new W.c.r7.g.w.t();\n        }\n        class h{}\n        W EvBS = new W();\n        r7 J = new r7();\n        W.c cKDdCnU = new c();\n        W w8Jjn = new W();\n        W hzt = new W();\n        c y = new c();\n      }\n      class k64v {\n\n        W.c.r7 bN = new W.c.r7();\n        c.r7 f = new W.c.r7();\n      }\n      class Csar{}\n      class KMx {\n\n        W o = new W();\n      }\n      \n    }\n    class OsMClVZz {\n\n      W K1 = new W();\n      OsMClVZz v = new OsMClVZz();\n    }\n    static class q{}\n    class H{}\n    \n  }\n  class N {\n\n    N WB = new W.N();\n    W.N m = new W.N();\n    W C = new W();\n    W TE = new W();\n    W WW = new W();\n    W F = new W();\n  }\n  class A{}\n  W nu = new W();\n}"));
        CtType<?> innerClass = launcher.buildModel().getAllTypes().iterator().next();
        assertEquals("class W {\n    class c {\n        class r7 {\n            class g {\n                class w {\n                    class Ah {\n                        class ZZ {\n                            class Y {}\n\n                            class yoh {}\n\n                            c.r7.g.w lHMxt = new c.r7.g.w();\n\n                            W n = new W();\n                        }\n                    }\n\n                    class t {}\n\n                    class Rz {\n                        c jj = new c();\n\n                        w a = new w();\n\n                        g pP = new r7.g();\n                    }\n\n                    r7.g.w.t a_dif = new W.c.r7.g.w.t();\n                }\n\n                class h {}\n\n                W EvBS = new W();\n\n                r7 J = new r7();\n\n                W.c cKDdCnU = new c();\n\n                W w8Jjn = new W();\n\n                W hzt = new W();\n\n                c y = new c();\n            }\n\n            class k64v {\n                W.c.r7 bN = new W.c.r7();\n\n                c.r7 f = new W.c.r7();\n            }\n\n            class Csar {}\n\n            class KMx {\n                W o = new W();\n            }\n        }\n\n        class OsMClVZz {\n            W K1 = new W();\n\n            OsMClVZz v = new OsMClVZz();\n        }\n\n        static class q {}\n\n        class H {}\n    }\n\n    class N {\n        N WB = new W.N();\n\n        W.N m = new W.N();\n\n        W C = new W();\n\n        W TE = new W();\n\n        W WW = new W();\n\n        W F = new W();\n    }\n\n    class A {}\n\n    W nu = new W();\n}", innerClass.toString());
    }

    @Test
    public void test039() {
        Launcher launcher = new Launcher();
        launcher.getEnvironment().setComplianceLevel(17);
        launcher.getEnvironment().setAutoImports(true);
        launcher.getEnvironment().setShouldCompile(true);
        launcher.addInputResource(new VirtualFile("class DkLvy {\n  class B {\n    class Xay {\n      class S {\n        class psh {\n          class Eq {\n            class AwHq {\n              class N {\n                class w {\n\n                  B fSzk = new B();\n                }\n                class I{}\n                class J{}\n                class e5Ykuv {\n\n                  AwHq.N LmRE = new Eq.AwHq.N();\n                  DkLvy.B.Xay.S.psh.Eq.AwHq K = new Eq.AwHq();\n                  DkLvy.B.Xay ZJ = new DkLvy.B.Xay();\n                  S.psh.Eq.AwHq.N.e5Ykuv T = new B.Xay.S.psh.Eq.AwHq.N.e5Ykuv();\n                }\n                \n              }\n              Xay.S Zv = new Xay.S();\n              psh.Eq.AwHq AiIG = new DkLvy.B.Xay.S.psh.Eq.AwHq();\n            }\n            class NMLo {\n\n              NMLo X = new NMLo();\n              Xay.S KJ4 = new Xay.S();\n              Xay.S.psh.Eq Y = new Eq();\n            }\n            class UR{}\n            B.Xay.S.psh.Eq joA = new S.psh.Eq();\n            DkLvy EK_ = new DkLvy();\n            DkLvy.B d = new DkLvy.B();\n          }\n          Xay.S.psh s = new DkLvy.B.Xay.S.psh();\n        }\n        class fS {\n\n          Xay Y4sDD = new Xay();\n          DkLvy.B.Xay.S vt = new Xay.S();\n        }\n        \n      }\n      class S0 {\n\n        B Z = new DkLvy.B();\n        DkLvy.B.Xay.S0 r = new B.Xay.S0();\n      }\n      class A4{}\n      class t_ {\n\n        DkLvy.B.Xay q4 = new Xay();\n      }\n      \n    }\n    class Q {\n\n      B.Q M4x = new DkLvy.B.Q();\n    }\n    class P2{}\n    B j = new B();\n  }\n  static class Urmn{}\n  class D{}\n  \n}"));
        CtType<?> innerClass = launcher.buildModel().getAllTypes().iterator().next();
        assertEquals("class DkLvy {\n    class B {\n        class Xay {\n            class S {\n                class psh {\n                    class Eq {\n                        class AwHq {\n                            class N {\n                                class w {\n                                    B fSzk = new B();\n                                }\n\n                                class I {}\n\n                                class J {}\n\n                                class e5Ykuv {\n                                    AwHq.N LmRE = new Eq.AwHq.N();\n\n                                    DkLvy.B.Xay.S.psh.Eq.AwHq K = new Eq.AwHq();\n\n                                    DkLvy.B.Xay ZJ = new DkLvy.B.Xay();\n\n                                    S.psh.Eq.AwHq.N.e5Ykuv T = new B.Xay.S.psh.Eq.AwHq.N.e5Ykuv();\n                                }\n                            }\n\n                            Xay.S Zv = new Xay.S();\n\n                            psh.Eq.AwHq AiIG = new DkLvy.B.Xay.S.psh.Eq.AwHq();\n                        }\n\n                        class NMLo {\n                            NMLo X = new NMLo();\n\n                            Xay.S KJ4 = new Xay.S();\n\n                            Xay.S.psh.Eq Y = new Eq();\n                        }\n\n                        class UR {}\n\n                        B.Xay.S.psh.Eq joA = new S.psh.Eq();\n\n                        DkLvy EK_ = new DkLvy();\n\n                        DkLvy.B d = new DkLvy.B();\n                    }\n\n                    Xay.S.psh s = new DkLvy.B.Xay.S.psh();\n                }\n\n                class fS {\n                    Xay Y4sDD = new Xay();\n\n                    DkLvy.B.Xay.S vt = new Xay.S();\n                }\n            }\n\n            class S0 {\n                B Z = new DkLvy.B();\n\n                DkLvy.B.Xay.S0 r = new B.Xay.S0();\n            }\n\n            class A4 {}\n\n            class t_ {\n                DkLvy.B.Xay q4 = new Xay();\n            }\n        }\n\n        class Q {\n            B.Q M4x = new DkLvy.B.Q();\n        }\n\n        class P2 {}\n\n        B j = new B();\n    }\n\n    static class Urmn {}\n\n    class D {}\n}", innerClass.toString());
    }

    @Test
    public void test040() {
        Launcher launcher = new Launcher();
        launcher.getEnvironment().setComplianceLevel(17);
        launcher.getEnvironment().setAutoImports(true);
        launcher.getEnvironment().setShouldCompile(true);
        launcher.addInputResource(new VirtualFile("class z {\n  class C {\n    class yp {\n      class b {\n        class gX {\n          class Tz4 {\n            class a {\n              class v{}\n              class G{}\n              class r{}\n              class T {\n\n                z.C.yp wZ = new yp();\n              }\n              \n            }\n            class I {\n\n              yp.b Z3 = new b();\n              z.C K0Mu = new z.C();\n              z.C Rrs = new C();\n            }\n            class oId{}\n            \n          }\n          class Zz {\n\n            b L = new yp.b();\n            z XJQ = new z();\n            C.yp.b K7 = new z.C.yp.b();\n          }\n          class V{}\n          \n        }\n        class tkE {\n\n          z A = new z();\n        }\n        class ngTU{}\n        \n      }\n      class U {\n\n        z mZ = new z();\n      }\n      class o {\n\n        C.yp m = new yp();\n        C zm4 = new z.C();\n      }\n      class jX {\n\n        z.C.yp l = new yp();\n      }\n      \n    }\n    class JaDD {\n\n      C.JaDD ox6 = new JaDD();\n      C.JaDD u = new z.C.JaDD();\n      C.JaDD c = new JaDD();\n    }\n    class Ry{}\n    class Y{}\n    \n  }\n  z.C S = new C();\n}"));
        CtType<?> innerClass = launcher.buildModel().getAllTypes().iterator().next();
        assertEquals("class z {\n    class C {\n        class yp {\n            class b {\n                class gX {\n                    class Tz4 {\n                        class a {\n                            class v {}\n\n                            class G {}\n\n                            class r {}\n\n                            class T {\n                                z.C.yp wZ = new yp();\n                            }\n                        }\n\n                        class I {\n                            yp.b Z3 = new b();\n\n                            z.C K0Mu = new z.C();\n\n                            z.C Rrs = new C();\n                        }\n\n                        class oId {}\n                    }\n\n                    class Zz {\n                        b L = new yp.b();\n\n                        z XJQ = new z();\n\n                        C.yp.b K7 = new z.C.yp.b();\n                    }\n\n                    class V {}\n                }\n\n                class tkE {\n                    z A = new z();\n                }\n\n                class ngTU {}\n            }\n\n            class U {\n                z mZ = new z();\n            }\n\n            class o {\n                C.yp m = new yp();\n\n                C zm4 = new z.C();\n            }\n\n            class jX {\n                z.C.yp l = new yp();\n            }\n        }\n\n        class JaDD {\n            C.JaDD ox6 = new JaDD();\n\n            C.JaDD u = new z.C.JaDD();\n\n            C.JaDD c = new JaDD();\n        }\n\n        class Ry {}\n\n        class Y {}\n    }\n\n    z.C S = new C();\n}", innerClass.toString());
    }

    @Test
    public void test041() {
        Launcher launcher = new Launcher();
        launcher.getEnvironment().setComplianceLevel(17);
        launcher.getEnvironment().setAutoImports(true);
        launcher.getEnvironment().setShouldCompile(true);
        launcher.addInputResource(new VirtualFile("class n {\n  class QPU {\n    class mps {\n      class yAE {\n        class K {\n          class z {\n            class Pu {\n              class JC {\n\n                n.QPU i = new QPU();\n                K.z.Pu.JC X = new z.Pu.JC();\n                QPU.mps.yAE.K MT = new n.QPU.mps.yAE.K();\n                yAE.K.z.Pu b3yu5 = new K.z.Pu();\n              }\n              class Y {\n\n                K l = new mps.yAE.K();\n                QPU.mps.yAE.K h = new n.QPU.mps.yAE.K();\n              }\n              class a{}\n              class I{}\n              \n            }\n            class W {\n\n              yAE.K.z.W Or = new n.QPU.mps.yAE.K.z.W();\n              n.QPU.mps id = new mps();\n              n E2 = new n();\n            }\n            mps qR = new n.QPU.mps();\n          }\n          class ZnG{}\n          class EgG{}\n          n.QPU.mps.yAE.K.EgG uX = new yAE.K.EgG();\n          mps.yAE.K A8YL3LES = new n.QPU.mps.yAE.K();\n        }\n        \n      }\n      class o {\n\n        n e = new n();\n        QPU.mps.o B = new n.QPU.mps.o();\n        QPU S = new n.QPU();\n        mps.o az = new mps.o();\n      }\n      class Gx{}\n      class it {\n\n        QPU J = new QPU();\n        QPU.mps YIja = new QPU.mps();\n      }\n      mps K7 = new QPU.mps();\n      QPU EK = new n.QPU();\n      mps.Gx N = new mps.Gx();\n      n NU = new n();\n      n.QPU lJ = new QPU();\n    }\n    class sE {\n\n      n U = new n();\n      QPU.sE j = new n.QPU.sE();\n    }\n    static class Tx{}\n    class P {\n\n      n.QPU k = new n.QPU();\n      n b = new n();\n      n OFP = new n();\n      QPU.P ppO = new P();\n    }\n    n.QPU m = new n.QPU();\n    Tx bHsm = new QPU.Tx();\n  }\n  class N5U{}\n  class Z{}\n  n g = new n();\n}"));
        CtType<?> innerClass = launcher.buildModel().getAllTypes().iterator().next();
        assertEquals("class n {\n    class QPU {\n        class mps {\n            class yAE {\n                class K {\n                    class z {\n                        class Pu {\n                            class JC {\n                                n.QPU i = new QPU();\n\n                                K.z.Pu.JC X = new z.Pu.JC();\n\n                                QPU.mps.yAE.K MT = new n.QPU.mps.yAE.K();\n\n                                yAE.K.z.Pu b3yu5 = new K.z.Pu();\n                            }\n\n                            class Y {\n                                K l = new mps.yAE.K();\n\n                                QPU.mps.yAE.K h = new n.QPU.mps.yAE.K();\n                            }\n\n                            class a {}\n\n                            class I {}\n                        }\n\n                        class W {\n                            yAE.K.z.W Or = new n.QPU.mps.yAE.K.z.W();\n\n                            n.QPU.mps id = new mps();\n\n                            n E2 = new n();\n                        }\n\n                        mps qR = new n.QPU.mps();\n                    }\n\n                    class ZnG {}\n\n                    class EgG {}\n\n                    n.QPU.mps.yAE.K.EgG uX = new yAE.K.EgG();\n\n                    mps.yAE.K A8YL3LES = new n.QPU.mps.yAE.K();\n                }\n            }\n\n            class o {\n                n e = new n();\n\n                QPU.mps.o B = new n.QPU.mps.o();\n\n                QPU S = new n.QPU();\n\n                mps.o az = new mps.o();\n            }\n\n            class Gx {}\n\n            class it {\n                QPU J = new QPU();\n\n                QPU.mps YIja = new QPU.mps();\n            }\n\n            mps K7 = new QPU.mps();\n\n            QPU EK = new n.QPU();\n\n            mps.Gx N = new mps.Gx();\n\n            n NU = new n();\n\n            n.QPU lJ = new QPU();\n        }\n\n        class sE {\n            n U = new n();\n\n            QPU.sE j = new n.QPU.sE();\n        }\n\n        static class Tx {}\n\n        class P {\n            n.QPU k = new n.QPU();\n\n            n b = new n();\n\n            n OFP = new n();\n\n            QPU.P ppO = new P();\n        }\n\n        n.QPU m = new n.QPU();\n\n        Tx bHsm = new QPU.Tx();\n    }\n\n    class N5U {}\n\n    class Z {}\n\n    n g = new n();\n}", innerClass.toString());
    }

    @Test
    public void test042() {
        Launcher launcher = new Launcher();
        launcher.getEnvironment().setComplianceLevel(17);
        launcher.getEnvironment().setAutoImports(true);
        launcher.getEnvironment().setShouldCompile(true);
        launcher.addInputResource(new VirtualFile("class sNUD {\n  class Z {\n    class DU {\n      class Ne {\n        class DmgOHKN {\n          class O {\n            class PA {\n              class Ocbk {\n                class u {\n                  class cp{}\n                  class Q{}\n                  class FDO {\n\n                    Z.DU r = new sNUD.Z.DU();\n                  }\n                  sNUD Y = new sNUD();\n                }\n                class uK {\n\n                  uK bRO = new DmgOHKN.O.PA.Ocbk.uK();\n                }\n                DU j = new DU();\n              }\n              class c{}\n              sNUD.Z.DU.Ne.DmgOHKN.O UHNmM599h = new Z.DU.Ne.DmgOHKN.O();\n              Z XxGs = new sNUD.Z();\n              sNUD.Z.DU l = new DU();\n            }\n            class W {\n\n              DU DDfGA = new sNUD.Z.DU();\n              sNUD.Z.DU.Ne.DmgOHKN uj = new DU.Ne.DmgOHKN();\n            }\n            \n          }\n          \n        }\n        \n      }\n      class A7Jv{}\n      class H_2 {\n\n        sNUD.Z.DU.H_2 k = new H_2();\n        sNUD.Z.DU.H_2 ez89ART = new H_2();\n      }\n      class A{}\n      \n    }\n    class S {\n\n      S zsO = new sNUD.Z.S();\n    }\n    class II2p{}\n    Z zcx = new sNUD.Z();\n  }\n  sNUD mxp = new sNUD();\n  Z NG = new Z();\n}"));
        CtType<?> innerClass = launcher.buildModel().getAllTypes().iterator().next();
        assertEquals("class sNUD {\n    class Z {\n        class DU {\n            class Ne {\n                class DmgOHKN {\n                    class O {\n                        class PA {\n                            class Ocbk {\n                                class u {\n                                    class cp {}\n\n                                    class Q {}\n\n                                    class FDO {\n                                        Z.DU r = new sNUD.Z.DU();\n                                    }\n\n                                    sNUD Y = new sNUD();\n                                }\n\n                                class uK {\n                                    uK bRO = new DmgOHKN.O.PA.Ocbk.uK();\n                                }\n\n                                DU j = new DU();\n                            }\n\n                            class c {}\n\n                            sNUD.Z.DU.Ne.DmgOHKN.O UHNmM599h = new Z.DU.Ne.DmgOHKN.O();\n\n                            Z XxGs = new sNUD.Z();\n\n                            sNUD.Z.DU l = new DU();\n                        }\n\n                        class W {\n                            DU DDfGA = new sNUD.Z.DU();\n\n                            sNUD.Z.DU.Ne.DmgOHKN uj = new DU.Ne.DmgOHKN();\n                        }\n                    }\n                }\n            }\n\n            class A7Jv {}\n\n            class H_2 {\n                sNUD.Z.DU.H_2 k = new H_2();\n\n                sNUD.Z.DU.H_2 ez89ART = new H_2();\n            }\n\n            class A {}\n        }\n\n        class S {\n            S zsO = new sNUD.Z.S();\n        }\n\n        class II2p {}\n\n        Z zcx = new sNUD.Z();\n    }\n\n    sNUD mxp = new sNUD();\n\n    Z NG = new Z();\n}", innerClass.toString());
    }

    @Test
    public void test043() {
        Launcher launcher = new Launcher();
        launcher.getEnvironment().setComplianceLevel(17);
        launcher.getEnvironment().setAutoImports(true);
        launcher.getEnvironment().setShouldCompile(true);
        launcher.addInputResource(new VirtualFile("class Q {\n  class n {\n    class eg {\n      class U {\n        class r {\n          class aJ2 {\n            class pwvT {\n              class Yki{}\n              class Vv {\n\n                Vv C0NM = new eg.U.r.aJ2.pwvT.Vv();\n              }\n              class M {\n\n                n.eg.U R = new n.eg.U();\n              }\n              \n            }\n            class XqhE{}\n            class Fp {\n\n              n u5 = new n();\n            }\n            class S {\n\n              n.eg O = new eg();\n              Q E9O = new Q();\n              n.eg.U A = new n.eg.U();\n            }\n            eg.U.r.aJ2 Qn = new r.aJ2();\n            U.r.aJ2.pwvT o1 = new aJ2.pwvT();\n          }\n          class m{}\n          class y {\n\n            r fR = new U.r();\n            Q.n.eg.U sP = new Q.n.eg.U();\n          }\n          class J{}\n          Q.n.eg X_ = new Q.n.eg();\n          Q bX = new Q();\n          Q.n.eg.U.r.aJ2 da = new aJ2();\n        }\n        class D {\n\n          n.eg w = new Q.n.eg();\n          Q.n.eg Mbq = new n.eg();\n        }\n        \n      }\n      class Af{}\n      class NM17k {\n\n        Q.n.eg.NM17k D7v = new Q.n.eg.NM17k();\n        n.eg dKs = new n.eg();\n        n nX = new n();\n        Q.n.eg.NM17k oXPT = new Q.n.eg.NM17k();\n      }\n      eg.Af h = new n.eg.Af();\n    }\n    class EWQt{}\n    \n  }\n  class j {\n\n    Q.j I = new Q.j();\n    j Bh = new Q.j();\n    Q FS = new Q();\n    Q K = new Q();\n  }\n  static class v{}\n  \n}"));
        CtType<?> innerClass = launcher.buildModel().getAllTypes().iterator().next();
        assertEquals("class Q {\n    class n {\n        class eg {\n            class U {\n                class r {\n                    class aJ2 {\n                        class pwvT {\n                            class Yki {}\n\n                            class Vv {\n                                Vv C0NM = new eg.U.r.aJ2.pwvT.Vv();\n                            }\n\n                            class M {\n                                n.eg.U R = new n.eg.U();\n                            }\n                        }\n\n                        class XqhE {}\n\n                        class Fp {\n                            n u5 = new n();\n                        }\n\n                        class S {\n                            n.eg O = new eg();\n\n                            Q E9O = new Q();\n\n                            n.eg.U A = new n.eg.U();\n                        }\n\n                        eg.U.r.aJ2 Qn = new r.aJ2();\n\n                        U.r.aJ2.pwvT o1 = new aJ2.pwvT();\n                    }\n\n                    class m {}\n\n                    class y {\n                        r fR = new U.r();\n\n                        Q.n.eg.U sP = new Q.n.eg.U();\n                    }\n\n                    class J {}\n\n                    Q.n.eg X_ = new Q.n.eg();\n\n                    Q bX = new Q();\n\n                    Q.n.eg.U.r.aJ2 da = new aJ2();\n                }\n\n                class D {\n                    n.eg w = new Q.n.eg();\n\n                    Q.n.eg Mbq = new n.eg();\n                }\n            }\n\n            class Af {}\n\n            class NM17k {\n                Q.n.eg.NM17k D7v = new Q.n.eg.NM17k();\n\n                n.eg dKs = new n.eg();\n\n                n nX = new n();\n\n                Q.n.eg.NM17k oXPT = new Q.n.eg.NM17k();\n            }\n\n            eg.Af h = new n.eg.Af();\n        }\n\n        class EWQt {}\n    }\n\n    class j {\n        Q.j I = new Q.j();\n\n        j Bh = new Q.j();\n\n        Q FS = new Q();\n\n        Q K = new Q();\n    }\n\n    static class v {}\n}", innerClass.toString());
    }

    @Test
    public void test044() {
        Launcher launcher = new Launcher();
        launcher.getEnvironment().setComplianceLevel(17);
        launcher.getEnvironment().setAutoImports(true);
        launcher.getEnvironment().setShouldCompile(true);
        launcher.addInputResource(new VirtualFile("class I {\n  class V {\n    class W {\n      class h {\n        class EC {\n          class T {\n            class l {\n              class G {\n                class k {\n\n                  I.V.W.h.EC y = new V.W.h.EC();\n                }\n                class ej{}\n                class TF {\n\n                  l.G p = new EC.T.l.G();\n                }\n                class c {\n\n                  I w = new I();\n                  W mg = new I.V.W();\n                }\n                \n              }\n              class n {\n\n                W.h.EC.T.l X = new EC.T.l();\n                W wJwi = new I.V.W();\n                I g = new I();\n              }\n              \n            }\n            \n          }\n          W.h.EC fNJ = new EC();\n          W.h.EC.T KZ = new EC.T();\n        }\n        class rdm {\n\n          h.rdm AMkI = new V.W.h.rdm();\n          V.W.h Kep = new h();\n        }\n        class U{}\n        V.W v = new I.V.W();\n      }\n      class Hh {\n\n        I.V.W hD = new W();\n        W bjNo = new I.V.W();\n      }\n      class pWZ {\n\n        V.W.pWZ fe = new W.pWZ();\n        I s7C1 = new I();\n        I.V.W Ow__skqKi = new W();\n      }\n      class t {\n\n        W zH = new I.V.W();\n        I.V J = new I.V();\n      }\n      I.V.W.t Z = new I.V.W.t();\n    }\n    class d {\n\n      I.V YC = new I.V();\n      I dAk5dj = new I();\n      I ag = new I();\n      I s = new I();\n      V.d Y0 = new I.V.d();\n    }\n    class K{}\n    V.d x1 = new I.V.d();\n    d Ks = new d();\n  }\n  class a{}\n  class BRAkc9{}\n  class s6{}\n  I.a NmF1_2 = new I.a();\n}"));
        CtType<?> innerClass = launcher.buildModel().getAllTypes().iterator().next();
        assertEquals("class I {\n    class V {\n        class W {\n            class h {\n                class EC {\n                    class T {\n                        class l {\n                            class G {\n                                class k {\n                                    I.V.W.h.EC y = new V.W.h.EC();\n                                }\n\n                                class ej {}\n\n                                class TF {\n                                    l.G p = new EC.T.l.G();\n                                }\n\n                                class c {\n                                    I w = new I();\n\n                                    W mg = new I.V.W();\n                                }\n                            }\n\n                            class n {\n                                W.h.EC.T.l X = new EC.T.l();\n\n                                W wJwi = new I.V.W();\n\n                                I g = new I();\n                            }\n                        }\n                    }\n\n                    W.h.EC fNJ = new EC();\n\n                    W.h.EC.T KZ = new EC.T();\n                }\n\n                class rdm {\n                    h.rdm AMkI = new V.W.h.rdm();\n\n                    V.W.h Kep = new h();\n                }\n\n                class U {}\n\n                V.W v = new I.V.W();\n            }\n\n            class Hh {\n                I.V.W hD = new W();\n\n                W bjNo = new I.V.W();\n            }\n\n            class pWZ {\n                V.W.pWZ fe = new W.pWZ();\n\n                I s7C1 = new I();\n\n                I.V.W Ow__skqKi = new W();\n            }\n\n            class t {\n                W zH = new I.V.W();\n\n                I.V J = new I.V();\n            }\n\n            I.V.W.t Z = new I.V.W.t();\n        }\n\n        class d {\n            I.V YC = new I.V();\n\n            I dAk5dj = new I();\n\n            I ag = new I();\n\n            I s = new I();\n\n            V.d Y0 = new I.V.d();\n        }\n\n        class K {}\n\n        V.d x1 = new I.V.d();\n\n        d Ks = new d();\n    }\n\n    class a {}\n\n    class BRAkc9 {}\n\n    class s6 {}\n\n    I.a NmF1_2 = new I.a();\n}", innerClass.toString());
    }

    @Test
    public void test045() {
        Launcher launcher = new Launcher();
        launcher.getEnvironment().setComplianceLevel(17);
        launcher.getEnvironment().setAutoImports(true);
        launcher.getEnvironment().setShouldCompile(true);
        launcher.addInputResource(new VirtualFile("class b {\n  class F {\n    class d4JR {\n      class u {\n        class C {\n          class aR {\n            class p {\n              class Y {\n                class c {\n                  class U3ED {\n                    class G {\n                      class uj{}\n                      class bv{}\n                      class QiK {\n\n                        p.Y.c FT = new c();\n                      }\n                      \n                    }\n                    class g {\n\n                      b n = new b();\n                    }\n                    \n                  }\n                  class Yi {\n\n                    u.C.aR.p.Y.c U = new C.aR.p.Y.c();\n                    u a = new b.F.d4JR.u();\n                    u.C.aR ucWOOeB = new u.C.aR();\n                    C.aR.p.Y o = new C.aR.p.Y();\n                    d4JR i = new d4JR();\n                  }\n                  class TOwDl {\n\n                    F.d4JR.u.C.aR.p.Y.c.TOwDl J = new TOwDl();\n                  }\n                  \n                }\n                class GTf{}\n                \n              }\n              \n            }\n            u.C.aR.p B = new p();\n          }\n          class KG {\n\n            C P = new b.F.d4JR.u.C();\n            F px = new b.F();\n            F.d4JR.u.C.KG fvf = new b.F.d4JR.u.C.KG();\n            b w = new b();\n          }\n          \n        }\n        class l {\n\n          F.d4JR ZAu = new d4JR();\n        }\n        b.F.d4JR M = new d4JR();\n        b z = new b();\n        F.d4JR.u sE = new d4JR.u();\n        b.F.d4JR.u r = new F.d4JR.u();\n      }\n      class tl{}\n      F D = new b.F();\n    }\n    class R {\n\n      b.F W = new F();\n    }\n    \n  }\n  b.F Et = new b.F();\n  F h = new F();\n}"));
        CtType<?> innerClass = launcher.buildModel().getAllTypes().iterator().next();
        assertEquals("class b {\n    class F {\n        class d4JR {\n            class u {\n                class C {\n                    class aR {\n                        class p {\n                            class Y {\n                                class c {\n                                    class U3ED {\n                                        class G {\n                                            class uj {}\n\n                                            class bv {}\n\n                                            class QiK {\n                                                p.Y.c FT = new c();\n                                            }\n                                        }\n\n                                        class g {\n                                            b n = new b();\n                                        }\n                                    }\n\n                                    class Yi {\n                                        u.C.aR.p.Y.c U = new C.aR.p.Y.c();\n\n                                        u a = new b.F.d4JR.u();\n\n                                        u.C.aR ucWOOeB = new u.C.aR();\n\n                                        C.aR.p.Y o = new C.aR.p.Y();\n\n                                        d4JR i = new d4JR();\n                                    }\n\n                                    class TOwDl {\n                                        F.d4JR.u.C.aR.p.Y.c.TOwDl J = new TOwDl();\n                                    }\n                                }\n\n                                class GTf {}\n                            }\n                        }\n\n                        u.C.aR.p B = new p();\n                    }\n\n                    class KG {\n                        C P = new b.F.d4JR.u.C();\n\n                        F px = new b.F();\n\n                        F.d4JR.u.C.KG fvf = new b.F.d4JR.u.C.KG();\n\n                        b w = new b();\n                    }\n                }\n\n                class l {\n                    F.d4JR ZAu = new d4JR();\n                }\n\n                b.F.d4JR M = new d4JR();\n\n                b z = new b();\n\n                F.d4JR.u sE = new d4JR.u();\n\n                b.F.d4JR.u r = new F.d4JR.u();\n            }\n\n            class tl {}\n\n            F D = new b.F();\n        }\n\n        class R {\n            b.F W = new F();\n        }\n    }\n\n    b.F Et = new b.F();\n\n    F h = new F();\n}", innerClass.toString());
    }

    @Test
    public void test046() {
        Launcher launcher = new Launcher();
        launcher.getEnvironment().setComplianceLevel(17);
        launcher.getEnvironment().setAutoImports(true);
        launcher.getEnvironment().setShouldCompile(true);
        launcher.addInputResource(new VirtualFile("class ubM {\n  class pQ {\n    class VWW {\n      class ER {\n        class O {\n          class b {\n            class G {\n              class e{}\n              pQ Y = new ubM.pQ();\n            }\n            class Mb {\n\n              ubM.pQ.VWW.ER TjX2M = new ubM.pQ.VWW.ER();\n            }\n            class r{}\n            class a{}\n            pQ.VWW.ER.O C = new O();\n          }\n          class c{}\n          class ON{}\n          \n        }\n        \n      }\n      class A {\n\n        A ob = new ubM.pQ.VWW.A();\n      }\n      VWW h = new pQ.VWW();\n    }\n    class NX{}\n    class B {\n\n      pQ uR = new pQ();\n    }\n    class I7w {\n\n      I7w u67s = new pQ.I7w();\n      ubM U = new ubM();\n      ubM.pQ.I7w y = new ubM.pQ.I7w();\n    }\n    ubM CG = new ubM();\n    ubM.pQ uA = new ubM.pQ();\n  }\n  static class Q{}\n  class dbx{}\n  class J {\n\n    ubM Gg = new ubM();\n    ubM i = new ubM();\n    J N = new ubM.J();\n    ubM S = new ubM();\n  }\n  pQ eE = new pQ();\n  ubM nzx = new ubM();\n  ubM oq = new ubM();\n}"));
        CtType<?> innerClass = launcher.buildModel().getAllTypes().iterator().next();
        assertEquals("class ubM {\n    class pQ {\n        class VWW {\n            class ER {\n                class O {\n                    class b {\n                        class G {\n                            class e {}\n\n                            pQ Y = new ubM.pQ();\n                        }\n\n                        class Mb {\n                            ubM.pQ.VWW.ER TjX2M = new ubM.pQ.VWW.ER();\n                        }\n\n                        class r {}\n\n                        class a {}\n\n                        pQ.VWW.ER.O C = new O();\n                    }\n\n                    class c {}\n\n                    class ON {}\n                }\n            }\n\n            class A {\n                A ob = new ubM.pQ.VWW.A();\n            }\n\n            VWW h = new pQ.VWW();\n        }\n\n        class NX {}\n\n        class B {\n            pQ uR = new pQ();\n        }\n\n        class I7w {\n            I7w u67s = new pQ.I7w();\n\n            ubM U = new ubM();\n\n            ubM.pQ.I7w y = new ubM.pQ.I7w();\n        }\n\n        ubM CG = new ubM();\n\n        ubM.pQ uA = new ubM.pQ();\n    }\n\n    static class Q {}\n\n    class dbx {}\n\n    class J {\n        ubM Gg = new ubM();\n\n        ubM i = new ubM();\n\n        J N = new ubM.J();\n\n        ubM S = new ubM();\n    }\n\n    pQ eE = new pQ();\n\n    ubM nzx = new ubM();\n\n    ubM oq = new ubM();\n}", innerClass.toString());
    }

    @Test
    public void test047() {
        Launcher launcher = new Launcher();
        launcher.getEnvironment().setComplianceLevel(17);
        launcher.getEnvironment().setAutoImports(true);
        launcher.getEnvironment().setShouldCompile(true);
        launcher.addInputResource(new VirtualFile("class N {\n  class oM {\n    class s {\n      class x {\n        class TX {\n          class TSEI {\n            class VU {\n              class Wwp {\n                class X {\n\n                  N.oM.s.x h = new x();\n                  x JhH = new s.x();\n                }\n                class T {\n\n                  oM.s.x F = new x();\n                  oM.s.x.TX.TSEI fO = new x.TX.TSEI();\n                }\n                class p {\n\n                  TX.TSEI.VU.Wwp Z3 = new oM.s.x.TX.TSEI.VU.Wwp();\n                  s m = new s();\n                  N UpNx = new N();\n                  s.x.TX.TSEI.VU.Wwp.p L = new oM.s.x.TX.TSEI.VU.Wwp.p();\n                }\n                class rQ {\n\n                  oM.s.x.TX rjR = new oM.s.x.TX();\n                }\n                \n              }\n              \n            }\n            class Id {\n\n              Id xlq = new oM.s.x.TX.TSEI.Id();\n            }\n            class OI {\n\n              s bu = new s();\n            }\n            N.oM mM = new N.oM();\n            N.oM.s.x.TX.TSEI.VU S = new N.oM.s.x.TX.TSEI.VU();\n          }\n          class h3 {\n\n            oM.s.x VmP = new oM.s.x();\n            oM.s.x Je8 = new N.oM.s.x();\n            s.x BB = new s.x();\n            TX.h3 IU = new TX.h3();\n            N trL9Yt = new N();\n          }\n          \n        }\n        class RVG {\n\n          N.oM.s qu = new N.oM.s();\n          N.oM E0 = new oM();\n          N.oM.s.x XC1 = new N.oM.s.x();\n          N.oM.s.x U = new N.oM.s.x();\n          N.oM.s j = new s();\n          N b = new N();\n        }\n        \n      }\n      static class C{}\n      class v{}\n      \n    }\n    static class v1{}\n    N f = new N();\n    N.oM.s q = new N.oM.s();\n    oM gmE = new N.oM();\n  }\n  class z {\n\n    N.z u = new N.z();\n    N R = new N();\n    N Nj = new N();\n  }\n  \n}"));
        CtType<?> innerClass = launcher.buildModel().getAllTypes().iterator().next();
        assertEquals("class N {\n    class oM {\n        class s {\n            class x {\n                class TX {\n                    class TSEI {\n                        class VU {\n                            class Wwp {\n                                class X {\n                                    N.oM.s.x h = new x();\n\n                                    x JhH = new s.x();\n                                }\n\n                                class T {\n                                    oM.s.x F = new x();\n\n                                    oM.s.x.TX.TSEI fO = new x.TX.TSEI();\n                                }\n\n                                class p {\n                                    TX.TSEI.VU.Wwp Z3 = new oM.s.x.TX.TSEI.VU.Wwp();\n\n                                    s m = new s();\n\n                                    N UpNx = new N();\n\n                                    s.x.TX.TSEI.VU.Wwp.p L = new oM.s.x.TX.TSEI.VU.Wwp.p();\n                                }\n\n                                class rQ {\n                                    oM.s.x.TX rjR = new oM.s.x.TX();\n                                }\n                            }\n                        }\n\n                        class Id {\n                            Id xlq = new oM.s.x.TX.TSEI.Id();\n                        }\n\n                        class OI {\n                            s bu = new s();\n                        }\n\n                        N.oM mM = new N.oM();\n\n                        N.oM.s.x.TX.TSEI.VU S = new N.oM.s.x.TX.TSEI.VU();\n                    }\n\n                    class h3 {\n                        oM.s.x VmP = new oM.s.x();\n\n                        oM.s.x Je8 = new N.oM.s.x();\n\n                        s.x BB = new s.x();\n\n                        TX.h3 IU = new TX.h3();\n\n                        N trL9Yt = new N();\n                    }\n                }\n\n                class RVG {\n                    N.oM.s qu = new N.oM.s();\n\n                    N.oM E0 = new oM();\n\n                    N.oM.s.x XC1 = new N.oM.s.x();\n\n                    N.oM.s.x U = new N.oM.s.x();\n\n                    N.oM.s j = new s();\n\n                    N b = new N();\n                }\n            }\n\n            static class C {}\n\n            class v {}\n        }\n\n        static class v1 {}\n\n        N f = new N();\n\n        N.oM.s q = new N.oM.s();\n\n        oM gmE = new N.oM();\n    }\n\n    class z {\n        N.z u = new N.z();\n\n        N R = new N();\n\n        N Nj = new N();\n    }\n}", innerClass.toString());
    }

    @Test
    public void test048() {
        Launcher launcher = new Launcher();
        launcher.getEnvironment().setComplianceLevel(17);
        launcher.getEnvironment().setAutoImports(true);
        launcher.getEnvironment().setShouldCompile(true);
        launcher.addInputResource(new VirtualFile("class FCO {\n  class Z {\n    class b {\n      class Q {\n        class Dx {\n          class e {\n            class ghDFi8 {\n              class l5M {\n                class V{}\n                class W{}\n                class U72sC {\n\n                  FCO F = new FCO();\n                }\n                \n              }\n              b.Q e7Z = new FCO.Z.b.Q();\n            }\n            class A {\n\n              Z.b.Q U = new FCO.Z.b.Q();\n              Dx v = new b.Q.Dx();\n            }\n            class d{}\n            \n          }\n          class vU{}\n          class J{}\n          class j9Kr{}\n          \n        }\n        class u{}\n        Z ZEr3 = new FCO.Z();\n        b zW_Kk = new FCO.Z.b();\n      }\n      class f {\n\n        FCO.Z E = new FCO.Z();\n      }\n      b e2 = new Z.b();\n    }\n    class gQPx{}\n    class g{}\n    class r_ {\n\n      FCO.Z.r_ Ry2 = new Z.r_();\n    }\n    Z m = new Z();\n    g el = new Z.g();\n    Z.b Dad6 = new FCO.Z.b();\n    Z Y = new Z();\n    FCO XAUof = new FCO();\n    FCO.Z.g ec = new FCO.Z.g();\n    FCO.Z.b OYUd = new FCO.Z.b();\n  }\n  class K {\n\n    FCO YzC = new FCO();\n  }\n  \n}"));
        CtType<?> innerClass = launcher.buildModel().getAllTypes().iterator().next();
        assertEquals("class FCO {\n    class Z {\n        class b {\n            class Q {\n                class Dx {\n                    class e {\n                        class ghDFi8 {\n                            class l5M {\n                                class V {}\n\n                                class W {}\n\n                                class U72sC {\n                                    FCO F = new FCO();\n                                }\n                            }\n\n                            b.Q e7Z = new FCO.Z.b.Q();\n                        }\n\n                        class A {\n                            Z.b.Q U = new FCO.Z.b.Q();\n\n                            Dx v = new b.Q.Dx();\n                        }\n\n                        class d {}\n                    }\n\n                    class vU {}\n\n                    class J {}\n\n                    class j9Kr {}\n                }\n\n                class u {}\n\n                Z ZEr3 = new FCO.Z();\n\n                b zW_Kk = new FCO.Z.b();\n            }\n\n            class f {\n                FCO.Z E = new FCO.Z();\n            }\n\n            b e2 = new Z.b();\n        }\n\n        class gQPx {}\n\n        class g {}\n\n        class r_ {\n            FCO.Z.r_ Ry2 = new Z.r_();\n        }\n\n        Z m = new Z();\n\n        g el = new Z.g();\n\n        Z.b Dad6 = new FCO.Z.b();\n\n        Z Y = new Z();\n\n        FCO XAUof = new FCO();\n\n        FCO.Z.g ec = new FCO.Z.g();\n\n        FCO.Z.b OYUd = new FCO.Z.b();\n    }\n\n    class K {\n        FCO YzC = new FCO();\n    }\n}", innerClass.toString());
    }

    @Test
    public void test049() {
        Launcher launcher = new Launcher();
        launcher.getEnvironment().setComplianceLevel(17);
        launcher.getEnvironment().setAutoImports(true);
        launcher.getEnvironment().setShouldCompile(true);
        launcher.addInputResource(new VirtualFile("class u {\n  class G2 {\n    class EN {\n      class tv {\n        class F {\n          class k {\n            class X {\n              class R{}\n              class q{}\n              class GT{}\n              class IK9{}\n              G2 d = new u.G2();\n              tv.F xxY = new u.G2.EN.tv.F();\n            }\n            class NjYH9pF{}\n            \n          }\n          class w{}\n          \n        }\n        class AI {\n\n          tv M = new EN.tv();\n        }\n        class K {\n\n          u.G2.EN.tv.K Sx = new K();\n          G2 t = new G2();\n          EN.tv.K l = new EN.tv.K();\n        }\n        EN J7W = new EN();\n      }\n      u cryK = new u();\n    }\n    class Mp {\n\n      G2.Mp D = new u.G2.Mp();\n    }\n    static class o{}\n    static class twbh{}\n    twbh h = new G2.twbh();\n    u c = new u();\n    u W = new u();\n    G2.o XJ = new G2.o();\n  }\n  class H {\n\n    u.H V = new H();\n    u N = new u();\n    H S = new H();\n  }\n  class goK{}\n  class HO {\n\n    u V9 = new u();\n    HO G = new u.HO();\n  }\n  u p = new u();\n  u lHxP = new u();\n}"));
        CtType<?> innerClass = launcher.buildModel().getAllTypes().iterator().next();
        assertEquals("class u {\n    class G2 {\n        class EN {\n            class tv {\n                class F {\n                    class k {\n                        class X {\n                            class R {}\n\n                            class q {}\n\n                            class GT {}\n\n                            class IK9 {}\n\n                            G2 d = new u.G2();\n\n                            tv.F xxY = new u.G2.EN.tv.F();\n                        }\n\n                        class NjYH9pF {}\n                    }\n\n                    class w {}\n                }\n\n                class AI {\n                    tv M = new EN.tv();\n                }\n\n                class K {\n                    u.G2.EN.tv.K Sx = new K();\n\n                    G2 t = new G2();\n\n                    EN.tv.K l = new EN.tv.K();\n                }\n\n                EN J7W = new EN();\n            }\n\n            u cryK = new u();\n        }\n\n        class Mp {\n            G2.Mp D = new u.G2.Mp();\n        }\n\n        static class o {}\n\n        static class twbh {}\n\n        twbh h = new G2.twbh();\n\n        u c = new u();\n\n        u W = new u();\n\n        G2.o XJ = new G2.o();\n    }\n\n    class H {\n        u.H V = new H();\n\n        u N = new u();\n\n        H S = new H();\n    }\n\n    class goK {}\n\n    class HO {\n        u V9 = new u();\n\n        HO G = new u.HO();\n    }\n\n    u p = new u();\n\n    u lHxP = new u();\n}", innerClass.toString());
    }

    @Test
    public void test050() {
        Launcher launcher = new Launcher();
        launcher.getEnvironment().setComplianceLevel(17);
        launcher.getEnvironment().setAutoImports(true);
        launcher.getEnvironment().setShouldCompile(true);
        launcher.addInputResource(new VirtualFile("class mP0 {\n  class Y3n {\n    class E {\n      class K {\n        class B {\n          class PL {\n            class a {\n              class Dw {\n\n                Y3n H = new Y3n();\n                K.B.PL.a.Dw y = new B.PL.a.Dw();\n                mP0.Y3n BG = new Y3n();\n                Y3n.E.K.B tuYY = new mP0.Y3n.E.K.B();\n                Y3n.E tR = new E();\n                K.B.PL eL = new Y3n.E.K.B.PL();\n              }\n              class W{}\n              class yI{}\n              class dgw {\n\n                a F5f = new PL.a();\n              }\n              mP0 Np = new mP0();\n              E.K f = new Y3n.E.K();\n              K.B.PL.a D_ZZU = new B.PL.a();\n            }\n            class lPc {\n\n              B G = new K.B();\n            }\n            B D = new Y3n.E.K.B();\n          }\n          class KY {\n\n            E.K.B.KY r = new E.K.B.KY();\n            Y3n m = new mP0.Y3n();\n            mP0.Y3n I = new mP0.Y3n();\n            Y3n p = new mP0.Y3n();\n          }\n          \n        }\n        class BwJ {\n\n          mP0.Y3n e = new mP0.Y3n();\n        }\n        class KkoX {\n\n          Y3n.E A = new E();\n          Y3n W3 = new Y3n();\n          KkoX P = new KkoX();\n        }\n        class JiA {\n\n          mP0 L = new mP0();\n          JiA gNd = new JiA();\n          mP0.Y3n.E t = new E();\n        }\n        \n      }\n      \n    }\n    static class LIqj_{}\n    class i3c {\n\n      i3c N = new Y3n.i3c();\n      mP0 h = new mP0();\n    }\n    class oOWgkx {\n\n      mP0 kI = new mP0();\n    }\n    mP0.Y3n.i3c EzcxU = new i3c();\n  }\n  class aJHR {\n\n    mP0 aB = new mP0();\n    mP0 eHoyLib = new mP0();\n  }\n  \n}"));
        CtType<?> innerClass = launcher.buildModel().getAllTypes().iterator().next();
        assertEquals("class mP0 {\n    class Y3n {\n        class E {\n            class K {\n                class B {\n                    class PL {\n                        class a {\n                            class Dw {\n                                Y3n H = new Y3n();\n\n                                K.B.PL.a.Dw y = new B.PL.a.Dw();\n\n                                mP0.Y3n BG = new Y3n();\n\n                                Y3n.E.K.B tuYY = new mP0.Y3n.E.K.B();\n\n                                Y3n.E tR = new E();\n\n                                K.B.PL eL = new Y3n.E.K.B.PL();\n                            }\n\n                            class W {}\n\n                            class yI {}\n\n                            class dgw {\n                                a F5f = new PL.a();\n                            }\n\n                            mP0 Np = new mP0();\n\n                            E.K f = new Y3n.E.K();\n\n                            K.B.PL.a D_ZZU = new B.PL.a();\n                        }\n\n                        class lPc {\n                            B G = new K.B();\n                        }\n\n                        B D = new Y3n.E.K.B();\n                    }\n\n                    class KY {\n                        E.K.B.KY r = new E.K.B.KY();\n\n                        Y3n m = new mP0.Y3n();\n\n                        mP0.Y3n I = new mP0.Y3n();\n\n                        Y3n p = new mP0.Y3n();\n                    }\n                }\n\n                class BwJ {\n                    mP0.Y3n e = new mP0.Y3n();\n                }\n\n                class KkoX {\n                    Y3n.E A = new E();\n\n                    Y3n W3 = new Y3n();\n\n                    KkoX P = new KkoX();\n                }\n\n                class JiA {\n                    mP0 L = new mP0();\n\n                    JiA gNd = new JiA();\n\n                    mP0.Y3n.E t = new E();\n                }\n            }\n        }\n\n        static class LIqj_ {}\n\n        class i3c {\n            i3c N = new Y3n.i3c();\n\n            mP0 h = new mP0();\n        }\n\n        class oOWgkx {\n            mP0 kI = new mP0();\n        }\n\n        mP0.Y3n.i3c EzcxU = new i3c();\n    }\n\n    class aJHR {\n        mP0 aB = new mP0();\n\n        mP0 eHoyLib = new mP0();\n    }\n}", innerClass.toString());
    }

    @Test
    public void test051() {
        Launcher launcher = new Launcher();
        launcher.getEnvironment().setComplianceLevel(17);
        launcher.getEnvironment().setAutoImports(true);
        launcher.getEnvironment().setShouldCompile(true);
        launcher.addInputResource(new VirtualFile("class O {\n  class aM {\n    class hS {\n      class t {\n        class JL {\n          class KOw {\n            class jn {\n              class OE{}\n              class pskk{}\n              class v{}\n              class S5Lv{}\n              \n            }\n            class U {\n\n              KOw DQvb = new O.aM.hS.t.JL.KOw();\n            }\n            class UJ {\n\n              O i = new O();\n            }\n            \n          }\n          class D {\n\n            aM.hS r2 = new O.aM.hS();\n            hS w = new aM.hS();\n            JL.D W = new t.JL.D();\n            O Ow = new O();\n            O.aM e = new aM();\n          }\n          class N{}\n          class m{}\n          O.aM.hS.t.JL.D Wz = new D();\n        }\n        O a = new O();\n      }\n      class u {\n\n        O g = new O();\n        O.aM.hS K = new O.aM.hS();\n        O.aM.hS.u y = new O.aM.hS.u();\n      }\n      class s{}\n      class J {\n\n        O.aM.hS.J oN = new hS.J();\n      }\n      aM Rj = new O.aM();\n    }\n    class p {\n\n      O.aM eGBgvb = new O.aM();\n    }\n    O.aM j = new O.aM();\n    aM Vy6 = new O.aM();\n  }\n  static class ui{}\n  static class gEa{}\n  O K97 = new O();\n  O E = new O();\n}"));
        CtType<?> innerClass = launcher.buildModel().getAllTypes().iterator().next();
        assertEquals("class O {\n    class aM {\n        class hS {\n            class t {\n                class JL {\n                    class KOw {\n                        class jn {\n                            class OE {}\n\n                            class pskk {}\n\n                            class v {}\n\n                            class S5Lv {}\n                        }\n\n                        class U {\n                            KOw DQvb = new O.aM.hS.t.JL.KOw();\n                        }\n\n                        class UJ {\n                            O i = new O();\n                        }\n                    }\n\n                    class D {\n                        aM.hS r2 = new O.aM.hS();\n\n                        hS w = new aM.hS();\n\n                        JL.D W = new t.JL.D();\n\n                        O Ow = new O();\n\n                        O.aM e = new aM();\n                    }\n\n                    class N {}\n\n                    class m {}\n\n                    O.aM.hS.t.JL.D Wz = new D();\n                }\n\n                O a = new O();\n            }\n\n            class u {\n                O g = new O();\n\n                O.aM.hS K = new O.aM.hS();\n\n                O.aM.hS.u y = new O.aM.hS.u();\n            }\n\n            class s {}\n\n            class J {\n                O.aM.hS.J oN = new hS.J();\n            }\n\n            aM Rj = new O.aM();\n        }\n\n        class p {\n            O.aM eGBgvb = new O.aM();\n        }\n\n        O.aM j = new O.aM();\n\n        aM Vy6 = new O.aM();\n    }\n\n    static class ui {}\n\n    static class gEa {}\n\n    O K97 = new O();\n\n    O E = new O();\n}", innerClass.toString());
    }

    @Test
    public void test052() {
        Launcher launcher = new Launcher();
        launcher.getEnvironment().setComplianceLevel(17);
        launcher.getEnvironment().setAutoImports(true);
        launcher.getEnvironment().setShouldCompile(true);
        launcher.addInputResource(new VirtualFile("class j {\n  class F {\n    class IZd {\n      class eFOJ {\n        class X {\n          class n {\n            class NuN4k {\n              class G {\n                class SlIM {\n                  class u {\n                    class rDeJ{}\n                    class hH {\n\n                      NuN4k.G.SlIM.u.hH cf = new j.F.IZd.eFOJ.X.n.NuN4k.G.SlIM.u.hH();\n                      n d = new X.n();\n                      F.IZd.eFOJ.X.n.NuN4k H = new IZd.eFOJ.X.n.NuN4k();\n                    }\n                    class hxwy{}\n                    class c{}\n                    F.IZd.eFOJ.X.n.NuN4k.G.SlIM.u.hxwy C = new n.NuN4k.G.SlIM.u.hxwy();\n                  }\n                  n A = new F.IZd.eFOJ.X.n();\n                }\n                \n              }\n              class znP {\n\n                X.n x = new eFOJ.X.n();\n              }\n              \n            }\n            class Dy{}\n            IZd.eFOJ qao = new eFOJ();\n          }\n          class b {\n\n            eFOJ.X.b mF = new IZd.eFOJ.X.b();\n          }\n          class U {\n\n            IZd.eFOJ.X.U P = new X.U();\n            j.F.IZd UQ = new F.IZd();\n            IZd.eFOJ L = new F.IZd.eFOJ();\n            j Y = new j();\n          }\n          eFOJ.X.U JPuP = new U();\n        }\n        F.IZd.eFOJ.X C01 = new j.F.IZd.eFOJ.X();\n        X pFIW6 = new X();\n      }\n      class Nw {\n\n        j.F l = new F();\n        j.F.IZd.Nw te = new j.F.IZd.Nw();\n        j.F.IZd N = new j.F.IZd();\n        F.IZd.Nw O = new F.IZd.Nw();\n      }\n      j.F.IZd rm = new IZd();\n    }\n    class sAw {\n\n      F f = new F();\n    }\n    class FsvS {\n\n      FsvS p = new j.F.FsvS();\n    }\n    \n  }\n  static class Yv71sa{}\n  \n}"));
        CtType<?> innerClass = launcher.buildModel().getAllTypes().iterator().next();
        assertEquals("class j {\n    class F {\n        class IZd {\n            class eFOJ {\n                class X {\n                    class n {\n                        class NuN4k {\n                            class G {\n                                class SlIM {\n                                    class u {\n                                        class rDeJ {}\n\n                                        class hH {\n                                            NuN4k.G.SlIM.u.hH cf = new j.F.IZd.eFOJ.X.n.NuN4k.G.SlIM.u.hH();\n\n                                            n d = new X.n();\n\n                                            F.IZd.eFOJ.X.n.NuN4k H = new IZd.eFOJ.X.n.NuN4k();\n                                        }\n\n                                        class hxwy {}\n\n                                        class c {}\n\n                                        F.IZd.eFOJ.X.n.NuN4k.G.SlIM.u.hxwy C = new n.NuN4k.G.SlIM.u.hxwy();\n                                    }\n\n                                    n A = new F.IZd.eFOJ.X.n();\n                                }\n                            }\n\n                            class znP {\n                                X.n x = new eFOJ.X.n();\n                            }\n                        }\n\n                        class Dy {}\n\n                        IZd.eFOJ qao = new eFOJ();\n                    }\n\n                    class b {\n                        eFOJ.X.b mF = new IZd.eFOJ.X.b();\n                    }\n\n                    class U {\n                        IZd.eFOJ.X.U P = new X.U();\n\n                        j.F.IZd UQ = new F.IZd();\n\n                        IZd.eFOJ L = new F.IZd.eFOJ();\n\n                        j Y = new j();\n                    }\n\n                    eFOJ.X.U JPuP = new U();\n                }\n\n                F.IZd.eFOJ.X C01 = new j.F.IZd.eFOJ.X();\n\n                X pFIW6 = new X();\n            }\n\n            class Nw {\n                j.F l = new F();\n\n                j.F.IZd.Nw te = new j.F.IZd.Nw();\n\n                j.F.IZd N = new j.F.IZd();\n\n                F.IZd.Nw O = new F.IZd.Nw();\n            }\n\n            j.F.IZd rm = new IZd();\n        }\n\n        class sAw {\n            F f = new F();\n        }\n\n        class FsvS {\n            FsvS p = new j.F.FsvS();\n        }\n    }\n\n    static class Yv71sa {}\n}", innerClass.toString());
    }

    @Test
    public void test053() {
        Launcher launcher = new Launcher();
        launcher.getEnvironment().setComplianceLevel(17);
        launcher.getEnvironment().setAutoImports(true);
        launcher.getEnvironment().setShouldCompile(true);
        launcher.addInputResource(new VirtualFile("class t {\n  class U {\n    class nWdaiR {\n      class XP {\n        class R {\n          class e {\n            class Yc4 {\n              class B {\n                class A {\n                  class o {\n                    class xgFat {\n                      class G {\n\n                        B.A.o TW = new Yc4.B.A.o();\n                      }\n                      class q {\n\n                        t.U.nWdaiR.XP Y = new t.U.nWdaiR.XP();\n                        t.U.nWdaiR.XP.R.e.Yc4.B.A.o.xgFat p = new Yc4.B.A.o.xgFat();\n                        t.U.nWdaiR vW = new U.nWdaiR();\n                        t.U.nWdaiR.XP.R.e.Yc4.B.A K = new t.U.nWdaiR.XP.R.e.Yc4.B.A();\n                      }\n                      class xD{}\n                      Yc4.B.A Ud = new B.A();\n                    }\n                    t.U.nWdaiR H = new nWdaiR();\n                  }\n                  class WhDeUS{}\n                  \n                }\n                \n              }\n              \n            }\n            class D_ {\n\n              U.nWdaiR s = new U.nWdaiR();\n            }\n            \n          }\n          t N = new t();\n          R.e zQ = new U.nWdaiR.XP.R.e();\n        }\n        class qK{}\n        class XieX{}\n        \n      }\n      U Mz = new U();\n    }\n    class l {\n\n      U.l S = new t.U.l();\n      U g = new U();\n    }\n    class uj {\n\n      uj YGr = new t.U.uj();\n      uj k = new uj();\n      t.U KX = new t.U();\n      t.U ckP = new U();\n    }\n    t.U E = new t.U();\n  }\n  class O {\n\n    t D = new t();\n    O ri = new O();\n    O z = new t.O();\n    t.O Nk = new O();\n  }\n  t I = new t();\n}"));
        CtType<?> innerClass = launcher.buildModel().getAllTypes().iterator().next();
        assertEquals("class t {\n    class U {\n        class nWdaiR {\n            class XP {\n                class R {\n                    class e {\n                        class Yc4 {\n                            class B {\n                                class A {\n                                    class o {\n                                        class xgFat {\n                                            class G {\n                                                B.A.o TW = new Yc4.B.A.o();\n                                            }\n\n                                            class q {\n                                                t.U.nWdaiR.XP Y = new t.U.nWdaiR.XP();\n\n                                                t.U.nWdaiR.XP.R.e.Yc4.B.A.o.xgFat p = new Yc4.B.A.o.xgFat();\n\n                                                t.U.nWdaiR vW = new U.nWdaiR();\n\n                                                t.U.nWdaiR.XP.R.e.Yc4.B.A K = new t.U.nWdaiR.XP.R.e.Yc4.B.A();\n                                            }\n\n                                            class xD {}\n\n                                            Yc4.B.A Ud = new B.A();\n                                        }\n\n                                        t.U.nWdaiR H = new nWdaiR();\n                                    }\n\n                                    class WhDeUS {}\n                                }\n                            }\n                        }\n\n                        class D_ {\n                            U.nWdaiR s = new U.nWdaiR();\n                        }\n                    }\n\n                    t N = new t();\n\n                    R.e zQ = new U.nWdaiR.XP.R.e();\n                }\n\n                class qK {}\n\n                class XieX {}\n            }\n\n            U Mz = new U();\n        }\n\n        class l {\n            U.l S = new t.U.l();\n\n            U g = new U();\n        }\n\n        class uj {\n            uj YGr = new t.U.uj();\n\n            uj k = new uj();\n\n            t.U KX = new t.U();\n\n            t.U ckP = new U();\n        }\n\n        t.U E = new t.U();\n    }\n\n    class O {\n        t D = new t();\n\n        O ri = new O();\n\n        O z = new t.O();\n\n        t.O Nk = new O();\n    }\n\n    t I = new t();\n}", innerClass.toString());
    }

    @Test
    public void test054() {
        Launcher launcher = new Launcher();
        launcher.getEnvironment().setComplianceLevel(17);
        launcher.getEnvironment().setAutoImports(true);
        launcher.getEnvironment().setShouldCompile(true);
        launcher.addInputResource(new VirtualFile("class y41SD {\n  class aP {\n    class ju {\n      class R {\n        class Q {\n          class r {\n            class A {\n              class s {\n                class n{}\n                class L{}\n                class F5L {\n\n                  y41SD.aP Kp = new y41SD.aP();\n                }\n                \n              }\n              class w {\n\n                y41SD.aP.ju E = new aP.ju();\n                aP qRZ = new aP();\n              }\n              class h {\n\n                R.Q s9 = new y41SD.aP.ju.R.Q();\n                ju.R y = new y41SD.aP.ju.R();\n              }\n              ju.R.Q.r qe = new r();\n              A e = new y41SD.aP.ju.R.Q.r.A();\n              y41SD woY5 = new y41SD();\n            }\n            class c{}\n            class I{}\n            Q.r K = new aP.ju.R.Q.r();\n          }\n          class U6jZ9 {\n\n            y41SD.aP L6B = new aP();\n          }\n          aP.ju PX = new ju();\n        }\n        R.Q gHq = new Q();\n      }\n      y41SD.aP.ju.R n9KvKRU = new ju.R();\n    }\n    class nw {\n\n      y41SD Y8UncLfb = new y41SD();\n      aP yZ = new aP();\n    }\n    \n  }\n  static class b7{}\n  static class Z{}\n  class y3{}\n  y41SD.b7 p0N = new y41SD.b7();\n}"));
        CtType<?> innerClass = launcher.buildModel().getAllTypes().iterator().next();
        assertEquals("class y41SD {\n    class aP {\n        class ju {\n            class R {\n                class Q {\n                    class r {\n                        class A {\n                            class s {\n                                class n {}\n\n                                class L {}\n\n                                class F5L {\n                                    y41SD.aP Kp = new y41SD.aP();\n                                }\n                            }\n\n                            class w {\n                                y41SD.aP.ju E = new aP.ju();\n\n                                aP qRZ = new aP();\n                            }\n\n                            class h {\n                                R.Q s9 = new y41SD.aP.ju.R.Q();\n\n                                ju.R y = new y41SD.aP.ju.R();\n                            }\n\n                            ju.R.Q.r qe = new r();\n\n                            A e = new y41SD.aP.ju.R.Q.r.A();\n\n                            y41SD woY5 = new y41SD();\n                        }\n\n                        class c {}\n\n                        class I {}\n\n                        Q.r K = new aP.ju.R.Q.r();\n                    }\n\n                    class U6jZ9 {\n                        y41SD.aP L6B = new aP();\n                    }\n\n                    aP.ju PX = new ju();\n                }\n\n                R.Q gHq = new Q();\n            }\n\n            y41SD.aP.ju.R n9KvKRU = new ju.R();\n        }\n\n        class nw {\n            y41SD Y8UncLfb = new y41SD();\n\n            aP yZ = new aP();\n        }\n    }\n\n    static class b7 {}\n\n    static class Z {}\n\n    class y3 {}\n\n    y41SD.b7 p0N = new y41SD.b7();\n}", innerClass.toString());
    }

    @Test
    public void test055() {
        Launcher launcher = new Launcher();
        launcher.getEnvironment().setComplianceLevel(17);
        launcher.getEnvironment().setAutoImports(true);
        launcher.getEnvironment().setShouldCompile(true);
        launcher.addInputResource(new VirtualFile("class X {\n  class x {\n    class j {\n      class K {\n        class HTm5Ul {\n          class ln {\n            class C6 {\n              class xL6 {\n                class a9Y{}\n                class w {\n\n                  X.x.j.K.HTm5Ul.ln D = new K.HTm5Ul.ln();\n                  x.j.K IL = new j.K();\n                  X.x.j.K oy = new X.x.j.K();\n                  X.x vkaY = new X.x();\n                  HTm5Ul.ln en9 = new X.x.j.K.HTm5Ul.ln();\n                }\n                class G{}\n                \n              }\n              class asb{}\n              class Tk {\n\n                ln.C6.Tk JrVX = new X.x.j.K.HTm5Ul.ln.C6.Tk();\n              }\n              \n            }\n            class A {\n\n              HTm5Ul.ln.A s = new A();\n            }\n            \n          }\n          class f7{}\n          class vXy{}\n          class U {\n\n            U Ff = new x.j.K.HTm5Ul.U();\n          }\n          \n        }\n        class d9{}\n        \n      }\n      x MSfi = new X.x();\n      X.x.j S = new X.x.j();\n      X.x Zi = new X.x();\n      x.j.K t = new x.j.K();\n    }\n    class Z1{}\n    class HZ{}\n    \n  }\n  static class sv{}\n  X.sv o = new sv();\n}"));
        CtType<?> innerClass = launcher.buildModel().getAllTypes().iterator().next();
        assertEquals("class X {\n    class x {\n        class j {\n            class K {\n                class HTm5Ul {\n                    class ln {\n                        class C6 {\n                            class xL6 {\n                                class a9Y {}\n\n                                class w {\n                                    X.x.j.K.HTm5Ul.ln D = new K.HTm5Ul.ln();\n\n                                    x.j.K IL = new j.K();\n\n                                    X.x.j.K oy = new X.x.j.K();\n\n                                    X.x vkaY = new X.x();\n\n                                    HTm5Ul.ln en9 = new X.x.j.K.HTm5Ul.ln();\n                                }\n\n                                class G {}\n                            }\n\n                            class asb {}\n\n                            class Tk {\n                                ln.C6.Tk JrVX = new X.x.j.K.HTm5Ul.ln.C6.Tk();\n                            }\n                        }\n\n                        class A {\n                            HTm5Ul.ln.A s = new A();\n                        }\n                    }\n\n                    class f7 {}\n\n                    class vXy {}\n\n                    class U {\n                        U Ff = new x.j.K.HTm5Ul.U();\n                    }\n                }\n\n                class d9 {}\n            }\n\n            x MSfi = new X.x();\n\n            X.x.j S = new X.x.j();\n\n            X.x Zi = new X.x();\n\n            x.j.K t = new x.j.K();\n        }\n\n        class Z1 {}\n\n        class HZ {}\n    }\n\n    static class sv {}\n\n    X.sv o = new sv();\n}", innerClass.toString());
    }

    @Test
    public void test056() {
        Launcher launcher = new Launcher();
        launcher.getEnvironment().setComplianceLevel(17);
        launcher.getEnvironment().setAutoImports(true);
        launcher.getEnvironment().setShouldCompile(true);
        launcher.addInputResource(new VirtualFile("class H {\n  class v {\n    class V {\n      class F {\n        class u {\n          class e {\n            class xp{}\n            class wd {\n\n              u.e.wd d1o = new v.V.F.u.e.wd();\n              H.v.V.F bw = new V.F();\n              v.V.F a = new v.V.F();\n            }\n            class yf {\n\n              H K8i = new H();\n              V.F bTI = new H.v.V.F();\n            }\n            class k{}\n            \n          }\n          class Bn{}\n          \n        }\n        class R {\n\n          H.v.V i1s = new H.v.V();\n          H.v.V.F w = new H.v.V.F();\n          v.V.F.R r = new v.V.F.R();\n        }\n        class gB {\n\n          v L = new v();\n          H W = new H();\n          v l5N = new v();\n        }\n        class rP{}\n        V.F.gB g = new F.gB();\n      }\n      static class E{}\n      static class b{}\n      class j{}\n      \n    }\n    v hM = new H.v();\n  }\n  class zL {\n\n    H f = new H();\n  }\n  class M {\n\n    H d = new H();\n  }\n  class ip {\n\n    H Y6 = new H();\n    H.ip Y = new ip();\n  }\n  \n}"));
        CtType<?> innerClass = launcher.buildModel().getAllTypes().iterator().next();
        assertEquals("class H {\n    class v {\n        class V {\n            class F {\n                class u {\n                    class e {\n                        class xp {}\n\n                        class wd {\n                            u.e.wd d1o = new v.V.F.u.e.wd();\n\n                            H.v.V.F bw = new V.F();\n\n                            v.V.F a = new v.V.F();\n                        }\n\n                        class yf {\n                            H K8i = new H();\n\n                            V.F bTI = new H.v.V.F();\n                        }\n\n                        class k {}\n                    }\n\n                    class Bn {}\n                }\n\n                class R {\n                    H.v.V i1s = new H.v.V();\n\n                    H.v.V.F w = new H.v.V.F();\n\n                    v.V.F.R r = new v.V.F.R();\n                }\n\n                class gB {\n                    v L = new v();\n\n                    H W = new H();\n\n                    v l5N = new v();\n                }\n\n                class rP {}\n\n                V.F.gB g = new F.gB();\n            }\n\n            static class E {}\n\n            static class b {}\n\n            class j {}\n        }\n\n        v hM = new H.v();\n    }\n\n    class zL {\n        H f = new H();\n    }\n\n    class M {\n        H d = new H();\n    }\n\n    class ip {\n        H Y6 = new H();\n\n        H.ip Y = new ip();\n    }\n}", innerClass.toString());
    }

    @Test
    public void test057() {
        Launcher launcher = new Launcher();
        launcher.getEnvironment().setComplianceLevel(17);
        launcher.getEnvironment().setAutoImports(true);
        launcher.getEnvironment().setShouldCompile(true);
        launcher.addInputResource(new VirtualFile("class Fnb {\n  class dD {\n    class M {\n      class tV {\n        class X {\n          class RY {\n            class L {\n              class P {\n                class t {\n                  class A {\n                    class HkF5 {\n\n                      RY snZ9hUcSz1pKZ = new M.tV.X.RY();\n                    }\n                    class d {\n\n                      RY.L.P.t Rb = new L.P.t();\n                    }\n                    class x{}\n                    class f{}\n                    Fnb Ss = new Fnb();\n                    dD.M.tV WGKi = new tV();\n                    A l = new L.P.t.A();\n                    dD.M.tV dA = new Fnb.dD.M.tV();\n                  }\n                  tV.X.RY.L.P XCyDM = new dD.M.tV.X.RY.L.P();\n                }\n                class echz{}\n                \n              }\n              class c {\n\n                X.RY.L W = new tV.X.RY.L();\n              }\n              \n            }\n            Fnb fBJ = new Fnb();\n          }\n          class T {\n\n            dD Dv3 = new dD();\n            Fnb.dD ylgr = new Fnb.dD();\n            dD.M.tV.X.T swX = new dD.M.tV.X.T();\n            Fnb.dD.M.tV.X lEy = new dD.M.tV.X();\n            Fnb.dD.M R = new Fnb.dD.M();\n            tV y = new M.tV();\n          }\n          Fnb goR = new Fnb();\n          Fnb.dD.M nX = new M();\n          Fnb.dD p = new dD();\n        }\n        M BSrY = new M();\n      }\n      class Be {\n\n        Fnb bM = new Fnb();\n        dD nS = new Fnb.dD();\n      }\n      class z{}\n      M a = new Fnb.dD.M();\n    }\n    class NqjY{}\n    dD dB = new Fnb.dD();\n  }\n  class aby{}\n  Fnb.dD H = new Fnb.dD();\n  aby E = new Fnb.aby();\n}"));
        CtType<?> innerClass = launcher.buildModel().getAllTypes().iterator().next();
        assertEquals("class Fnb {\n    class dD {\n        class M {\n            class tV {\n                class X {\n                    class RY {\n                        class L {\n                            class P {\n                                class t {\n                                    class A {\n                                        class HkF5 {\n                                            RY snZ9hUcSz1pKZ = new M.tV.X.RY();\n                                        }\n\n                                        class d {\n                                            RY.L.P.t Rb = new L.P.t();\n                                        }\n\n                                        class x {}\n\n                                        class f {}\n\n                                        Fnb Ss = new Fnb();\n\n                                        dD.M.tV WGKi = new tV();\n\n                                        A l = new L.P.t.A();\n\n                                        dD.M.tV dA = new Fnb.dD.M.tV();\n                                    }\n\n                                    tV.X.RY.L.P XCyDM = new dD.M.tV.X.RY.L.P();\n                                }\n\n                                class echz {}\n                            }\n\n                            class c {\n                                X.RY.L W = new tV.X.RY.L();\n                            }\n                        }\n\n                        Fnb fBJ = new Fnb();\n                    }\n\n                    class T {\n                        dD Dv3 = new dD();\n\n                        Fnb.dD ylgr = new Fnb.dD();\n\n                        dD.M.tV.X.T swX = new dD.M.tV.X.T();\n\n                        Fnb.dD.M.tV.X lEy = new dD.M.tV.X();\n\n                        Fnb.dD.M R = new Fnb.dD.M();\n\n                        tV y = new M.tV();\n                    }\n\n                    Fnb goR = new Fnb();\n\n                    Fnb.dD.M nX = new M();\n\n                    Fnb.dD p = new dD();\n                }\n\n                M BSrY = new M();\n            }\n\n            class Be {\n                Fnb bM = new Fnb();\n\n                dD nS = new Fnb.dD();\n            }\n\n            class z {}\n\n            M a = new Fnb.dD.M();\n        }\n\n        class NqjY {}\n\n        dD dB = new Fnb.dD();\n    }\n\n    class aby {}\n\n    Fnb.dD H = new Fnb.dD();\n\n    aby E = new Fnb.aby();\n}", innerClass.toString());
    }

    @Test
    public void test058() {
        Launcher launcher = new Launcher();
        launcher.getEnvironment().setComplianceLevel(17);
        launcher.getEnvironment().setAutoImports(true);
        launcher.getEnvironment().setShouldCompile(true);
        launcher.addInputResource(new VirtualFile("class E5qw {\n  class GpjG {\n    class nr {\n      class e8t {\n        class X {\n          class n {\n            class W {\n              class J {\n                class q {\n                  class L {\n\n                    J I5 = new J();\n                  }\n                  class SZXriV {\n\n                    E5qw.GpjG.nr.e8t SY = new E5qw.GpjG.nr.e8t();\n                  }\n                  class fCl{}\n                  class f{}\n                  \n                }\n                class d{}\n                class u{}\n                class H {\n\n                  GpjG.nr LA9 = new nr();\n                  nr.e8t.X tqT = new E5qw.GpjG.nr.e8t.X();\n                }\n                \n              }\n              E5qw.GpjG.nr.e8t.X IowAdA = new GpjG.nr.e8t.X();\n            }\n            \n          }\n          class I{}\n          \n        }\n        class iE {\n\n          E5qw.GpjG.nr Gjp = new E5qw.GpjG.nr();\n          e8t i = new GpjG.nr.e8t();\n          nr Jw = new GpjG.nr();\n          GpjG UC0zi = new E5qw.GpjG();\n        }\n        \n      }\n      E5qw.GpjG.nr.e8t b = new e8t();\n    }\n    E5qw z1 = new E5qw();\n  }\n  class G {\n\n    E5qw P = new E5qw();\n    G r = new G();\n  }\n  class o {\n\n    E5qw T = new E5qw();\n  }\n  \n}"));
        CtType<?> innerClass = launcher.buildModel().getAllTypes().iterator().next();
        assertEquals("class E5qw {\n    class GpjG {\n        class nr {\n            class e8t {\n                class X {\n                    class n {\n                        class W {\n                            class J {\n                                class q {\n                                    class L {\n                                        J I5 = new J();\n                                    }\n\n                                    class SZXriV {\n                                        E5qw.GpjG.nr.e8t SY = new E5qw.GpjG.nr.e8t();\n                                    }\n\n                                    class fCl {}\n\n                                    class f {}\n                                }\n\n                                class d {}\n\n                                class u {}\n\n                                class H {\n                                    GpjG.nr LA9 = new nr();\n\n                                    nr.e8t.X tqT = new E5qw.GpjG.nr.e8t.X();\n                                }\n                            }\n\n                            E5qw.GpjG.nr.e8t.X IowAdA = new GpjG.nr.e8t.X();\n                        }\n                    }\n\n                    class I {}\n                }\n\n                class iE {\n                    E5qw.GpjG.nr Gjp = new E5qw.GpjG.nr();\n\n                    e8t i = new GpjG.nr.e8t();\n\n                    nr Jw = new GpjG.nr();\n\n                    GpjG UC0zi = new E5qw.GpjG();\n                }\n            }\n\n            E5qw.GpjG.nr.e8t b = new e8t();\n        }\n\n        E5qw z1 = new E5qw();\n    }\n\n    class G {\n        E5qw P = new E5qw();\n\n        G r = new G();\n    }\n\n    class o {\n        E5qw T = new E5qw();\n    }\n}", innerClass.toString());
    }

    @Test
    public void test059() {
        Launcher launcher = new Launcher();
        launcher.getEnvironment().setComplianceLevel(17);
        launcher.getEnvironment().setAutoImports(true);
        launcher.getEnvironment().setShouldCompile(true);
        launcher.addInputResource(new VirtualFile("class g0 {\n  class n {\n    class upr {\n      class G8 {\n        class OJ {\n          class g {\n            class z {\n              class gs{}\n              class SG5kd{}\n              class v {\n\n                G8.OJ.g RY8fr = new upr.G8.OJ.g();\n              }\n              class qU{}\n              n k = new n();\n            }\n            class p {\n\n              n.upr.G8.OJ tj = new OJ();\n              g Y = new OJ.g();\n              upr IAvXs = new upr();\n            }\n            \n          }\n          class R{}\n          static class lpp{}\n          class i{}\n          g0 E4 = new g0();\n          g0.n Aq = new n();\n          OJ IOd = new n.upr.G8.OJ();\n        }\n        static class WW{}\n        n BUE = new g0.n();\n      }\n      n f = new n();\n      g0 kM = new g0();\n      g0.n.upr Bi = new n.upr();\n    }\n    class l{}\n    class JQD {\n\n      g0 x = new g0();\n      n m = new n();\n    }\n    \n  }\n  class D {\n\n    g0.D rf = new g0.D();\n  }\n  static class Q{}\n  Q t = new Q();\n  g0.Q UWG = new Q();\n  g0 S = new g0();\n}"));
        CtType<?> innerClass = launcher.buildModel().getAllTypes().iterator().next();
        assertEquals("class g0 {\n    class n {\n        class upr {\n            class G8 {\n                class OJ {\n                    class g {\n                        class z {\n                            class gs {}\n\n                            class SG5kd {}\n\n                            class v {\n                                G8.OJ.g RY8fr = new upr.G8.OJ.g();\n                            }\n\n                            class qU {}\n\n                            n k = new n();\n                        }\n\n                        class p {\n                            n.upr.G8.OJ tj = new OJ();\n\n                            g Y = new OJ.g();\n\n                            upr IAvXs = new upr();\n                        }\n                    }\n\n                    class R {}\n\n                    static class lpp {}\n\n                    class i {}\n\n                    g0 E4 = new g0();\n\n                    g0.n Aq = new n();\n\n                    OJ IOd = new n.upr.G8.OJ();\n                }\n\n                static class WW {}\n\n                n BUE = new g0.n();\n            }\n\n            n f = new n();\n\n            g0 kM = new g0();\n\n            g0.n.upr Bi = new n.upr();\n        }\n\n        class l {}\n\n        class JQD {\n            g0 x = new g0();\n\n            n m = new n();\n        }\n    }\n\n    class D {\n        g0.D rf = new g0.D();\n    }\n\n    static class Q {}\n\n    Q t = new Q();\n\n    g0.Q UWG = new Q();\n\n    g0 S = new g0();\n}", innerClass.toString());
    }

    @Test
    public void test060() {
        Launcher launcher = new Launcher();
        launcher.getEnvironment().setComplianceLevel(17);
        launcher.getEnvironment().setAutoImports(true);
        launcher.getEnvironment().setShouldCompile(true);
        launcher.addInputResource(new VirtualFile("class M1T {\n  class n {\n    class f {\n      class oV {\n        class i {\n          class TD {\n            class a {\n              class mJ {\n\n                n.f.oV.i.TD OC9eA = new f.oV.i.TD();\n              }\n              class yLXgI{}\n              class y{}\n              class rXr {\n\n                TD brsP = new n.f.oV.i.TD();\n                f.oV u3 = new f.oV();\n              }\n              n.f.oV.i.TD KaPPlJ = new TD();\n            }\n            class bm{}\n            class c {\n\n              M1T EAD1Ez = new M1T();\n            }\n            n k_ = new n();\n          }\n          class EhW9q5dmK{}\n          M1T.n.f.oV.i K = new f.oV.i();\n          f.oV B5 = new oV();\n          n VvM34D = new M1T.n();\n        }\n        \n      }\n      class hISg {\n\n        M1T.n.f e8 = new f();\n      }\n      class X{}\n      \n    }\n    class I {\n\n      I m = new I();\n    }\n    static class T{}\n    class llFux {\n\n      M1T nj = new M1T();\n      M1T lo = new M1T();\n    }\n    \n  }\n  class Q {\n\n    M1T.Q V = new Q();\n    M1T A = new M1T();\n  }\n  class hfG {\n\n    M1T.hfG Nu = new hfG();\n  }\n  class Op {\n\n    Op F = new Op();\n    M1T r = new M1T();\n    M1T.Op C = new M1T.Op();\n  }\n  M1T dP = new M1T();\n}"));
        CtType<?> innerClass = launcher.buildModel().getAllTypes().iterator().next();
        assertEquals("class M1T {\n    class n {\n        class f {\n            class oV {\n                class i {\n                    class TD {\n                        class a {\n                            class mJ {\n                                n.f.oV.i.TD OC9eA = new f.oV.i.TD();\n                            }\n\n                            class yLXgI {}\n\n                            class y {}\n\n                            class rXr {\n                                TD brsP = new n.f.oV.i.TD();\n\n                                f.oV u3 = new f.oV();\n                            }\n\n                            n.f.oV.i.TD KaPPlJ = new TD();\n                        }\n\n                        class bm {}\n\n                        class c {\n                            M1T EAD1Ez = new M1T();\n                        }\n\n                        n k_ = new n();\n                    }\n\n                    class EhW9q5dmK {}\n\n                    M1T.n.f.oV.i K = new f.oV.i();\n\n                    f.oV B5 = new oV();\n\n                    n VvM34D = new M1T.n();\n                }\n            }\n\n            class hISg {\n                M1T.n.f e8 = new f();\n            }\n\n            class X {}\n        }\n\n        class I {\n            I m = new I();\n        }\n\n        static class T {}\n\n        class llFux {\n            M1T nj = new M1T();\n\n            M1T lo = new M1T();\n        }\n    }\n\n    class Q {\n        M1T.Q V = new Q();\n\n        M1T A = new M1T();\n    }\n\n    class hfG {\n        M1T.hfG Nu = new hfG();\n    }\n\n    class Op {\n        Op F = new Op();\n\n        M1T r = new M1T();\n\n        M1T.Op C = new M1T.Op();\n    }\n\n    M1T dP = new M1T();\n}", innerClass.toString());
    }

    @Test
    public void test061() {
        Launcher launcher = new Launcher();
        launcher.getEnvironment().setComplianceLevel(17);
        launcher.getEnvironment().setAutoImports(true);
        launcher.getEnvironment().setShouldCompile(true);
        launcher.addInputResource(new VirtualFile("class QJ {\n  class WDgu {\n    class l {\n      class q {\n        class I9Mpd8 {\n          class DL {\n            class SQDQ {\n              class M{}\n              class Cw{}\n              class Bkc{}\n              class Z{}\n              \n            }\n            class m {\n\n              DL.m u = new QJ.WDgu.l.q.I9Mpd8.DL.m();\n              QJ.WDgu.l RZ = new l();\n            }\n            class i{}\n            q.I9Mpd8.DL.SQDQ YS7 = new SQDQ();\n            q.I9Mpd8.DL.m s = new I9Mpd8.DL.m();\n          }\n          class n8{}\n          class X {\n\n            WDgu.l.q r2cWOxld = new QJ.WDgu.l.q();\n          }\n          WDgu.l ej = new WDgu.l();\n          WDgu.l.q.I9Mpd8 kw6 = new q.I9Mpd8();\n        }\n        QJ.WDgu ZnXq = new QJ.WDgu();\n      }\n      class p{}\n      class O{}\n      \n    }\n    class egh{}\n    class U{}\n    QJ a3 = new QJ();\n    QJ.WDgu C = new WDgu();\n  }\n  class Ol {\n\n    Ol I = new Ol();\n  }\n  static class B{}\n  \n}"));
        CtType<?> innerClass = launcher.buildModel().getAllTypes().iterator().next();
        assertEquals("class QJ {\n    class WDgu {\n        class l {\n            class q {\n                class I9Mpd8 {\n                    class DL {\n                        class SQDQ {\n                            class M {}\n\n                            class Cw {}\n\n                            class Bkc {}\n\n                            class Z {}\n                        }\n\n                        class m {\n                            DL.m u = new QJ.WDgu.l.q.I9Mpd8.DL.m();\n\n                            QJ.WDgu.l RZ = new l();\n                        }\n\n                        class i {}\n\n                        q.I9Mpd8.DL.SQDQ YS7 = new SQDQ();\n\n                        q.I9Mpd8.DL.m s = new I9Mpd8.DL.m();\n                    }\n\n                    class n8 {}\n\n                    class X {\n                        WDgu.l.q r2cWOxld = new QJ.WDgu.l.q();\n                    }\n\n                    WDgu.l ej = new WDgu.l();\n\n                    WDgu.l.q.I9Mpd8 kw6 = new q.I9Mpd8();\n                }\n\n                QJ.WDgu ZnXq = new QJ.WDgu();\n            }\n\n            class p {}\n\n            class O {}\n        }\n\n        class egh {}\n\n        class U {}\n\n        QJ a3 = new QJ();\n\n        QJ.WDgu C = new WDgu();\n    }\n\n    class Ol {\n        Ol I = new Ol();\n    }\n\n    static class B {}\n}", innerClass.toString());
    }

    @Test
    public void test062() {
        Launcher launcher = new Launcher();
        launcher.getEnvironment().setComplianceLevel(17);
        launcher.getEnvironment().setAutoImports(true);
        launcher.getEnvironment().setShouldCompile(true);
        launcher.addInputResource(new VirtualFile("class ybF {\n  class q {\n    class R {\n      class QW {\n        class akb {\n          class N {\n            class A3 {\n              class s {\n                class FL {\n\n                  R.QW H = new QW();\n                }\n                class k {\n\n                  q.R XXNWx = new R();\n                }\n                \n              }\n              A3 E = new N.A3();\n              q.R.QW o = new QW();\n            }\n            class OEMh{}\n            class r {\n\n              N xZ = new akb.N();\n              akb.N.r a_ = new N.r();\n              ybF.q.R.QW.akb.N hKLTKKP = new QW.akb.N();\n              q.R.QW.akb g = new q.R.QW.akb();\n            }\n            ybF X = new ybF();\n            N.OEMh Zjw4oC = new akb.N.OEMh();\n            q D = new ybF.q();\n            ybF la = new ybF();\n            ybF d9f7 = new ybF();\n          }\n          class Wd{}\n          class Dz{}\n          R Z6 = new ybF.q.R();\n          N hIK = new R.QW.akb.N();\n          QW.akb.Wd IZ = new q.R.QW.akb.Wd();\n        }\n        class Eg{}\n        \n      }\n      class HL{}\n      \n    }\n    class w{}\n    class B{}\n    \n  }\n  class G {\n\n    ybF F8R = new ybF();\n    ybF Cp = new ybF();\n    ybF.G dPQ = new G();\n    ybF.G iL = new G();\n  }\n  class R5q {\n\n    R5q YaY = new ybF.R5q();\n  }\n  ybF.G u = new ybF.G();\n  ybF I = new ybF();\n  q A5 = new q();\n}"));
        CtType<?> innerClass = launcher.buildModel().getAllTypes().iterator().next();
        assertEquals("class ybF {\n    class q {\n        class R {\n            class QW {\n                class akb {\n                    class N {\n                        class A3 {\n                            class s {\n                                class FL {\n                                    R.QW H = new QW();\n                                }\n\n                                class k {\n                                    q.R XXNWx = new R();\n                                }\n                            }\n\n                            A3 E = new N.A3();\n\n                            q.R.QW o = new QW();\n                        }\n\n                        class OEMh {}\n\n                        class r {\n                            N xZ = new akb.N();\n\n                            akb.N.r a_ = new N.r();\n\n                            ybF.q.R.QW.akb.N hKLTKKP = new QW.akb.N();\n\n                            q.R.QW.akb g = new q.R.QW.akb();\n                        }\n\n                        ybF X = new ybF();\n\n                        N.OEMh Zjw4oC = new akb.N.OEMh();\n\n                        q D = new ybF.q();\n\n                        ybF la = new ybF();\n\n                        ybF d9f7 = new ybF();\n                    }\n\n                    class Wd {}\n\n                    class Dz {}\n\n                    R Z6 = new ybF.q.R();\n\n                    N hIK = new R.QW.akb.N();\n\n                    QW.akb.Wd IZ = new q.R.QW.akb.Wd();\n                }\n\n                class Eg {}\n            }\n\n            class HL {}\n        }\n\n        class w {}\n\n        class B {}\n    }\n\n    class G {\n        ybF F8R = new ybF();\n\n        ybF Cp = new ybF();\n\n        ybF.G dPQ = new G();\n\n        ybF.G iL = new G();\n    }\n\n    class R5q {\n        R5q YaY = new ybF.R5q();\n    }\n\n    ybF.G u = new ybF.G();\n\n    ybF I = new ybF();\n\n    q A5 = new q();\n}", innerClass.toString());
    }

    @Test
    public void test063() {
        Launcher launcher = new Launcher();
        launcher.getEnvironment().setComplianceLevel(17);
        launcher.getEnvironment().setAutoImports(true);
        launcher.getEnvironment().setShouldCompile(true);
        launcher.addInputResource(new VirtualFile("class Ew {\n  class WI {\n    class X {\n      class d {\n        class W {\n          class Qj {\n            class oygy {\n              class tK6 {\n\n                WI j = new WI();\n              }\n              class w0{}\n              class bTu {\n\n                Ew BsK = new Ew();\n                oygy r = new WI.X.d.W.Qj.oygy();\n                W.Qj.oygy OJuu6 = new Qj.oygy();\n              }\n              class C{}\n              X cx = new X();\n              Ew.WI.X Sc = new X();\n              W.Qj.oygy s = new X.d.W.Qj.oygy();\n              d.W V7 = new d.W();\n              d oPg = new X.d();\n            }\n            class x0{}\n            \n          }\n          class CU{}\n          class Hu {\n\n            d.W.Hu T = new WI.X.d.W.Hu();\n          }\n          class Vpk {\n\n            d.W.Vpk ll = new Ew.WI.X.d.W.Vpk();\n          }\n          W o = new d.W();\n        }\n        class o3{}\n        static class FzCFR{}\n        Ew yh = new Ew();\n        W VeU = new X.d.W();\n        Ew.WI.X.d F4 = new d();\n        Ew.WI m6U_3x1F = new Ew.WI();\n      }\n      class Sw {\n\n        Ew.WI pw = new Ew.WI();\n        Ew.WI U = new Ew.WI();\n        X l = new WI.X();\n        Sw K2 = new X.Sw();\n        X L = new WI.X();\n        Ew.WI B = new Ew.WI();\n        Ew.WI E = new WI();\n        WI.X n = new X();\n        WI.X.Sw O = new Ew.WI.X.Sw();\n        Ew.WI D = new WI();\n      }\n      class iH {\n\n        Ew c = new Ew();\n      }\n      class k {\n\n        WI Qtk = new WI();\n      }\n      \n    }\n    static class N{}\n    Ew f = new Ew();\n    Ew z = new Ew();\n    Ew.WI.N rbKLaO = new Ew.WI.N();\n  }\n  class Us {\n\n    Ew ZR0I = new Ew();\n    Us zsQOs = new Ew.Us();\n  }\n  class p {\n\n    p l1 = new Ew.p();\n    Ew y = new Ew();\n  }\n  Ew A = new Ew();\n  Ew.Us Dn = new Ew.Us();\n  Ew i = new Ew();\n}"));
        CtType<?> innerClass = launcher.buildModel().getAllTypes().iterator().next();
        assertEquals("class Ew {\n    class WI {\n        class X {\n            class d {\n                class W {\n                    class Qj {\n                        class oygy {\n                            class tK6 {\n                                WI j = new WI();\n                            }\n\n                            class w0 {}\n\n                            class bTu {\n                                Ew BsK = new Ew();\n\n                                oygy r = new WI.X.d.W.Qj.oygy();\n\n                                W.Qj.oygy OJuu6 = new Qj.oygy();\n                            }\n\n                            class C {}\n\n                            X cx = new X();\n\n                            Ew.WI.X Sc = new X();\n\n                            W.Qj.oygy s = new X.d.W.Qj.oygy();\n\n                            d.W V7 = new d.W();\n\n                            d oPg = new X.d();\n                        }\n\n                        class x0 {}\n                    }\n\n                    class CU {}\n\n                    class Hu {\n                        d.W.Hu T = new WI.X.d.W.Hu();\n                    }\n\n                    class Vpk {\n                        d.W.Vpk ll = new Ew.WI.X.d.W.Vpk();\n                    }\n\n                    W o = new d.W();\n                }\n\n                class o3 {}\n\n                static class FzCFR {}\n\n                Ew yh = new Ew();\n\n                W VeU = new X.d.W();\n\n                Ew.WI.X.d F4 = new d();\n\n                Ew.WI m6U_3x1F = new Ew.WI();\n            }\n\n            class Sw {\n                Ew.WI pw = new Ew.WI();\n\n                Ew.WI U = new Ew.WI();\n\n                X l = new WI.X();\n\n                Sw K2 = new X.Sw();\n\n                X L = new WI.X();\n\n                Ew.WI B = new Ew.WI();\n\n                Ew.WI E = new WI();\n\n                WI.X n = new X();\n\n                WI.X.Sw O = new Ew.WI.X.Sw();\n\n                Ew.WI D = new WI();\n            }\n\n            class iH {\n                Ew c = new Ew();\n            }\n\n            class k {\n                WI Qtk = new WI();\n            }\n        }\n\n        static class N {}\n\n        Ew f = new Ew();\n\n        Ew z = new Ew();\n\n        Ew.WI.N rbKLaO = new Ew.WI.N();\n    }\n\n    class Us {\n        Ew ZR0I = new Ew();\n\n        Us zsQOs = new Ew.Us();\n    }\n\n    class p {\n        p l1 = new Ew.p();\n\n        Ew y = new Ew();\n    }\n\n    Ew A = new Ew();\n\n    Ew.Us Dn = new Ew.Us();\n\n    Ew i = new Ew();\n}", innerClass.toString());
    }

    @Test
    public void test064() {
        Launcher launcher = new Launcher();
        launcher.getEnvironment().setComplianceLevel(17);
        launcher.getEnvironment().setAutoImports(true);
        launcher.getEnvironment().setShouldCompile(true);
        launcher.addInputResource(new VirtualFile("class X {\n  class SHu {\n    class R {\n      class JL2D0 {\n        class i {\n          class Lf {\n            class bf {\n              class h {\n                class OT {\n\n                  SHu.R y = new R();\n                }\n                class t{}\n                class uUv0OrO{}\n                class j{}\n                \n              }\n              \n            }\n            class qH{}\n            class XN {\n\n              R.JL2D0.i a = new R.JL2D0.i();\n              X k = new X();\n              SHu.R NQ = new R();\n              R.JL2D0.i G = new R.JL2D0.i();\n              JL2D0.i KEV = new X.SHu.R.JL2D0.i();\n              SHu.R.JL2D0 J = new X.SHu.R.JL2D0();\n            }\n            \n          }\n          X.SHu gD = new SHu();\n          X.SHu.R.JL2D0.i.Lf QMye = new X.SHu.R.JL2D0.i.Lf();\n        }\n        class yq7 {\n\n          R DE = new R();\n          X.SHu Dt = new SHu();\n        }\n        class v{}\n        X E = new X();\n      }\n      class z {\n\n        R w = new R();\n      }\n      class Ra{}\n      R.z mw = new R.z();\n    }\n    class A {\n\n      X.SHu r = new X.SHu();\n      SHu B = new X.SHu();\n    }\n    class q{}\n    SHu o = new X.SHu();\n    SHu.A j9d = new A();\n    X H = new X();\n    SHu.A s = new SHu.A();\n  }\n  class GMJ {\n\n    X.GMJ JE = new GMJ();\n    X.GMJ g = new X.GMJ();\n  }\n  class MT {\n\n    X.MT MDw = new X.MT();\n    X f = new X();\n    X.MT Bw = new MT();\n  }\n  \n}"));
        CtType<?> innerClass = launcher.buildModel().getAllTypes().iterator().next();
        assertEquals("class X {\n    class SHu {\n        class R {\n            class JL2D0 {\n                class i {\n                    class Lf {\n                        class bf {\n                            class h {\n                                class OT {\n                                    SHu.R y = new R();\n                                }\n\n                                class t {}\n\n                                class uUv0OrO {}\n\n                                class j {}\n                            }\n                        }\n\n                        class qH {}\n\n                        class XN {\n                            R.JL2D0.i a = new R.JL2D0.i();\n\n                            X k = new X();\n\n                            SHu.R NQ = new R();\n\n                            R.JL2D0.i G = new R.JL2D0.i();\n\n                            JL2D0.i KEV = new X.SHu.R.JL2D0.i();\n\n                            SHu.R.JL2D0 J = new X.SHu.R.JL2D0();\n                        }\n                    }\n\n                    X.SHu gD = new SHu();\n\n                    X.SHu.R.JL2D0.i.Lf QMye = new X.SHu.R.JL2D0.i.Lf();\n                }\n\n                class yq7 {\n                    R DE = new R();\n\n                    X.SHu Dt = new SHu();\n                }\n\n                class v {}\n\n                X E = new X();\n            }\n\n            class z {\n                R w = new R();\n            }\n\n            class Ra {}\n\n            R.z mw = new R.z();\n        }\n\n        class A {\n            X.SHu r = new X.SHu();\n\n            SHu B = new X.SHu();\n        }\n\n        class q {}\n\n        SHu o = new X.SHu();\n\n        SHu.A j9d = new A();\n\n        X H = new X();\n\n        SHu.A s = new SHu.A();\n    }\n\n    class GMJ {\n        X.GMJ JE = new GMJ();\n\n        X.GMJ g = new X.GMJ();\n    }\n\n    class MT {\n        X.MT MDw = new X.MT();\n\n        X f = new X();\n\n        X.MT Bw = new MT();\n    }\n}", innerClass.toString());
    }

    @Test
    public void test065() {
        Launcher launcher = new Launcher();
        launcher.getEnvironment().setComplianceLevel(17);
        launcher.getEnvironment().setAutoImports(true);
        launcher.getEnvironment().setShouldCompile(true);
        launcher.addInputResource(new VirtualFile("class J {\n  class a {\n    class H {\n      class i {\n        class M {\n          class c {\n            class Rj {\n              class yDeW2 {\n\n                H.i.M F = new H.i.M();\n                J l = new J();\n              }\n              class kRUfobT6{}\n              \n            }\n            \n          }\n          class vg {\n\n            a.H RM = new J.a.H();\n          }\n          class tN {\n\n            a.H.i Z = new J.a.H.i();\n            J.a.H q = new H();\n          }\n          \n        }\n        class sdI6{}\n        class OGZAx{}\n        class n{}\n        J D = new J();\n      }\n      class N{}\n      class r{}\n      J yGEfor = new J();\n      a JB2D = new a();\n      r v = new r();\n      J.a S = new a();\n    }\n    class h {\n\n      J NXBO = new J();\n    }\n    \n  }\n  class pw {\n\n    J Gd = new J();\n  }\n  class Rd {\n\n    J b = new J();\n    J.Rd a5 = new J.Rd();\n    J.Rd cI = new Rd();\n    J.Rd ny = new J.Rd();\n    J Y = new J();\n  }\n  class E9{}\n  \n}"));
        CtType<?> innerClass = launcher.buildModel().getAllTypes().iterator().next();
        assertEquals("class J {\n    class a {\n        class H {\n            class i {\n                class M {\n                    class c {\n                        class Rj {\n                            class yDeW2 {\n                                H.i.M F = new H.i.M();\n\n                                J l = new J();\n                            }\n\n                            class kRUfobT6 {}\n                        }\n                    }\n\n                    class vg {\n                        a.H RM = new J.a.H();\n                    }\n\n                    class tN {\n                        a.H.i Z = new J.a.H.i();\n\n                        J.a.H q = new H();\n                    }\n                }\n\n                class sdI6 {}\n\n                class OGZAx {}\n\n                class n {}\n\n                J D = new J();\n            }\n\n            class N {}\n\n            class r {}\n\n            J yGEfor = new J();\n\n            a JB2D = new a();\n\n            r v = new r();\n\n            J.a S = new a();\n        }\n\n        class h {\n            J NXBO = new J();\n        }\n    }\n\n    class pw {\n        J Gd = new J();\n    }\n\n    class Rd {\n        J b = new J();\n\n        J.Rd a5 = new J.Rd();\n\n        J.Rd cI = new Rd();\n\n        J.Rd ny = new J.Rd();\n\n        J Y = new J();\n    }\n\n    class E9 {}\n}", innerClass.toString());
    }

    @Test
    public void test066() {
        Launcher launcher = new Launcher();
        launcher.getEnvironment().setComplianceLevel(17);
        launcher.getEnvironment().setAutoImports(true);
        launcher.getEnvironment().setShouldCompile(true);
        launcher.addInputResource(new VirtualFile("class lRi {\n  class Vr {\n    class mz0u {\n      class K {\n        class oKF {\n          class F {\n            class g {\n              class dzz {\n                class Xj {\n                  class NI {\n\n                    mz0u.K.oKF.F.g.dzz.Xj.NI Yc2_ = new K.oKF.F.g.dzz.Xj.NI();\n                  }\n                  class X {\n\n                    mz0u.K.oKF.F V = new lRi.Vr.mz0u.K.oKF.F();\n                    Vr.mz0u.K ohH = new mz0u.K();\n                  }\n                  Vr.mz0u Y = new lRi.Vr.mz0u();\n                  F mv = new F();\n                  lRi JBQ = new lRi();\n                  lRi rS = new lRi();\n                }\n                \n              }\n              Vr.mz0u.K w = new K();\n            }\n            \n          }\n          class H {\n\n            K.oKF.H Dc = new oKF.H();\n          }\n          \n        }\n        lRi.Vr.mz0u U = new Vr.mz0u();\n        mz0u mi = new Vr.mz0u();\n      }\n      class q {\n\n        mz0u.q G = new mz0u.q();\n        Vr.mz0u vpy = new mz0u();\n      }\n      class to {\n\n        lRi Q = new lRi();\n        lRi KY = new lRi();\n      }\n      \n    }\n    class u {\n\n      lRi rKsNwb0 = new lRi();\n    }\n    class Gs {\n\n      Vr q8qZb = new lRi.Vr();\n    }\n    class B {\n\n      lRi Rm = new lRi();\n      lRi.Vr J = new Vr();\n      lRi.Vr S = new lRi.Vr();\n      Vr.B e = new Vr.B();\n      Vr tDY = new Vr();\n      lRi.Vr.B nr = new Vr.B();\n      lRi.Vr.B RPsdr = new lRi.Vr.B();\n      lRi AX = new lRi();\n      Vr.B FP578F1 = new Vr.B();\n      lRi s = new lRi();\n      Vr tJ = new Vr();\n    }\n    \n  }\n  class E9{}\n  class AX_7 {\n\n    lRi.AX_7 C = new AX_7();\n    lRi Em = new lRi();\n    AX_7 An = new lRi.AX_7();\n    AX_7 c9 = new lRi.AX_7();\n    lRi i = new lRi();\n    AX_7 x1 = new lRi.AX_7();\n    AX_7 I = new AX_7();\n  }\n  class qLznAx {\n\n    lRi.qLznAx r = new lRi.qLznAx();\n    qLznAx Nd = new lRi.qLznAx();\n  }\n  lRi sLz = new lRi();\n  lRi th = new lRi();\n  lRi HE = new lRi();\n  lRi fE = new lRi();\n  qLznAx Nl354 = new lRi.qLznAx();\n  lRi.AX_7 V6XHmI = new AX_7();\n}"));
        CtType<?> innerClass = launcher.buildModel().getAllTypes().iterator().next();
        assertEquals("class lRi {\n    class Vr {\n        class mz0u {\n            class K {\n                class oKF {\n                    class F {\n                        class g {\n                            class dzz {\n                                class Xj {\n                                    class NI {\n                                        mz0u.K.oKF.F.g.dzz.Xj.NI Yc2_ = new K.oKF.F.g.dzz.Xj.NI();\n                                    }\n\n                                    class X {\n                                        mz0u.K.oKF.F V = new lRi.Vr.mz0u.K.oKF.F();\n\n                                        Vr.mz0u.K ohH = new mz0u.K();\n                                    }\n\n                                    Vr.mz0u Y = new lRi.Vr.mz0u();\n\n                                    F mv = new F();\n\n                                    lRi JBQ = new lRi();\n\n                                    lRi rS = new lRi();\n                                }\n                            }\n\n                            Vr.mz0u.K w = new K();\n                        }\n                    }\n\n                    class H {\n                        K.oKF.H Dc = new oKF.H();\n                    }\n                }\n\n                lRi.Vr.mz0u U = new Vr.mz0u();\n\n                mz0u mi = new Vr.mz0u();\n            }\n\n            class q {\n                mz0u.q G = new mz0u.q();\n\n                Vr.mz0u vpy = new mz0u();\n            }\n\n            class to {\n                lRi Q = new lRi();\n\n                lRi KY = new lRi();\n            }\n        }\n\n        class u {\n            lRi rKsNwb0 = new lRi();\n        }\n\n        class Gs {\n            Vr q8qZb = new lRi.Vr();\n        }\n\n        class B {\n            lRi Rm = new lRi();\n\n            lRi.Vr J = new Vr();\n\n            lRi.Vr S = new lRi.Vr();\n\n            Vr.B e = new Vr.B();\n\n            Vr tDY = new Vr();\n\n            lRi.Vr.B nr = new Vr.B();\n\n            lRi.Vr.B RPsdr = new lRi.Vr.B();\n\n            lRi AX = new lRi();\n\n            Vr.B FP578F1 = new Vr.B();\n\n            lRi s = new lRi();\n\n            Vr tJ = new Vr();\n        }\n    }\n\n    class E9 {}\n\n    class AX_7 {\n        lRi.AX_7 C = new AX_7();\n\n        lRi Em = new lRi();\n\n        AX_7 An = new lRi.AX_7();\n\n        AX_7 c9 = new lRi.AX_7();\n\n        lRi i = new lRi();\n\n        AX_7 x1 = new lRi.AX_7();\n\n        AX_7 I = new AX_7();\n    }\n\n    class qLznAx {\n        lRi.qLznAx r = new lRi.qLznAx();\n\n        qLznAx Nd = new lRi.qLznAx();\n    }\n\n    lRi sLz = new lRi();\n\n    lRi th = new lRi();\n\n    lRi HE = new lRi();\n\n    lRi fE = new lRi();\n\n    qLznAx Nl354 = new lRi.qLznAx();\n\n    lRi.AX_7 V6XHmI = new AX_7();\n}", innerClass.toString());
    }

    @Test
    public void test067() {
        Launcher launcher = new Launcher();
        launcher.getEnvironment().setComplianceLevel(17);
        launcher.getEnvironment().setAutoImports(true);
        launcher.getEnvironment().setShouldCompile(true);
        launcher.addInputResource(new VirtualFile("class l {\n  class Z_ {\n    class N {\n      class tgv {\n        class Y {\n          class k6e {\n            class Ck {\n              class e {\n                class f0 {\n                  class xjt9 {\n                    class is {\n                      class Uj {\n\n                        tgv rS0 = new Z_.N.tgv();\n                        Ck.e.f0 jPR = new k6e.Ck.e.f0();\n                        N.tgv.Y.k6e.Ck.e.f0 J = new N.tgv.Y.k6e.Ck.e.f0();\n                        N.tgv ku_T = new l.Z_.N.tgv();\n                        Ck.e.f0 t = new Ck.e.f0();\n                      }\n                      class hGt {\n\n                        Ck.e.f0.xjt9 Ody = new tgv.Y.k6e.Ck.e.f0.xjt9();\n                        Z_.N.tgv.Y a = new N.tgv.Y();\n                        N.tgv.Y.k6e.Ck A = new Y.k6e.Ck();\n                        e.f0.xjt9.is.hGt VJl = new Ck.e.f0.xjt9.is.hGt();\n                        l.Z_.N.tgv.Y G = new tgv.Y();\n                        Y.k6e y = new Z_.N.tgv.Y.k6e();\n                        tgv.Y.k6e.Ck.e B0O = new l.Z_.N.tgv.Y.k6e.Ck.e();\n                      }\n                      class QZ{}\n                      Z_.N.tgv.Y.k6e.Ck.e.f0 p = new k6e.Ck.e.f0();\n                      l.Z_.N.tgv.Y.k6e OB = new N.tgv.Y.k6e();\n                      l X = new l();\n                      k6e.Ck.e.f0.xjt9 j = new Y.k6e.Ck.e.f0.xjt9();\n                    }\n                    class F {\n\n                      l.Z_ s8 = new Z_();\n                    }\n                    tgv.Y.k6e.Ck.e g7a7IXjat = new Y.k6e.Ck.e();\n                    N ej = new l.Z_.N();\n                  }\n                  class I {\n\n                    l.Z_.N.tgv.Y W = new N.tgv.Y();\n                  }\n                  \n                }\n                Ck BM = new l.Z_.N.tgv.Y.k6e.Ck();\n              }\n              class a8J1{}\n              class B_ {\n\n                Z_.N.tgv.Y.k6e.Ck B = new N.tgv.Y.k6e.Ck();\n                tgv or = new Z_.N.tgv();\n                N.tgv.Y.k6e MsL = new Y.k6e();\n              }\n              \n            }\n            l Q = new l();\n            l Io = new l();\n          }\n          class d{}\n          class S {\n\n            l.Z_.N.tgv.Y.S Z = new Z_.N.tgv.Y.S();\n          }\n          \n        }\n        l.Z_.N L = new Z_.N();\n      }\n      class n {\n\n        N Wz = new l.Z_.N();\n      }\n      \n    }\n    class WZ{}\n    \n  }\n  \n}"));
        CtType<?> innerClass = launcher.buildModel().getAllTypes().iterator().next();
        assertEquals("class l {\n    class Z_ {\n        class N {\n            class tgv {\n                class Y {\n                    class k6e {\n                        class Ck {\n                            class e {\n                                class f0 {\n                                    class xjt9 {\n                                        class is {\n                                            class Uj {\n                                                tgv rS0 = new Z_.N.tgv();\n\n                                                Ck.e.f0 jPR = new k6e.Ck.e.f0();\n\n                                                N.tgv.Y.k6e.Ck.e.f0 J = new N.tgv.Y.k6e.Ck.e.f0();\n\n                                                N.tgv ku_T = new l.Z_.N.tgv();\n\n                                                Ck.e.f0 t = new Ck.e.f0();\n                                            }\n\n                                            class hGt {\n                                                Ck.e.f0.xjt9 Ody = new tgv.Y.k6e.Ck.e.f0.xjt9();\n\n                                                Z_.N.tgv.Y a = new N.tgv.Y();\n\n                                                N.tgv.Y.k6e.Ck A = new Y.k6e.Ck();\n\n                                                e.f0.xjt9.is.hGt VJl = new Ck.e.f0.xjt9.is.hGt();\n\n                                                l.Z_.N.tgv.Y G = new tgv.Y();\n\n                                                Y.k6e y = new Z_.N.tgv.Y.k6e();\n\n                                                tgv.Y.k6e.Ck.e B0O = new l.Z_.N.tgv.Y.k6e.Ck.e();\n                                            }\n\n                                            class QZ {}\n\n                                            Z_.N.tgv.Y.k6e.Ck.e.f0 p = new k6e.Ck.e.f0();\n\n                                            l.Z_.N.tgv.Y.k6e OB = new N.tgv.Y.k6e();\n\n                                            l X = new l();\n\n                                            k6e.Ck.e.f0.xjt9 j = new Y.k6e.Ck.e.f0.xjt9();\n                                        }\n\n                                        class F {\n                                            l.Z_ s8 = new Z_();\n                                        }\n\n                                        tgv.Y.k6e.Ck.e g7a7IXjat = new Y.k6e.Ck.e();\n\n                                        N ej = new l.Z_.N();\n                                    }\n\n                                    class I {\n                                        l.Z_.N.tgv.Y W = new N.tgv.Y();\n                                    }\n                                }\n\n                                Ck BM = new l.Z_.N.tgv.Y.k6e.Ck();\n                            }\n\n                            class a8J1 {}\n\n                            class B_ {\n                                Z_.N.tgv.Y.k6e.Ck B = new N.tgv.Y.k6e.Ck();\n\n                                tgv or = new Z_.N.tgv();\n\n                                N.tgv.Y.k6e MsL = new Y.k6e();\n                            }\n                        }\n\n                        l Q = new l();\n\n                        l Io = new l();\n                    }\n\n                    class d {}\n\n                    class S {\n                        l.Z_.N.tgv.Y.S Z = new Z_.N.tgv.Y.S();\n                    }\n                }\n\n                l.Z_.N L = new Z_.N();\n            }\n\n            class n {\n                N Wz = new l.Z_.N();\n            }\n        }\n\n        class WZ {}\n    }\n}", innerClass.toString());
    }

    @Test
    public void test068() {
        Launcher launcher = new Launcher();
        launcher.getEnvironment().setComplianceLevel(17);
        launcher.getEnvironment().setAutoImports(true);
        launcher.getEnvironment().setShouldCompile(true);
        launcher.addInputResource(new VirtualFile("class K {\n  class n {\n    class kj {\n      class W {\n        class ou0 {\n          class OPn {\n            class v {\n              class dO {\n                class O{}\n                class kjJCr{}\n                kj.W C = new n.kj.W();\n              }\n              class g {\n\n                W.ou0.OPn.v.g g9 = new n.kj.W.ou0.OPn.v.g();\n              }\n              class J {\n\n                K.n.kj a = new n.kj();\n              }\n              class I {\n\n                ou0.OPn sR = new kj.W.ou0.OPn();\n              }\n              OPn.v.g s3 = new n.kj.W.ou0.OPn.v.g();\n            }\n            class j{}\n            class z{}\n            class eV {\n\n              OPn Zy5 = new ou0.OPn();\n              n.kj S = new K.n.kj();\n              n.kj.W.ou0 Y = new ou0();\n              K PNg = new K();\n            }\n            \n          }\n          class Ia{}\n          W.ou0.OPn wJ = new W.ou0.OPn();\n          ou0.OPn iq = new OPn();\n        }\n        class l {\n\n          K.n y3 = new K.n();\n        }\n        \n      }\n      K oyh = new K();\n      K M3Xt = new K();\n      K Zz8 = new K();\n      kj.W y = new n.kj.W();\n      K.n EL = new n();\n    }\n    static class V{}\n    \n  }\n  class r {\n\n    K QB = new K();\n    r L = new K.r();\n  }\n  K sTK = new K();\n  r cI = new r();\n  K.n Eo = new K.n();\n  K tax4 = new K();\n}"));
        CtType<?> innerClass = launcher.buildModel().getAllTypes().iterator().next();
        assertEquals("class K {\n    class n {\n        class kj {\n            class W {\n                class ou0 {\n                    class OPn {\n                        class v {\n                            class dO {\n                                class O {}\n\n                                class kjJCr {}\n\n                                kj.W C = new n.kj.W();\n                            }\n\n                            class g {\n                                W.ou0.OPn.v.g g9 = new n.kj.W.ou0.OPn.v.g();\n                            }\n\n                            class J {\n                                K.n.kj a = new n.kj();\n                            }\n\n                            class I {\n                                ou0.OPn sR = new kj.W.ou0.OPn();\n                            }\n\n                            OPn.v.g s3 = new n.kj.W.ou0.OPn.v.g();\n                        }\n\n                        class j {}\n\n                        class z {}\n\n                        class eV {\n                            OPn Zy5 = new ou0.OPn();\n\n                            n.kj S = new K.n.kj();\n\n                            n.kj.W.ou0 Y = new ou0();\n\n                            K PNg = new K();\n                        }\n                    }\n\n                    class Ia {}\n\n                    W.ou0.OPn wJ = new W.ou0.OPn();\n\n                    ou0.OPn iq = new OPn();\n                }\n\n                class l {\n                    K.n y3 = new K.n();\n                }\n            }\n\n            K oyh = new K();\n\n            K M3Xt = new K();\n\n            K Zz8 = new K();\n\n            kj.W y = new n.kj.W();\n\n            K.n EL = new n();\n        }\n\n        static class V {}\n    }\n\n    class r {\n        K QB = new K();\n\n        r L = new K.r();\n    }\n\n    K sTK = new K();\n\n    r cI = new r();\n\n    K.n Eo = new K.n();\n\n    K tax4 = new K();\n}", innerClass.toString());
    }

    @Test
    public void test069() {
        Launcher launcher = new Launcher();
        launcher.getEnvironment().setComplianceLevel(17);
        launcher.getEnvironment().setAutoImports(true);
        launcher.getEnvironment().setShouldCompile(true);
        launcher.addInputResource(new VirtualFile("class y {\n  class C {\n    class VX {\n      class Ec {\n        class AU {\n          class rr {\n\n            VX FI = new VX();\n          }\n          class aq{}\n          class Tlu {\n\n            y.C.VX.Ec FZid = new C.VX.Ec();\n          }\n          class H {\n\n            VX J = new y.C.VX();\n          }\n          AU uj = new Ec.AU();\n          aq s2 = new y.C.VX.Ec.AU.aq();\n        }\n        class GKN {\n\n          y.C yoZ = new C();\n        }\n        class X {\n\n          C o = new C();\n        }\n        class Noi{}\n        y.C vE5 = new y.C();\n      }\n      static class AVk{}\n      static class d{}\n      class Y {\n\n        y.C.VX.Y y9 = new C.VX.Y();\n        VX Xv = new C.VX();\n        y.C b = new y.C();\n        C.VX.Y f = new Y();\n      }\n      \n    }\n    class XV {\n\n      y.C.XV g = new C.XV();\n    }\n    class Wcg {\n\n      Wcg eay = new Wcg();\n    }\n    y.C DuDL = new y.C();\n  }\n  class HFR {\n\n    HFR F = new HFR();\n  }\n  class Dn{}\n  class VRdfb_LB {\n\n    y Vm9QqX = new y();\n  }\n  y L = new y();\n  y.VRdfb_LB kRL8E = new y.VRdfb_LB();\n  y Z = new y();\n}"));
        CtType<?> innerClass = launcher.buildModel().getAllTypes().iterator().next();
        assertEquals("class y {\n    class C {\n        class VX {\n            class Ec {\n                class AU {\n                    class rr {\n                        VX FI = new VX();\n                    }\n\n                    class aq {}\n\n                    class Tlu {\n                        y.C.VX.Ec FZid = new C.VX.Ec();\n                    }\n\n                    class H {\n                        VX J = new y.C.VX();\n                    }\n\n                    AU uj = new Ec.AU();\n\n                    aq s2 = new y.C.VX.Ec.AU.aq();\n                }\n\n                class GKN {\n                    y.C yoZ = new C();\n                }\n\n                class X {\n                    C o = new C();\n                }\n\n                class Noi {}\n\n                y.C vE5 = new y.C();\n            }\n\n            static class AVk {}\n\n            static class d {}\n\n            class Y {\n                y.C.VX.Y y9 = new C.VX.Y();\n\n                VX Xv = new C.VX();\n\n                y.C b = new y.C();\n\n                C.VX.Y f = new Y();\n            }\n        }\n\n        class XV {\n            y.C.XV g = new C.XV();\n        }\n\n        class Wcg {\n            Wcg eay = new Wcg();\n        }\n\n        y.C DuDL = new y.C();\n    }\n\n    class HFR {\n        HFR F = new HFR();\n    }\n\n    class Dn {}\n\n    class VRdfb_LB {\n        y Vm9QqX = new y();\n    }\n\n    y L = new y();\n\n    y.VRdfb_LB kRL8E = new y.VRdfb_LB();\n\n    y Z = new y();\n}", innerClass.toString());
    }

    @Test
    public void test070() {
        Launcher launcher = new Launcher();
        launcher.getEnvironment().setComplianceLevel(17);
        launcher.getEnvironment().setAutoImports(true);
        launcher.getEnvironment().setShouldCompile(true);
        launcher.addInputResource(new VirtualFile("class h {\n  class C {\n    class Dp {\n      class OCf {\n        class jXf {\n          class xX {\n            class m {\n              class k1 {\n                class Z{}\n                class e {\n\n                  h.C.Dp b9A = new Dp();\n                }\n                class Jwp{}\n                class BFb{}\n                \n              }\n              class Vs {\n\n                h oy = new h();\n                C.Dp.OCf z = new OCf();\n              }\n              class x{}\n              class fDag {\n\n                Dp.OCf Cr = new Dp.OCf();\n              }\n              \n            }\n            class Bv {\n\n              Dp.OCf k3F = new C.Dp.OCf();\n            }\n            C.Dp AC = new C.Dp();\n            h MLDl = new h();\n            h LE = new h();\n          }\n          \n        }\n        class Su{}\n        OCf p = new C.Dp.OCf();\n      }\n      \n    }\n    static class a{}\n    class VQa {\n\n      h ljJ = new h();\n    }\n    \n  }\n  class B{}\n  class H {\n\n    H C4 = new h.H();\n  }\n  \n}"));
        CtType<?> innerClass = launcher.buildModel().getAllTypes().iterator().next();
        assertEquals("class h {\n    class C {\n        class Dp {\n            class OCf {\n                class jXf {\n                    class xX {\n                        class m {\n                            class k1 {\n                                class Z {}\n\n                                class e {\n                                    h.C.Dp b9A = new Dp();\n                                }\n\n                                class Jwp {}\n\n                                class BFb {}\n                            }\n\n                            class Vs {\n                                h oy = new h();\n\n                                C.Dp.OCf z = new OCf();\n                            }\n\n                            class x {}\n\n                            class fDag {\n                                Dp.OCf Cr = new Dp.OCf();\n                            }\n                        }\n\n                        class Bv {\n                            Dp.OCf k3F = new C.Dp.OCf();\n                        }\n\n                        C.Dp AC = new C.Dp();\n\n                        h MLDl = new h();\n\n                        h LE = new h();\n                    }\n                }\n\n                class Su {}\n\n                OCf p = new C.Dp.OCf();\n            }\n        }\n\n        static class a {}\n\n        class VQa {\n            h ljJ = new h();\n        }\n    }\n\n    class B {}\n\n    class H {\n        H C4 = new h.H();\n    }\n}", innerClass.toString());
    }

    @Test
    public void test071() {
        Launcher launcher = new Launcher();
        launcher.getEnvironment().setComplianceLevel(17);
        launcher.getEnvironment().setAutoImports(true);
        launcher.getEnvironment().setShouldCompile(true);
        launcher.addInputResource(new VirtualFile("class N {\n  class t {\n    class Y {\n      class n {\n        class g {\n          class hE {\n            class G{}\n            class Jd{}\n            N.t.Y J3UAYD = new N.t.Y();\n            hE.Jd vO = new Y.n.g.hE.Jd();\n            n.g Ht = new g();\n          }\n          class D87{}\n          \n        }\n        class Qc{}\n        class cjdM5l{}\n        n.Qc u5X = new n.Qc();\n      }\n      class Hd8PfIiNeq {\n\n        Y.Hd8PfIiNeq HfVP = new Hd8PfIiNeq();\n      }\n      class G7DD9 {\n\n        Y sI1 = new N.t.Y();\n      }\n      class T {\n\n        N l9Xo6onc = new N();\n        Y q = new Y();\n        N e = new N();\n      }\n      \n    }\n    class w{}\n    class JGvO {\n\n      N k = new N();\n    }\n    class c {\n\n      N C35o = new N();\n      t Q = new N.t();\n    }\n    \n  }\n  static class a{}\n  class iZOa5 {\n\n    iZOa5 TPdL = new iZOa5();\n    N.iZOa5 AtK = new iZOa5();\n    N H5lt = new N();\n  }\n  class S {\n\n    N Ep = new N();\n    N W = new N();\n  }\n  \n}"));
        CtType<?> innerClass = launcher.buildModel().getAllTypes().iterator().next();
        assertEquals("class N {\n    class t {\n        class Y {\n            class n {\n                class g {\n                    class hE {\n                        class G {}\n\n                        class Jd {}\n\n                        N.t.Y J3UAYD = new N.t.Y();\n\n                        hE.Jd vO = new Y.n.g.hE.Jd();\n\n                        n.g Ht = new g();\n                    }\n\n                    class D87 {}\n                }\n\n                class Qc {}\n\n                class cjdM5l {}\n\n                n.Qc u5X = new n.Qc();\n            }\n\n            class Hd8PfIiNeq {\n                Y.Hd8PfIiNeq HfVP = new Hd8PfIiNeq();\n            }\n\n            class G7DD9 {\n                Y sI1 = new N.t.Y();\n            }\n\n            class T {\n                N l9Xo6onc = new N();\n\n                Y q = new Y();\n\n                N e = new N();\n            }\n        }\n\n        class w {}\n\n        class JGvO {\n            N k = new N();\n        }\n\n        class c {\n            N C35o = new N();\n\n            t Q = new N.t();\n        }\n    }\n\n    static class a {}\n\n    class iZOa5 {\n        iZOa5 TPdL = new iZOa5();\n\n        N.iZOa5 AtK = new iZOa5();\n\n        N H5lt = new N();\n    }\n\n    class S {\n        N Ep = new N();\n\n        N W = new N();\n    }\n}", innerClass.toString());
    }

    @Test
    public void test072() {
        Launcher launcher = new Launcher();
        launcher.getEnvironment().setComplianceLevel(17);
        launcher.getEnvironment().setAutoImports(true);
        launcher.getEnvironment().setShouldCompile(true);
        launcher.addInputResource(new VirtualFile("class u8 {\n  class s {\n    class aRT {\n      class vt {\n        class rQ {\n          class duG {\n            class kbv {\n              class Dh {\n                class k{}\n                class t {\n\n                  u8.s.aRT.vt.rQ.duG.kbv.Dh a = new Dh();\n                }\n                class J{}\n                class u{}\n                u8.s.aRT.vt.rQ.duG.kbv j = new duG.kbv();\n              }\n              s.aRT x = new u8.s.aRT();\n              vt.rQ H6WGq = new rQ();\n            }\n            class E4 {\n\n              E4 v = new aRT.vt.rQ.duG.E4();\n              u8.s.aRT.vt.rQ.duG Gp = new s.aRT.vt.rQ.duG();\n            }\n            duG LV = new s.aRT.vt.rQ.duG();\n            s.aRT.vt.rQ dV = new rQ();\n          }\n          u8.s.aRT.vt.rQ V = new s.aRT.vt.rQ();\n        }\n        class Sz {\n\n          aRT.vt Zz = new aRT.vt();\n          s.aRT.vt.Sz nU = new vt.Sz();\n        }\n        class l{}\n        static class c{}\n        u8 VT7 = new u8();\n        u8.s.aRT Y = new aRT();\n        s BFh = new s();\n      }\n      class Kav {\n\n        Kav wK = new Kav();\n      }\n      u8 N = new u8();\n      s.aRT L = new aRT();\n      s HQzR = new u8.s();\n      u8.s.aRT Vb = new aRT();\n    }\n    class O {\n\n      u8.s.O MFW = new u8.s.O();\n    }\n    class iT {\n\n      s.iT GVF = new u8.s.iT();\n    }\n    \n  }\n  class G{}\n  class S{}\n  u8 LU1hE = new u8();\n}"));
        CtType<?> innerClass = launcher.buildModel().getAllTypes().iterator().next();
        assertEquals("class u8 {\n    class s {\n        class aRT {\n            class vt {\n                class rQ {\n                    class duG {\n                        class kbv {\n                            class Dh {\n                                class k {}\n\n                                class t {\n                                    u8.s.aRT.vt.rQ.duG.kbv.Dh a = new Dh();\n                                }\n\n                                class J {}\n\n                                class u {}\n\n                                u8.s.aRT.vt.rQ.duG.kbv j = new duG.kbv();\n                            }\n\n                            s.aRT x = new u8.s.aRT();\n\n                            vt.rQ H6WGq = new rQ();\n                        }\n\n                        class E4 {\n                            E4 v = new aRT.vt.rQ.duG.E4();\n\n                            u8.s.aRT.vt.rQ.duG Gp = new s.aRT.vt.rQ.duG();\n                        }\n\n                        duG LV = new s.aRT.vt.rQ.duG();\n\n                        s.aRT.vt.rQ dV = new rQ();\n                    }\n\n                    u8.s.aRT.vt.rQ V = new s.aRT.vt.rQ();\n                }\n\n                class Sz {\n                    aRT.vt Zz = new aRT.vt();\n\n                    s.aRT.vt.Sz nU = new vt.Sz();\n                }\n\n                class l {}\n\n                static class c {}\n\n                u8 VT7 = new u8();\n\n                u8.s.aRT Y = new aRT();\n\n                s BFh = new s();\n            }\n\n            class Kav {\n                Kav wK = new Kav();\n            }\n\n            u8 N = new u8();\n\n            s.aRT L = new aRT();\n\n            s HQzR = new u8.s();\n\n            u8.s.aRT Vb = new aRT();\n        }\n\n        class O {\n            u8.s.O MFW = new u8.s.O();\n        }\n\n        class iT {\n            s.iT GVF = new u8.s.iT();\n        }\n    }\n\n    class G {}\n\n    class S {}\n\n    u8 LU1hE = new u8();\n}", innerClass.toString());
    }

    @Test
    public void test073() {
        Launcher launcher = new Launcher();
        launcher.getEnvironment().setComplianceLevel(17);
        launcher.getEnvironment().setAutoImports(true);
        launcher.getEnvironment().setShouldCompile(true);
        launcher.addInputResource(new VirtualFile("class lx {\n  class U2 {\n    class M {\n      class P {\n        class db {\n          class e {\n            class C {\n              class d {\n                class k {\n                  class I {\n                    class y {\n\n                      U2.M.P s6 = new M.P();\n                    }\n                    class dj {\n\n                      lx f = new lx();\n                    }\n                    class IZ3{}\n                    P.db UBW = new lx.U2.M.P.db();\n                  }\n                  \n                }\n                class K {\n\n                  M.P.db.e n = new lx.U2.M.P.db.e();\n                  M.P.db.e LRO = new P.db.e();\n                  lx.U2 Cy = new U2();\n                  lx c = new lx();\n                  P.db.e.C r = new C();\n                  P.db.e.C.d Q = new U2.M.P.db.e.C.d();\n                  U2.M.P E = new U2.M.P();\n                  db.e.C.d A = new e.C.d();\n                  lx.U2 x = new U2();\n                  lx.U2.M.P kM = new U2.M.P();\n                  P.db.e.C.d.K U = new db.e.C.d.K();\n                  U2.M.P.db.e.C.d.K G = new C.d.K();\n                  P.db TNa = new M.P.db();\n                }\n                \n              }\n              class m{}\n              class O0 {\n\n                lx Wv = new lx();\n              }\n              db.e.C.O0 T = new C.O0();\n              db.e N = new e();\n            }\n            lx.U2.M F = new U2.M();\n            P g = new U2.M.P();\n            lx.U2.M.P.db v = new U2.M.P.db();\n          }\n          class w{}\n          \n        }\n        static class NC7{}\n        static class Jm{}\n        class H {\n\n          M h = new lx.U2.M();\n          M.P YYL = new P();\n        }\n        U2.M.P B = new lx.U2.M.P();\n        U2.M uY = new U2.M();\n      }\n      class BJ{}\n      \n    }\n    lx.U2.M ckqUpgh0PQwXP = new M();\n  }\n  lx.U2 ziM = new lx.U2();\n  lx.U2 R = new lx.U2();\n  lx.U2 uD = new U2();\n}"));
        CtType<?> innerClass = launcher.buildModel().getAllTypes().iterator().next();
        assertEquals("class lx {\n    class U2 {\n        class M {\n            class P {\n                class db {\n                    class e {\n                        class C {\n                            class d {\n                                class k {\n                                    class I {\n                                        class y {\n                                            U2.M.P s6 = new M.P();\n                                        }\n\n                                        class dj {\n                                            lx f = new lx();\n                                        }\n\n                                        class IZ3 {}\n\n                                        P.db UBW = new lx.U2.M.P.db();\n                                    }\n                                }\n\n                                class K {\n                                    M.P.db.e n = new lx.U2.M.P.db.e();\n\n                                    M.P.db.e LRO = new P.db.e();\n\n                                    lx.U2 Cy = new U2();\n\n                                    lx c = new lx();\n\n                                    P.db.e.C r = new C();\n\n                                    P.db.e.C.d Q = new U2.M.P.db.e.C.d();\n\n                                    U2.M.P E = new U2.M.P();\n\n                                    db.e.C.d A = new e.C.d();\n\n                                    lx.U2 x = new U2();\n\n                                    lx.U2.M.P kM = new U2.M.P();\n\n                                    P.db.e.C.d.K U = new db.e.C.d.K();\n\n                                    U2.M.P.db.e.C.d.K G = new C.d.K();\n\n                                    P.db TNa = new M.P.db();\n                                }\n                            }\n\n                            class m {}\n\n                            class O0 {\n                                lx Wv = new lx();\n                            }\n\n                            db.e.C.O0 T = new C.O0();\n\n                            db.e N = new e();\n                        }\n\n                        lx.U2.M F = new U2.M();\n\n                        P g = new U2.M.P();\n\n                        lx.U2.M.P.db v = new U2.M.P.db();\n                    }\n\n                    class w {}\n                }\n\n                static class NC7 {}\n\n                static class Jm {}\n\n                class H {\n                    M h = new lx.U2.M();\n\n                    M.P YYL = new P();\n                }\n\n                U2.M.P B = new lx.U2.M.P();\n\n                U2.M uY = new U2.M();\n            }\n\n            class BJ {}\n        }\n\n        lx.U2.M ckqUpgh0PQwXP = new M();\n    }\n\n    lx.U2 ziM = new lx.U2();\n\n    lx.U2 R = new lx.U2();\n\n    lx.U2 uD = new U2();\n}", innerClass.toString());
    }

    @Test
    public void test074() {
        Launcher launcher = new Launcher();
        launcher.getEnvironment().setComplianceLevel(17);
        launcher.getEnvironment().setAutoImports(true);
        launcher.getEnvironment().setShouldCompile(true);
        launcher.addInputResource(new VirtualFile("class q4dB7hO {\n  class s {\n    class sO {\n      class D3 {\n        class p {\n          class X {\n            class S2 {\n              class P {\n                class TWq {\n\n                  sO.D3 tV = new s.sO.D3();\n                }\n                class z {\n\n                  S2.P.z Y = new s.sO.D3.p.X.S2.P.z();\n                }\n                class G3wHE{}\n                \n              }\n              class XD{}\n              \n            }\n            class Q {\n\n              q4dB7hO dI = new q4dB7hO();\n            }\n            class R8{}\n            \n          }\n          \n        }\n        \n      }\n      class xFr{}\n      \n    }\n    class x{}\n    class w {\n\n      q4dB7hO A = new q4dB7hO();\n    }\n    class O {\n\n      q4dB7hO Gy = new q4dB7hO();\n    }\n    sO G = new q4dB7hO.s.sO();\n    q4dB7hO du = new q4dB7hO();\n  }\n  class r{}\n  class o {\n\n    q4dB7hO.o EIVCX = new o();\n  }\n  \n}"));
        CtType<?> innerClass = launcher.buildModel().getAllTypes().iterator().next();
        assertEquals("class q4dB7hO {\n    class s {\n        class sO {\n            class D3 {\n                class p {\n                    class X {\n                        class S2 {\n                            class P {\n                                class TWq {\n                                    sO.D3 tV = new s.sO.D3();\n                                }\n\n                                class z {\n                                    S2.P.z Y = new s.sO.D3.p.X.S2.P.z();\n                                }\n\n                                class G3wHE {}\n                            }\n\n                            class XD {}\n                        }\n\n                        class Q {\n                            q4dB7hO dI = new q4dB7hO();\n                        }\n\n                        class R8 {}\n                    }\n                }\n            }\n\n            class xFr {}\n        }\n\n        class x {}\n\n        class w {\n            q4dB7hO A = new q4dB7hO();\n        }\n\n        class O {\n            q4dB7hO Gy = new q4dB7hO();\n        }\n\n        sO G = new q4dB7hO.s.sO();\n\n        q4dB7hO du = new q4dB7hO();\n    }\n\n    class r {}\n\n    class o {\n        q4dB7hO.o EIVCX = new o();\n    }\n}", innerClass.toString());
    }

    @Test
    public void test075() {
        Launcher launcher = new Launcher();
        launcher.getEnvironment().setComplianceLevel(17);
        launcher.getEnvironment().setAutoImports(true);
        launcher.getEnvironment().setShouldCompile(true);
        launcher.addInputResource(new VirtualFile("class r {\n  class jJOPi {\n    class b {\n      class lgt {\n        class tV {\n          class qke {\n            class Fm {\n              class bp {\n\n                b.lgt.tV l6 = new jJOPi.b.lgt.tV();\n              }\n              class i{}\n              class g{}\n              \n            }\n            class w{}\n            class Og {\n\n              jJOPi.b.lgt ASoo = new lgt();\n            }\n            b.lgt.tV.qke.Og gwlW = new qke.Og();\n          }\n          class zu7T {\n\n            jJOPi.b.lgt lYExOou = new r.jJOPi.b.lgt();\n          }\n          \n        }\n        class z {\n\n          r iM = new r();\n          lgt E = new jJOPi.b.lgt();\n          r.jJOPi.b.lgt.z od = new jJOPi.b.lgt.z();\n        }\n        class Tuu {\n\n          r.jJOPi pU = new jJOPi();\n        }\n        class tqMA {\n\n          jJOPi s = new r.jJOPi();\n          b.lgt.tqMA Gv = new b.lgt.tqMA();\n          r.jJOPi G = new jJOPi();\n        }\n        \n      }\n      static class M{}\n      \n    }\n    class F {\n\n      r X = new r();\n      r q = new r();\n    }\n    class l{}\n    r.jJOPi f = new r.jJOPi();\n    jJOPi.l K = new r.jJOPi.l();\n  }\n  class Ik {\n\n    r.Ik qpGftYq = new Ik();\n    Ik Ny = new Ik();\n    r lq = new r();\n    r KL = new r();\n    r.Ik eL = new r.Ik();\n    r.Ik YvRC = new r.Ik();\n    r.Ik VZ = new r.Ik();\n    r r87A = new r();\n  }\n  \n}"));
        CtType<?> innerClass = launcher.buildModel().getAllTypes().iterator().next();
        assertEquals("class r {\n    class jJOPi {\n        class b {\n            class lgt {\n                class tV {\n                    class qke {\n                        class Fm {\n                            class bp {\n                                b.lgt.tV l6 = new jJOPi.b.lgt.tV();\n                            }\n\n                            class i {}\n\n                            class g {}\n                        }\n\n                        class w {}\n\n                        class Og {\n                            jJOPi.b.lgt ASoo = new lgt();\n                        }\n\n                        b.lgt.tV.qke.Og gwlW = new qke.Og();\n                    }\n\n                    class zu7T {\n                        jJOPi.b.lgt lYExOou = new r.jJOPi.b.lgt();\n                    }\n                }\n\n                class z {\n                    r iM = new r();\n\n                    lgt E = new jJOPi.b.lgt();\n\n                    r.jJOPi.b.lgt.z od = new jJOPi.b.lgt.z();\n                }\n\n                class Tuu {\n                    r.jJOPi pU = new jJOPi();\n                }\n\n                class tqMA {\n                    jJOPi s = new r.jJOPi();\n\n                    b.lgt.tqMA Gv = new b.lgt.tqMA();\n\n                    r.jJOPi G = new jJOPi();\n                }\n            }\n\n            static class M {}\n        }\n\n        class F {\n            r X = new r();\n\n            r q = new r();\n        }\n\n        class l {}\n\n        r.jJOPi f = new r.jJOPi();\n\n        jJOPi.l K = new r.jJOPi.l();\n    }\n\n    class Ik {\n        r.Ik qpGftYq = new Ik();\n\n        Ik Ny = new Ik();\n\n        r lq = new r();\n\n        r KL = new r();\n\n        r.Ik eL = new r.Ik();\n\n        r.Ik YvRC = new r.Ik();\n\n        r.Ik VZ = new r.Ik();\n\n        r r87A = new r();\n    }\n}", innerClass.toString());
    }

    @Test
    public void test076() {
        Launcher launcher = new Launcher();
        launcher.getEnvironment().setComplianceLevel(17);
        launcher.getEnvironment().setAutoImports(true);
        launcher.getEnvironment().setShouldCompile(true);
        launcher.addInputResource(new VirtualFile("class lF {\n  class KQ {\n    class uQ {\n      class Y {\n        class N {\n          class Q {\n            class w {\n              class l {\n                class g {\n                  class ra {\n\n                    KQ.uQ.Y.N.Q xZ = new Y.N.Q();\n                    uQ.Y.N.Q.w.l.g.ra QHI = new lF.KQ.uQ.Y.N.Q.w.l.g.ra();\n                    Q.w.l f = new KQ.uQ.Y.N.Q.w.l();\n                  }\n                  class S{}\n                  class Zrd{}\n                  \n                }\n                N H = new lF.KQ.uQ.Y.N();\n                lF v = new lF();\n              }\n              class O{}\n              Y.N.Q.w X = new N.Q.w();\n            }\n            KQ.uQ.Y.N.Q U = new Y.N.Q();\n            KQ.uQ.Y.N.Q Asl2 = new Q();\n            Y.N.Q.w x = new lF.KQ.uQ.Y.N.Q.w();\n          }\n          KQ hs = new KQ();\n        }\n        class dmd {\n\n          uQ.Y s0 = new lF.KQ.uQ.Y();\n          lF V = new lF();\n        }\n        \n      }\n      class k {\n\n        lF EE = new lF();\n        KQ dC = new KQ();\n      }\n      class C {\n\n        lF.KQ D2Y = new KQ();\n      }\n      static class e1um{}\n      \n    }\n    class c {\n\n      lF.KQ.c R = new c();\n      lF i = new lF();\n      KQ T = new lF.KQ();\n      lF K4 = new lF();\n    }\n    class oJ7 {\n\n      lF.KQ z4 = new lF.KQ();\n      lF.KQ AUJc = new KQ();\n      KQ W = new KQ();\n      KQ.oJ7 w4e = new oJ7();\n      oJ7 XZn = new lF.KQ.oJ7();\n    }\n    class p{}\n    \n  }\n  class cI {\n\n    lF M = new lF();\n  }\n  class idJG{}\n  \n}"));
        CtType<?> innerClass = launcher.buildModel().getAllTypes().iterator().next();
        assertEquals("class lF {\n    class KQ {\n        class uQ {\n            class Y {\n                class N {\n                    class Q {\n                        class w {\n                            class l {\n                                class g {\n                                    class ra {\n                                        KQ.uQ.Y.N.Q xZ = new Y.N.Q();\n\n                                        uQ.Y.N.Q.w.l.g.ra QHI = new lF.KQ.uQ.Y.N.Q.w.l.g.ra();\n\n                                        Q.w.l f = new KQ.uQ.Y.N.Q.w.l();\n                                    }\n\n                                    class S {}\n\n                                    class Zrd {}\n                                }\n\n                                N H = new lF.KQ.uQ.Y.N();\n\n                                lF v = new lF();\n                            }\n\n                            class O {}\n\n                            Y.N.Q.w X = new N.Q.w();\n                        }\n\n                        KQ.uQ.Y.N.Q U = new Y.N.Q();\n\n                        KQ.uQ.Y.N.Q Asl2 = new Q();\n\n                        Y.N.Q.w x = new lF.KQ.uQ.Y.N.Q.w();\n                    }\n\n                    KQ hs = new KQ();\n                }\n\n                class dmd {\n                    uQ.Y s0 = new lF.KQ.uQ.Y();\n\n                    lF V = new lF();\n                }\n            }\n\n            class k {\n                lF EE = new lF();\n\n                KQ dC = new KQ();\n            }\n\n            class C {\n                lF.KQ D2Y = new KQ();\n            }\n\n            static class e1um {}\n        }\n\n        class c {\n            lF.KQ.c R = new c();\n\n            lF i = new lF();\n\n            KQ T = new lF.KQ();\n\n            lF K4 = new lF();\n        }\n\n        class oJ7 {\n            lF.KQ z4 = new lF.KQ();\n\n            lF.KQ AUJc = new KQ();\n\n            KQ W = new KQ();\n\n            KQ.oJ7 w4e = new oJ7();\n\n            oJ7 XZn = new lF.KQ.oJ7();\n        }\n\n        class p {}\n    }\n\n    class cI {\n        lF M = new lF();\n    }\n\n    class idJG {}\n}", innerClass.toString());
    }

    @Test
    public void test077() {
        Launcher launcher = new Launcher();
        launcher.getEnvironment().setComplianceLevel(17);
        launcher.getEnvironment().setAutoImports(true);
        launcher.getEnvironment().setShouldCompile(true);
        launcher.addInputResource(new VirtualFile("class m {\n  class r {\n    class B {\n      class ZGYzis {\n        class o {\n          class vv {\n            class c4O {\n              class s {\n\n                B.ZGYzis.o gLw = new m.r.B.ZGYzis.o();\n              }\n              class M{}\n              class w{}\n              class k{}\n              \n            }\n            class Y{}\n            class KNb {\n\n              m.r Q = new r();\n            }\n            class Ho {\n\n              ZGYzis.o.vv.Ho BS = new m.r.B.ZGYzis.o.vv.Ho();\n            }\n            \n          }\n          class y {\n\n            r.B C = new r.B();\n            B VSlAl = new m.r.B();\n          }\n          \n        }\n        class q0T {\n\n          ZGYzis.q0T ae = new q0T();\n        }\n        class gqz {\n\n          B.ZGYzis.gqz P1 = new B.ZGYzis.gqz();\n        }\n        m.r.B.ZGYzis.o crf = new B.ZGYzis.o();\n      }\n      static class vy{}\n      class v {\n\n        r.B.v E = new r.B.v();\n        r I = new r();\n      }\n      \n    }\n    class DW {\n\n      m.r.DW zM = new DW();\n      m.r j = new r();\n    }\n    DW HA = new m.r.DW();\n    m.r Rtqs = new m.r();\n  }\n  \n}"));
        CtType<?> innerClass = launcher.buildModel().getAllTypes().iterator().next();
        assertEquals("class m {\n    class r {\n        class B {\n            class ZGYzis {\n                class o {\n                    class vv {\n                        class c4O {\n                            class s {\n                                B.ZGYzis.o gLw = new m.r.B.ZGYzis.o();\n                            }\n\n                            class M {}\n\n                            class w {}\n\n                            class k {}\n                        }\n\n                        class Y {}\n\n                        class KNb {\n                            m.r Q = new r();\n                        }\n\n                        class Ho {\n                            ZGYzis.o.vv.Ho BS = new m.r.B.ZGYzis.o.vv.Ho();\n                        }\n                    }\n\n                    class y {\n                        r.B C = new r.B();\n\n                        B VSlAl = new m.r.B();\n                    }\n                }\n\n                class q0T {\n                    ZGYzis.q0T ae = new q0T();\n                }\n\n                class gqz {\n                    B.ZGYzis.gqz P1 = new B.ZGYzis.gqz();\n                }\n\n                m.r.B.ZGYzis.o crf = new B.ZGYzis.o();\n            }\n\n            static class vy {}\n\n            class v {\n                r.B.v E = new r.B.v();\n\n                r I = new r();\n            }\n        }\n\n        class DW {\n            m.r.DW zM = new DW();\n\n            m.r j = new r();\n        }\n\n        DW HA = new m.r.DW();\n\n        m.r Rtqs = new m.r();\n    }\n}", innerClass.toString());
    }

    @Test
    public void test078() {
        Launcher launcher = new Launcher();
        launcher.getEnvironment().setComplianceLevel(17);
        launcher.getEnvironment().setAutoImports(true);
        launcher.getEnvironment().setShouldCompile(true);
        launcher.addInputResource(new VirtualFile("class U {\n  class M {\n    class z {\n      class Kl {\n        class SP {\n          class TbWc {\n            class q {\n              class gj {\n                class j {\n                  class t {\n\n                    U k = new U();\n                    Kl.SP.TbWc.q.gj.j.t w2L2 = new M.z.Kl.SP.TbWc.q.gj.j.t();\n                    gj.j YeQ = new gj.j();\n                  }\n                  class k8{}\n                  TbWc uh = new M.z.Kl.SP.TbWc();\n                }\n                class Vj {\n\n                  Kl.SP.TbWc E0Q = new U.M.z.Kl.SP.TbWc();\n                }\n                class Y {\n\n                  M.z.Kl.SP.TbWc.q.gj.Y ZZ = new U.M.z.Kl.SP.TbWc.q.gj.Y();\n                }\n                class a {\n\n                  z p = new z();\n                }\n                \n              }\n              class Ak {\n\n                z.Kl.SP.TbWc x = new z.Kl.SP.TbWc();\n              }\n              class n {\n\n                Kl.SP.TbWc.q.n T = new U.M.z.Kl.SP.TbWc.q.n();\n              }\n              \n            }\n            class zD {\n\n              U.M.z.Kl.SP MF = new Kl.SP();\n            }\n            Kl.SP.TbWc g = new M.z.Kl.SP.TbWc();\n            U.M LN = new M();\n          }\n          M.z N3 = new z();\n          U.M baoD5 = new M();\n        }\n        \n      }\n      static class zrJ{}\n      static class F{}\n      U pW = new U();\n    }\n    \n  }\n  class c4 {\n\n    c4 fFP = new U.c4();\n  }\n  class P {\n\n    U.P Q = new U.P();\n  }\n  U.c4 R = new U.c4();\n}"));
        CtType<?> innerClass = launcher.buildModel().getAllTypes().iterator().next();
        assertEquals("class U {\n    class M {\n        class z {\n            class Kl {\n                class SP {\n                    class TbWc {\n                        class q {\n                            class gj {\n                                class j {\n                                    class t {\n                                        U k = new U();\n\n                                        Kl.SP.TbWc.q.gj.j.t w2L2 = new M.z.Kl.SP.TbWc.q.gj.j.t();\n\n                                        gj.j YeQ = new gj.j();\n                                    }\n\n                                    class k8 {}\n\n                                    TbWc uh = new M.z.Kl.SP.TbWc();\n                                }\n\n                                class Vj {\n                                    Kl.SP.TbWc E0Q = new U.M.z.Kl.SP.TbWc();\n                                }\n\n                                class Y {\n                                    M.z.Kl.SP.TbWc.q.gj.Y ZZ = new U.M.z.Kl.SP.TbWc.q.gj.Y();\n                                }\n\n                                class a {\n                                    z p = new z();\n                                }\n                            }\n\n                            class Ak {\n                                z.Kl.SP.TbWc x = new z.Kl.SP.TbWc();\n                            }\n\n                            class n {\n                                Kl.SP.TbWc.q.n T = new U.M.z.Kl.SP.TbWc.q.n();\n                            }\n                        }\n\n                        class zD {\n                            U.M.z.Kl.SP MF = new Kl.SP();\n                        }\n\n                        Kl.SP.TbWc g = new M.z.Kl.SP.TbWc();\n\n                        U.M LN = new M();\n                    }\n\n                    M.z N3 = new z();\n\n                    U.M baoD5 = new M();\n                }\n            }\n\n            static class zrJ {}\n\n            static class F {}\n\n            U pW = new U();\n        }\n    }\n\n    class c4 {\n        c4 fFP = new U.c4();\n    }\n\n    class P {\n        U.P Q = new U.P();\n    }\n\n    U.c4 R = new U.c4();\n}", innerClass.toString());
    }

    @Test
    public void test079() {
        Launcher launcher = new Launcher();
        launcher.getEnvironment().setComplianceLevel(17);
        launcher.getEnvironment().setAutoImports(true);
        launcher.getEnvironment().setShouldCompile(true);
        launcher.addInputResource(new VirtualFile("class e {\n  class Dd {\n    class j {\n      class A {\n        class j1 {\n          class jG {\n            class o_j {\n              class EU {\n                class iE {\n                  class kB {\n                    class h{}\n                    class pqxz{}\n                    \n                  }\n                  \n                }\n                j1 QdZN = new Dd.j.A.j1();\n              }\n              j1 Dk_7Pr = new j.A.j1();\n              e Vy = new e();\n              A.j1.jG EI = new jG();\n              e.Dd.j.A oi = new e.Dd.j.A();\n            }\n            class BA {\n\n              e z5O = new e();\n            }\n            class j3{}\n            e w = new e();\n          }\n          jG U6 = new e.Dd.j.A.j1.jG();\n          e hBn = new e();\n        }\n        \n      }\n      class v {\n\n        e.Dd.j hd = new e.Dd.j();\n      }\n      \n    }\n    static class u2{}\n    class oG {\n\n      e i = new e();\n    }\n    class rV{}\n    e.Dd.u2 u = new e.Dd.u2();\n  }\n  class f {\n\n    e z = new e();\n    e.f p = new e.f();\n    e PA = new e();\n    e lgE = new e();\n  }\n  class tJ {\n\n    tJ iIp8G = new e.tJ();\n    tJ k = new tJ();\n    e.tJ BgtsE = new e.tJ();\n    e vaA = new e();\n  }\n  \n}"));
        CtType<?> innerClass = launcher.buildModel().getAllTypes().iterator().next();
        assertEquals("class e {\n    class Dd {\n        class j {\n            class A {\n                class j1 {\n                    class jG {\n                        class o_j {\n                            class EU {\n                                class iE {\n                                    class kB {\n                                        class h {}\n\n                                        class pqxz {}\n                                    }\n                                }\n\n                                j1 QdZN = new Dd.j.A.j1();\n                            }\n\n                            j1 Dk_7Pr = new j.A.j1();\n\n                            e Vy = new e();\n\n                            A.j1.jG EI = new jG();\n\n                            e.Dd.j.A oi = new e.Dd.j.A();\n                        }\n\n                        class BA {\n                            e z5O = new e();\n                        }\n\n                        class j3 {}\n\n                        e w = new e();\n                    }\n\n                    jG U6 = new e.Dd.j.A.j1.jG();\n\n                    e hBn = new e();\n                }\n            }\n\n            class v {\n                e.Dd.j hd = new e.Dd.j();\n            }\n        }\n\n        static class u2 {}\n\n        class oG {\n            e i = new e();\n        }\n\n        class rV {}\n\n        e.Dd.u2 u = new e.Dd.u2();\n    }\n\n    class f {\n        e z = new e();\n\n        e.f p = new e.f();\n\n        e PA = new e();\n\n        e lgE = new e();\n    }\n\n    class tJ {\n        tJ iIp8G = new e.tJ();\n\n        tJ k = new tJ();\n\n        e.tJ BgtsE = new e.tJ();\n\n        e vaA = new e();\n    }\n}", innerClass.toString());
    }

    @Test
    public void test080() {
        Launcher launcher = new Launcher();
        launcher.getEnvironment().setComplianceLevel(17);
        launcher.getEnvironment().setAutoImports(true);
        launcher.getEnvironment().setShouldCompile(true);
        launcher.addInputResource(new VirtualFile("class jj {\n  class IL {\n    class cu {\n      class V {\n        class CZ {\n          class H {\n            class Rf {\n              class J {\n                class L {\n\n                  V p = new jj.IL.cu.V();\n                }\n                class e {\n\n                  jj.IL r = new jj.IL();\n                }\n                jj MaTj = new jj();\n                IL.cu.V P = new IL.cu.V();\n                jj h = new jj();\n              }\n              IL.cu.V f = new jj.IL.cu.V();\n            }\n            class jV{}\n            class VY{}\n            class NPk {\n\n              IL.cu.V cy = new jj.IL.cu.V();\n              cu.V.CZ mwDwz = new cu.V.CZ();\n              IL v = new IL();\n              IL.cu.V.CZ HCKE = new cu.V.CZ();\n              jj F = new jj();\n            }\n            \n          }\n          jj.IL uDM = new jj.IL();\n          jj.IL.cu b = new cu();\n          jj.IL d = new jj.IL();\n        }\n        class x {\n\n          jj.IL kTAj = new IL();\n        }\n        class y{}\n        \n      }\n      class tr {\n\n        jj EB = new jj();\n        IL YOL = new IL();\n      }\n      class bd {\n\n        IL ZIq8lR = new jj.IL();\n        cu Z = new jj.IL.cu();\n      }\n      jj HZ9 = new jj();\n      cu m = new jj.IL.cu();\n    }\n    class E {\n\n      jj.IL.E ygX7 = new E();\n    }\n    class z{}\n    class ln {\n\n      IL HI = new jj.IL();\n      IL.ln vG9rg = new IL.ln();\n      IL.ln g = new jj.IL.ln();\n      jj.IL.ln j = new jj.IL.ln();\n      jj QBP = new jj();\n    }\n    \n  }\n  \n}"));
        CtType<?> innerClass = launcher.buildModel().getAllTypes().iterator().next();
        assertEquals("class jj {\n    class IL {\n        class cu {\n            class V {\n                class CZ {\n                    class H {\n                        class Rf {\n                            class J {\n                                class L {\n                                    V p = new jj.IL.cu.V();\n                                }\n\n                                class e {\n                                    jj.IL r = new jj.IL();\n                                }\n\n                                jj MaTj = new jj();\n\n                                IL.cu.V P = new IL.cu.V();\n\n                                jj h = new jj();\n                            }\n\n                            IL.cu.V f = new jj.IL.cu.V();\n                        }\n\n                        class jV {}\n\n                        class VY {}\n\n                        class NPk {\n                            IL.cu.V cy = new jj.IL.cu.V();\n\n                            cu.V.CZ mwDwz = new cu.V.CZ();\n\n                            IL v = new IL();\n\n                            IL.cu.V.CZ HCKE = new cu.V.CZ();\n\n                            jj F = new jj();\n                        }\n                    }\n\n                    jj.IL uDM = new jj.IL();\n\n                    jj.IL.cu b = new cu();\n\n                    jj.IL d = new jj.IL();\n                }\n\n                class x {\n                    jj.IL kTAj = new IL();\n                }\n\n                class y {}\n            }\n\n            class tr {\n                jj EB = new jj();\n\n                IL YOL = new IL();\n            }\n\n            class bd {\n                IL ZIq8lR = new jj.IL();\n\n                cu Z = new jj.IL.cu();\n            }\n\n            jj HZ9 = new jj();\n\n            cu m = new jj.IL.cu();\n        }\n\n        class E {\n            jj.IL.E ygX7 = new E();\n        }\n\n        class z {}\n\n        class ln {\n            IL HI = new jj.IL();\n\n            IL.ln vG9rg = new IL.ln();\n\n            IL.ln g = new jj.IL.ln();\n\n            jj.IL.ln j = new jj.IL.ln();\n\n            jj QBP = new jj();\n        }\n    }\n}", innerClass.toString());
    }

    @Test
    public void test081() {
        Launcher launcher = new Launcher();
        launcher.getEnvironment().setComplianceLevel(17);
        launcher.getEnvironment().setAutoImports(true);
        launcher.getEnvironment().setShouldCompile(true);
        launcher.addInputResource(new VirtualFile("class VT_c {\n  class YxA {\n    class H {\n      class R {\n        class wR_S {\n          class mX {\n            class Wh_S {\n              class Sj {\n                class AM{}\n                class O2 {\n\n                  YxA w = new YxA();\n                }\n                class Tp{}\n                class S{}\n                YxA.H.R.wR_S Zf = new wR_S();\n                VT_c.YxA j = new VT_c.YxA();\n              }\n              \n            }\n            class G{}\n            class A {\n\n              VT_c Vk = new VT_c();\n              VT_c bFGh = new VT_c();\n            }\n            \n          }\n          \n        }\n        class z{}\n        VT_c H4kO = new VT_c();\n        VT_c.YxA s = new VT_c.YxA();\n        VT_c ZRi = new VT_c();\n      }\n      class T {\n\n        VT_c.YxA d = new YxA();\n        VT_c kS = new VT_c();\n      }\n      static class OL{}\n      static class Oc{}\n      \n    }\n    class Fj {\n\n      VT_c.YxA.Fj U = new VT_c.YxA.Fj();\n    }\n    class r{}\n    \n  }\n  class TZ {\n\n    VT_c f = new VT_c();\n    TZ zxzv = new TZ();\n    VT_c Rnl = new VT_c();\n    TZ Y6 = new VT_c.TZ();\n  }\n  YxA n = new VT_c.YxA();\n}"));
        CtType<?> innerClass = launcher.buildModel().getAllTypes().iterator().next();
        assertEquals("class VT_c {\n    class YxA {\n        class H {\n            class R {\n                class wR_S {\n                    class mX {\n                        class Wh_S {\n                            class Sj {\n                                class AM {}\n\n                                class O2 {\n                                    YxA w = new YxA();\n                                }\n\n                                class Tp {}\n\n                                class S {}\n\n                                YxA.H.R.wR_S Zf = new wR_S();\n\n                                VT_c.YxA j = new VT_c.YxA();\n                            }\n                        }\n\n                        class G {}\n\n                        class A {\n                            VT_c Vk = new VT_c();\n\n                            VT_c bFGh = new VT_c();\n                        }\n                    }\n                }\n\n                class z {}\n\n                VT_c H4kO = new VT_c();\n\n                VT_c.YxA s = new VT_c.YxA();\n\n                VT_c ZRi = new VT_c();\n            }\n\n            class T {\n                VT_c.YxA d = new YxA();\n\n                VT_c kS = new VT_c();\n            }\n\n            static class OL {}\n\n            static class Oc {}\n        }\n\n        class Fj {\n            VT_c.YxA.Fj U = new VT_c.YxA.Fj();\n        }\n\n        class r {}\n    }\n\n    class TZ {\n        VT_c f = new VT_c();\n\n        TZ zxzv = new TZ();\n\n        VT_c Rnl = new VT_c();\n\n        TZ Y6 = new VT_c.TZ();\n    }\n\n    YxA n = new VT_c.YxA();\n}", innerClass.toString());
    }

    @Test
    public void test082() {
        Launcher launcher = new Launcher();
        launcher.getEnvironment().setComplianceLevel(17);
        launcher.getEnvironment().setAutoImports(true);
        launcher.getEnvironment().setShouldCompile(true);
        launcher.addInputResource(new VirtualFile("class m {\n  class q {\n    class k {\n      class y {\n        class srcLk {\n          class TSQW {\n            class w {\n              class KuI {\n                class I {\n                  class F2 {\n\n                    m.q.k.y.srcLk V = new k.y.srcLk();\n                    q.k.y.srcLk.TSQW h = new srcLk.TSQW();\n                    y gN = new m.q.k.y();\n                    y.srcLk RO3yIi = new m.q.k.y.srcLk();\n                    k d = new m.q.k();\n                  }\n                  m.q.k NDnx = new q.k();\n                  q.k QZztou = new q.k();\n                }\n                class fHe {\n\n                  k mz4 = new m.q.k();\n                }\n                class lt{}\n                class s {\n\n                  m.q u = new q();\n                }\n                y Tm1 = new y();\n                TSQW CW = new m.q.k.y.srcLk.TSQW();\n              }\n              \n            }\n            class o9 {\n\n              m tNZVq = new m();\n              m jc = new m();\n              m Bkj = new m();\n              k.y.srcLk.TSQW LK = new m.q.k.y.srcLk.TSQW();\n              y.srcLk.TSQW n6 = new m.q.k.y.srcLk.TSQW();\n              q.k.y S = new m.q.k.y();\n            }\n            k.y.srcLk.TSQW x = new m.q.k.y.srcLk.TSQW();\n            srcLk.TSQW BM = new q.k.y.srcLk.TSQW();\n            y SvYZ = new m.q.k.y();\n            k.y.srcLk YkY9y = new srcLk();\n          }\n          m n = new m();\n          k.y.srcLk J = new k.y.srcLk();\n        }\n        static class Q{}\n        class s1 {\n\n          k.y iH = new q.k.y();\n          m.q.k Sx = new m.q.k();\n        }\n        class v1 {\n\n          m.q.k.y.v1 N = new q.k.y.v1();\n          m.q.k.y y44 = new y();\n        }\n        q.k.y F = new k.y();\n      }\n      class UK{}\n      class nzlp {\n\n        m.q.k pS = new k();\n        m.q.k IGcq = new m.q.k();\n      }\n      \n    }\n    class P {\n\n      m cX = new m();\n      m Ux = new m();\n      P bp = new q.P();\n    }\n    m.q.P im = new q.P();\n  }\n  \n}"));
        CtType<?> innerClass = launcher.buildModel().getAllTypes().iterator().next();
        assertEquals("class m {\n    class q {\n        class k {\n            class y {\n                class srcLk {\n                    class TSQW {\n                        class w {\n                            class KuI {\n                                class I {\n                                    class F2 {\n                                        m.q.k.y.srcLk V = new k.y.srcLk();\n\n                                        q.k.y.srcLk.TSQW h = new srcLk.TSQW();\n\n                                        y gN = new m.q.k.y();\n\n                                        y.srcLk RO3yIi = new m.q.k.y.srcLk();\n\n                                        k d = new m.q.k();\n                                    }\n\n                                    m.q.k NDnx = new q.k();\n\n                                    q.k QZztou = new q.k();\n                                }\n\n                                class fHe {\n                                    k mz4 = new m.q.k();\n                                }\n\n                                class lt {}\n\n                                class s {\n                                    m.q u = new q();\n                                }\n\n                                y Tm1 = new y();\n\n                                TSQW CW = new m.q.k.y.srcLk.TSQW();\n                            }\n                        }\n\n                        class o9 {\n                            m tNZVq = new m();\n\n                            m jc = new m();\n\n                            m Bkj = new m();\n\n                            k.y.srcLk.TSQW LK = new m.q.k.y.srcLk.TSQW();\n\n                            y.srcLk.TSQW n6 = new m.q.k.y.srcLk.TSQW();\n\n                            q.k.y S = new m.q.k.y();\n                        }\n\n                        k.y.srcLk.TSQW x = new m.q.k.y.srcLk.TSQW();\n\n                        srcLk.TSQW BM = new q.k.y.srcLk.TSQW();\n\n                        y SvYZ = new m.q.k.y();\n\n                        k.y.srcLk YkY9y = new srcLk();\n                    }\n\n                    m n = new m();\n\n                    k.y.srcLk J = new k.y.srcLk();\n                }\n\n                static class Q {}\n\n                class s1 {\n                    k.y iH = new q.k.y();\n\n                    m.q.k Sx = new m.q.k();\n                }\n\n                class v1 {\n                    m.q.k.y.v1 N = new q.k.y.v1();\n\n                    m.q.k.y y44 = new y();\n                }\n\n                q.k.y F = new k.y();\n            }\n\n            class UK {}\n\n            class nzlp {\n                m.q.k pS = new k();\n\n                m.q.k IGcq = new m.q.k();\n            }\n        }\n\n        class P {\n            m cX = new m();\n\n            m Ux = new m();\n\n            P bp = new q.P();\n        }\n\n        m.q.P im = new q.P();\n    }\n}", innerClass.toString());
    }

    @Test
    public void test083() {
        Launcher launcher = new Launcher();
        launcher.getEnvironment().setComplianceLevel(17);
        launcher.getEnvironment().setAutoImports(true);
        launcher.getEnvironment().setShouldCompile(true);
        launcher.addInputResource(new VirtualFile("class rc {\n  class Z9 {\n    class Q_ZP98 {\n      class m {\n        class iI {\n          class ES {\n            class u {\n              class j {\n                class EUV{}\n                \n              }\n              class r {\n\n                rc.Z9.Q_ZP98 I = new Z9.Q_ZP98();\n                Q_ZP98.m v = new rc.Z9.Q_ZP98.m();\n              }\n              \n            }\n            class wj{}\n            static class Ad{}\n            \n          }\n          class w {\n\n            Q_ZP98 mWf = new Z9.Q_ZP98();\n          }\n          class WpAbK {\n\n            m z = new Z9.Q_ZP98.m();\n            rc H = new rc();\n          }\n          static class bi{}\n          \n        }\n        rc.Z9.Q_ZP98 S2 = new rc.Z9.Q_ZP98();\n        rc R2 = new rc();\n        rc zc = new rc();\n      }\n      static class HzN{}\n      class Tv {\n\n        rc.Z9 yTH0H = new Z9();\n      }\n      rc MGQ = new rc();\n    }\n    \n  }\n  class s {\n\n    s c = new s();\n  }\n  static class K{}\n  class F{}\n  K rX8 = new K();\n}"));
        CtType<?> innerClass = launcher.buildModel().getAllTypes().iterator().next();
        assertEquals("class rc {\n    class Z9 {\n        class Q_ZP98 {\n            class m {\n                class iI {\n                    class ES {\n                        class u {\n                            class j {\n                                class EUV {}\n                            }\n\n                            class r {\n                                rc.Z9.Q_ZP98 I = new Z9.Q_ZP98();\n\n                                Q_ZP98.m v = new rc.Z9.Q_ZP98.m();\n                            }\n                        }\n\n                        class wj {}\n\n                        static class Ad {}\n                    }\n\n                    class w {\n                        Q_ZP98 mWf = new Z9.Q_ZP98();\n                    }\n\n                    class WpAbK {\n                        m z = new Z9.Q_ZP98.m();\n\n                        rc H = new rc();\n                    }\n\n                    static class bi {}\n                }\n\n                rc.Z9.Q_ZP98 S2 = new rc.Z9.Q_ZP98();\n\n                rc R2 = new rc();\n\n                rc zc = new rc();\n            }\n\n            static class HzN {}\n\n            class Tv {\n                rc.Z9 yTH0H = new Z9();\n            }\n\n            rc MGQ = new rc();\n        }\n    }\n\n    class s {\n        s c = new s();\n    }\n\n    static class K {}\n\n    class F {}\n\n    K rX8 = new K();\n}", innerClass.toString());
    }

    @Test
    public void test084() {
        Launcher launcher = new Launcher();
        launcher.getEnvironment().setComplianceLevel(17);
        launcher.getEnvironment().setAutoImports(true);
        launcher.getEnvironment().setShouldCompile(true);
        launcher.addInputResource(new VirtualFile("class G {\n  class gm {\n    class q {\n      class M {\n        class sLq {\n          class Y {\n            class fO {\n              class brA {\n\n                q.M.sLq wm = new gm.q.M.sLq();\n                brA w = new sLq.Y.fO.brA();\n                G.gm.q.M y4 = new gm.q.M();\n              }\n              class H {\n\n                G.gm h = new gm();\n                q.M y = new gm.q.M();\n                G.gm.q.M.sLq.Y.fO.H Pym = new q.M.sLq.Y.fO.H();\n              }\n              \n            }\n            class P {\n\n              q.M wZ = new gm.q.M();\n            }\n            class D{}\n            class Z5 {\n\n              gm.q.M Eyf = new G.gm.q.M();\n              q FIA = new G.gm.q();\n            }\n            \n          }\n          class S{}\n          G.gm.q nu = new gm.q();\n          G.gm uG = new G.gm();\n        }\n        class N{}\n        class r{}\n        class I {\n\n          gm.q.M.I F = new I();\n          q.M.I L1z = new gm.q.M.I();\n        }\n        \n      }\n      G z6 = new G();\n      gm.q EkB = new q();\n    }\n    static class L{}\n    static class TY{}\n    \n  }\n  class NL3n {\n\n    G.NL3n MB = new G.NL3n();\n    NL3n UvmyyK = new G.NL3n();\n    G lHf = new G();\n  }\n  class A {\n\n    G tv = new G();\n    A R = new G.A();\n    G.A D_ = new G.A();\n  }\n  G iS7 = new G();\n  G p = new G();\n  G Fa = new G();\n}"));
        CtType<?> innerClass = launcher.buildModel().getAllTypes().iterator().next();
        assertEquals("class G {\n    class gm {\n        class q {\n            class M {\n                class sLq {\n                    class Y {\n                        class fO {\n                            class brA {\n                                q.M.sLq wm = new gm.q.M.sLq();\n\n                                brA w = new sLq.Y.fO.brA();\n\n                                G.gm.q.M y4 = new gm.q.M();\n                            }\n\n                            class H {\n                                G.gm h = new gm();\n\n                                q.M y = new gm.q.M();\n\n                                G.gm.q.M.sLq.Y.fO.H Pym = new q.M.sLq.Y.fO.H();\n                            }\n                        }\n\n                        class P {\n                            q.M wZ = new gm.q.M();\n                        }\n\n                        class D {}\n\n                        class Z5 {\n                            gm.q.M Eyf = new G.gm.q.M();\n\n                            q FIA = new G.gm.q();\n                        }\n                    }\n\n                    class S {}\n\n                    G.gm.q nu = new gm.q();\n\n                    G.gm uG = new G.gm();\n                }\n\n                class N {}\n\n                class r {}\n\n                class I {\n                    gm.q.M.I F = new I();\n\n                    q.M.I L1z = new gm.q.M.I();\n                }\n            }\n\n            G z6 = new G();\n\n            gm.q EkB = new q();\n        }\n\n        static class L {}\n\n        static class TY {}\n    }\n\n    class NL3n {\n        G.NL3n MB = new G.NL3n();\n\n        NL3n UvmyyK = new G.NL3n();\n\n        G lHf = new G();\n    }\n\n    class A {\n        G tv = new G();\n\n        A R = new G.A();\n\n        G.A D_ = new G.A();\n    }\n\n    G iS7 = new G();\n\n    G p = new G();\n\n    G Fa = new G();\n}", innerClass.toString());
    }

    @Test
    public void test085() {
        Launcher launcher = new Launcher();
        launcher.getEnvironment().setComplianceLevel(17);
        launcher.getEnvironment().setAutoImports(true);
        launcher.getEnvironment().setShouldCompile(true);
        launcher.addInputResource(new VirtualFile("class MabN {\n  class q {\n    class xJ {\n      class LI {\n        class Y {\n          class I {\n            class S {\n              class OboHRC {\n                class vf {\n                  class WBO{}\n                  class U5i{}\n                  class Q{}\n                  class e {\n\n                    e c6F = new q.xJ.LI.Y.I.S.OboHRC.vf.e();\n                  }\n                  Y.I wY = new Y.I();\n                  q.xJ.LI.Y.I.S.OboHRC x = new OboHRC();\n                  MabN.q.xJ E = new xJ();\n                  MabN.q rITItK = new MabN.q();\n                }\n                class KCDdWM {\n\n                  xJ.LI n = new MabN.q.xJ.LI();\n                  MabN W = new MabN();\n                  Y O = new LI.Y();\n                }\n                class P{}\n                \n              }\n              class YM3 {\n\n                MabN.q.xJ RS = new q.xJ();\n              }\n              class es4 {\n\n                q.xJ.LI.Y M = new Y();\n                q Aa = new MabN.q();\n                LI.Y.I v = new q.xJ.LI.Y.I();\n                xJ.LI C = new q.xJ.LI();\n              }\n              class V {\n\n                q h = new q();\n                xJ.LI.Y.I Jc = new LI.Y.I();\n                MabN eJ = new MabN();\n                MabN j = new MabN();\n                xJ.LI.Y B = new LI.Y();\n                LI.Y XDEqm7E = new q.xJ.LI.Y();\n              }\n              Y.I.S vGVJ = new q.xJ.LI.Y.I.S();\n              Y Fl = new MabN.q.xJ.LI.Y();\n            }\n            class GW5{}\n            class U {\n\n              MabN.q.xJ.LI lMaz = new xJ.LI();\n              LI w = new MabN.q.xJ.LI();\n              q.xJ.LI.Y.I HIzU = new xJ.LI.Y.I();\n            }\n            \n          }\n          \n        }\n        class y{}\n        class b {\n\n          MabN.q GM = new MabN.q();\n          MabN.q.xJ zvP = new MabN.q.xJ();\n          MabN D = new MabN();\n          LI.b jV6 = new MabN.q.xJ.LI.b();\n        }\n        MabN u4 = new MabN();\n      }\n      q.xJ Ym = new MabN.q.xJ();\n    }\n    class Hy {\n\n      MabN.q lcP6rs = new q();\n      MabN t = new MabN();\n    }\n    MabN.q DX = new q();\n  }\n  MabN.q Jah = new MabN.q();\n}"));
        CtType<?> innerClass = launcher.buildModel().getAllTypes().iterator().next();
        assertEquals("class MabN {\n    class q {\n        class xJ {\n            class LI {\n                class Y {\n                    class I {\n                        class S {\n                            class OboHRC {\n                                class vf {\n                                    class WBO {}\n\n                                    class U5i {}\n\n                                    class Q {}\n\n                                    class e {\n                                        e c6F = new q.xJ.LI.Y.I.S.OboHRC.vf.e();\n                                    }\n\n                                    Y.I wY = new Y.I();\n\n                                    q.xJ.LI.Y.I.S.OboHRC x = new OboHRC();\n\n                                    MabN.q.xJ E = new xJ();\n\n                                    MabN.q rITItK = new MabN.q();\n                                }\n\n                                class KCDdWM {\n                                    xJ.LI n = new MabN.q.xJ.LI();\n\n                                    MabN W = new MabN();\n\n                                    Y O = new LI.Y();\n                                }\n\n                                class P {}\n                            }\n\n                            class YM3 {\n                                MabN.q.xJ RS = new q.xJ();\n                            }\n\n                            class es4 {\n                                q.xJ.LI.Y M = new Y();\n\n                                q Aa = new MabN.q();\n\n                                LI.Y.I v = new q.xJ.LI.Y.I();\n\n                                xJ.LI C = new q.xJ.LI();\n                            }\n\n                            class V {\n                                q h = new q();\n\n                                xJ.LI.Y.I Jc = new LI.Y.I();\n\n                                MabN eJ = new MabN();\n\n                                MabN j = new MabN();\n\n                                xJ.LI.Y B = new LI.Y();\n\n                                LI.Y XDEqm7E = new q.xJ.LI.Y();\n                            }\n\n                            Y.I.S vGVJ = new q.xJ.LI.Y.I.S();\n\n                            Y Fl = new MabN.q.xJ.LI.Y();\n                        }\n\n                        class GW5 {}\n\n                        class U {\n                            MabN.q.xJ.LI lMaz = new xJ.LI();\n\n                            LI w = new MabN.q.xJ.LI();\n\n                            q.xJ.LI.Y.I HIzU = new xJ.LI.Y.I();\n                        }\n                    }\n                }\n\n                class y {}\n\n                class b {\n                    MabN.q GM = new MabN.q();\n\n                    MabN.q.xJ zvP = new MabN.q.xJ();\n\n                    MabN D = new MabN();\n\n                    LI.b jV6 = new MabN.q.xJ.LI.b();\n                }\n\n                MabN u4 = new MabN();\n            }\n\n            q.xJ Ym = new MabN.q.xJ();\n        }\n\n        class Hy {\n            MabN.q lcP6rs = new q();\n\n            MabN t = new MabN();\n        }\n\n        MabN.q DX = new q();\n    }\n\n    MabN.q Jah = new MabN.q();\n}", innerClass.toString());
    }

    @Test
    public void test086() {
        Launcher launcher = new Launcher();
        launcher.getEnvironment().setComplianceLevel(17);
        launcher.getEnvironment().setAutoImports(true);
        launcher.getEnvironment().setShouldCompile(true);
        launcher.addInputResource(new VirtualFile("class P {\n  class xk {\n    class hEtRRlgRtBcIX {\n      class DkC3 {\n        class N {\n          class GKK {\n            class z {\n              class B2Mazz {\n                class yLy {\n                  class EIF {\n                    class Q {\n\n                      P gH = new P();\n                    }\n                    \n                  }\n                  class qnm{}\n                  class Zps{}\n                  class V1 {\n\n                    xk.hEtRRlgRtBcIX sWr = new P.xk.hEtRRlgRtBcIX();\n                  }\n                  \n                }\n                class Q46zNg{}\n                z.B2Mazz.Q46zNg mi = new B2Mazz.Q46zNg();\n              }\n              \n            }\n            class l {\n\n              xk.hEtRRlgRtBcIX k = new P.xk.hEtRRlgRtBcIX();\n              P MHR = new P();\n            }\n            \n          }\n          class Qz{}\n          \n        }\n        class kGh {\n\n          xk H = new xk();\n        }\n        xk.hEtRRlgRtBcIX.DkC3 q = new P.xk.hEtRRlgRtBcIX.DkC3();\n      }\n      class HNOoP {\n\n        P vkkZ = new P();\n      }\n      class Y {\n\n        xk.hEtRRlgRtBcIX fB = new xk.hEtRRlgRtBcIX();\n      }\n      \n    }\n    \n  }\n  \n}"));
        CtType<?> innerClass = launcher.buildModel().getAllTypes().iterator().next();
        assertEquals("class P {\n    class xk {\n        class hEtRRlgRtBcIX {\n            class DkC3 {\n                class N {\n                    class GKK {\n                        class z {\n                            class B2Mazz {\n                                class yLy {\n                                    class EIF {\n                                        class Q {\n                                            P gH = new P();\n                                        }\n                                    }\n\n                                    class qnm {}\n\n                                    class Zps {}\n\n                                    class V1 {\n                                        xk.hEtRRlgRtBcIX sWr = new P.xk.hEtRRlgRtBcIX();\n                                    }\n                                }\n\n                                class Q46zNg {}\n\n                                z.B2Mazz.Q46zNg mi = new B2Mazz.Q46zNg();\n                            }\n                        }\n\n                        class l {\n                            xk.hEtRRlgRtBcIX k = new P.xk.hEtRRlgRtBcIX();\n\n                            P MHR = new P();\n                        }\n                    }\n\n                    class Qz {}\n                }\n\n                class kGh {\n                    xk H = new xk();\n                }\n\n                xk.hEtRRlgRtBcIX.DkC3 q = new P.xk.hEtRRlgRtBcIX.DkC3();\n            }\n\n            class HNOoP {\n                P vkkZ = new P();\n            }\n\n            class Y {\n                xk.hEtRRlgRtBcIX fB = new xk.hEtRRlgRtBcIX();\n            }\n        }\n    }\n}", innerClass.toString());
    }

    @Test
    public void test087() {
        Launcher launcher = new Launcher();
        launcher.getEnvironment().setComplianceLevel(17);
        launcher.getEnvironment().setAutoImports(true);
        launcher.getEnvironment().setShouldCompile(true);
        launcher.addInputResource(new VirtualFile("class i {\n  class PMwl {\n    class p {\n      class H {\n        class eN {\n          class Dl {\n            class xXE {\n              class K2 {\n                class e0 {\n\n                  i zs = new i();\n                  p.H.eN.Dl.xXE Q = new p.H.eN.Dl.xXE();\n                  p.H.eN.Dl.xXE w = new xXE();\n                  eN.Dl.xXE.K2 MF = new eN.Dl.xXE.K2();\n                  p BBv = new i.PMwl.p();\n                }\n                class t {\n\n                  i r = new i();\n                }\n                class e{}\n                \n              }\n              class Y {\n\n                i.PMwl.p.H.eN.Dl.xXE.Y c = new H.eN.Dl.xXE.Y();\n              }\n              \n            }\n            class k{}\n            class N{}\n            class d{}\n            \n          }\n          class a{}\n          static class nkI4xh{}\n          p.H.eN yO = new PMwl.p.H.eN();\n        }\n        class qjVba {\n\n          i B = new i();\n          PMwl H2 = new PMwl();\n        }\n        static class C1JP{}\n        PMwl Jcy = new PMwl();\n        PMwl fIFo = new i.PMwl();\n        PMwl.p.H.eN I_ = new PMwl.p.H.eN();\n      }\n      class ICwt{}\n      static class xWXYq4I{}\n      class s {\n\n        i w0v7 = new i();\n      }\n      i.PMwl U2 = new i.PMwl();\n      PMwl O = new i.PMwl();\n    }\n    \n  }\n  \n}"));
        CtType<?> innerClass = launcher.buildModel().getAllTypes().iterator().next();
        assertEquals("class i {\n    class PMwl {\n        class p {\n            class H {\n                class eN {\n                    class Dl {\n                        class xXE {\n                            class K2 {\n                                class e0 {\n                                    i zs = new i();\n\n                                    p.H.eN.Dl.xXE Q = new p.H.eN.Dl.xXE();\n\n                                    p.H.eN.Dl.xXE w = new xXE();\n\n                                    eN.Dl.xXE.K2 MF = new eN.Dl.xXE.K2();\n\n                                    p BBv = new i.PMwl.p();\n                                }\n\n                                class t {\n                                    i r = new i();\n                                }\n\n                                class e {}\n                            }\n\n                            class Y {\n                                i.PMwl.p.H.eN.Dl.xXE.Y c = new H.eN.Dl.xXE.Y();\n                            }\n                        }\n\n                        class k {}\n\n                        class N {}\n\n                        class d {}\n                    }\n\n                    class a {}\n\n                    static class nkI4xh {}\n\n                    p.H.eN yO = new PMwl.p.H.eN();\n                }\n\n                class qjVba {\n                    i B = new i();\n\n                    PMwl H2 = new PMwl();\n                }\n\n                static class C1JP {}\n\n                PMwl Jcy = new PMwl();\n\n                PMwl fIFo = new i.PMwl();\n\n                PMwl.p.H.eN I_ = new PMwl.p.H.eN();\n            }\n\n            class ICwt {}\n\n            static class xWXYq4I {}\n\n            class s {\n                i w0v7 = new i();\n            }\n\n            i.PMwl U2 = new i.PMwl();\n\n            PMwl O = new i.PMwl();\n        }\n    }\n}", innerClass.toString());
    }

    @Test
    public void test088() {
        Launcher launcher = new Launcher();
        launcher.getEnvironment().setComplianceLevel(17);
        launcher.getEnvironment().setAutoImports(true);
        launcher.getEnvironment().setShouldCompile(true);
        launcher.addInputResource(new VirtualFile("class T {\n  class N {\n    class o3_F {\n      class h {\n        class LKg {\n          class U {\n            class t {\n              class C9v {\n\n                T m = new T();\n              }\n              class g {\n\n                T yx = new T();\n              }\n              class dh {\n\n                T.N.o3_F K = new T.N.o3_F();\n                dh j = new T.N.o3_F.h.LKg.U.t.dh();\n                LKg TD = new T.N.o3_F.h.LKg();\n                T.N L = new T.N();\n                o3_F RJ = new T.N.o3_F();\n                h C3Z = new N.o3_F.h();\n              }\n              T V = new T();\n              N.o3_F.h.LKg.U.t.g uA = new t.g();\n              T s8 = new T();\n            }\n            class tt {\n\n              N.o3_F.h r = new o3_F.h();\n            }\n            class oYXjJ{}\n            class w {\n\n              T o8 = new T();\n              T.N s = new N();\n            }\n            T td = new T();\n          }\n          class NMM6ib {\n\n            h sDV_wui = new o3_F.h();\n          }\n          T eW = new T();\n        }\n        class aF {\n\n          T v = new T();\n          T.N.o3_F.h RC = new T.N.o3_F.h();\n          T.N xr = new N();\n          o3_F.h Q = new N.o3_F.h();\n        }\n        class F1H{}\n        class F {\n\n          T.N.o3_F.h.F y = new N.o3_F.h.F();\n          h.F CTD5o = new F();\n        }\n        \n      }\n      \n    }\n    class WIYe {\n\n      T f = new T();\n      T z = new T();\n      T.N uci2t = new T.N();\n    }\n    class yH{}\n    \n  }\n  class g5QO4u4 {\n\n    T GE = new T();\n  }\n  class K5r_ {\n\n    K5r_ O = new T.K5r_();\n  }\n  \n}"));
        CtType<?> innerClass = launcher.buildModel().getAllTypes().iterator().next();
        assertEquals("class T {\n    class N {\n        class o3_F {\n            class h {\n                class LKg {\n                    class U {\n                        class t {\n                            class C9v {\n                                T m = new T();\n                            }\n\n                            class g {\n                                T yx = new T();\n                            }\n\n                            class dh {\n                                T.N.o3_F K = new T.N.o3_F();\n\n                                dh j = new T.N.o3_F.h.LKg.U.t.dh();\n\n                                LKg TD = new T.N.o3_F.h.LKg();\n\n                                T.N L = new T.N();\n\n                                o3_F RJ = new T.N.o3_F();\n\n                                h C3Z = new N.o3_F.h();\n                            }\n\n                            T V = new T();\n\n                            N.o3_F.h.LKg.U.t.g uA = new t.g();\n\n                            T s8 = new T();\n                        }\n\n                        class tt {\n                            N.o3_F.h r = new o3_F.h();\n                        }\n\n                        class oYXjJ {}\n\n                        class w {\n                            T o8 = new T();\n\n                            T.N s = new N();\n                        }\n\n                        T td = new T();\n                    }\n\n                    class NMM6ib {\n                        h sDV_wui = new o3_F.h();\n                    }\n\n                    T eW = new T();\n                }\n\n                class aF {\n                    T v = new T();\n\n                    T.N.o3_F.h RC = new T.N.o3_F.h();\n\n                    T.N xr = new N();\n\n                    o3_F.h Q = new N.o3_F.h();\n                }\n\n                class F1H {}\n\n                class F {\n                    T.N.o3_F.h.F y = new N.o3_F.h.F();\n\n                    h.F CTD5o = new F();\n                }\n            }\n        }\n\n        class WIYe {\n            T f = new T();\n\n            T z = new T();\n\n            T.N uci2t = new T.N();\n        }\n\n        class yH {}\n    }\n\n    class g5QO4u4 {\n        T GE = new T();\n    }\n\n    class K5r_ {\n        K5r_ O = new T.K5r_();\n    }\n}", innerClass.toString());
    }

    @Test
    public void test089() {
        Launcher launcher = new Launcher();
        launcher.getEnvironment().setComplianceLevel(17);
        launcher.getEnvironment().setAutoImports(true);
        launcher.getEnvironment().setShouldCompile(true);
        launcher.addInputResource(new VirtualFile("class K3 {\n  class bh {\n    class Ekh {\n      class LM {\n        class K {\n          class w {\n            class I {\n              class A {\n                class yjel {\n\n                  LM.K C = new K();\n                  K3.bh.Ekh.LM.K.w.I Lytk5 = new w.I();\n                  A JdOBO = new I.A();\n                }\n                class rBSU25W {\n\n                  K3 jr = new K3();\n                }\n                bh.Ekh.LM V5EPhm = new bh.Ekh.LM();\n              }\n              class Rc {\n\n                Ekh.LM.K.w.I pi = new LM.K.w.I();\n              }\n              class V {\n\n                Ekh Y = new Ekh();\n                K3.bh.Ekh.LM.K J = new LM.K();\n              }\n              \n            }\n            class opw {\n\n              LM F = new bh.Ekh.LM();\n              Ekh.LM W = new LM();\n            }\n            class a {\n\n              bh.Ekh U = new K3.bh.Ekh();\n              LM T = new Ekh.LM();\n            }\n            Ekh.LM mE = new bh.Ekh.LM();\n            K3.bh.Ekh Di = new K3.bh.Ekh();\n            K3 H = new K3();\n          }\n          class SK6{}\n          K3.bh.Ekh.LM.K.w BMEHR85 = new K3.bh.Ekh.LM.K.w();\n        }\n        class X {\n\n          K3.bh.Ekh qC = new bh.Ekh();\n        }\n        \n      }\n      \n    }\n    class sn7 {\n\n      K3 O = new K3();\n      K3 MY36 = new K3();\n      K3 fT = new K3();\n    }\n    class h{}\n    K3.bh p = new bh();\n    K3 R = new K3();\n  }\n  class B{}\n  static class l{}\n  K3.B u = new K3.B();\n}"));
        CtType<?> innerClass = launcher.buildModel().getAllTypes().iterator().next();
        assertEquals("class K3 {\n    class bh {\n        class Ekh {\n            class LM {\n                class K {\n                    class w {\n                        class I {\n                            class A {\n                                class yjel {\n                                    LM.K C = new K();\n\n                                    K3.bh.Ekh.LM.K.w.I Lytk5 = new w.I();\n\n                                    A JdOBO = new I.A();\n                                }\n\n                                class rBSU25W {\n                                    K3 jr = new K3();\n                                }\n\n                                bh.Ekh.LM V5EPhm = new bh.Ekh.LM();\n                            }\n\n                            class Rc {\n                                Ekh.LM.K.w.I pi = new LM.K.w.I();\n                            }\n\n                            class V {\n                                Ekh Y = new Ekh();\n\n                                K3.bh.Ekh.LM.K J = new LM.K();\n                            }\n                        }\n\n                        class opw {\n                            LM F = new bh.Ekh.LM();\n\n                            Ekh.LM W = new LM();\n                        }\n\n                        class a {\n                            bh.Ekh U = new K3.bh.Ekh();\n\n                            LM T = new Ekh.LM();\n                        }\n\n                        Ekh.LM mE = new bh.Ekh.LM();\n\n                        K3.bh.Ekh Di = new K3.bh.Ekh();\n\n                        K3 H = new K3();\n                    }\n\n                    class SK6 {}\n\n                    K3.bh.Ekh.LM.K.w BMEHR85 = new K3.bh.Ekh.LM.K.w();\n                }\n\n                class X {\n                    K3.bh.Ekh qC = new bh.Ekh();\n                }\n            }\n        }\n\n        class sn7 {\n            K3 O = new K3();\n\n            K3 MY36 = new K3();\n\n            K3 fT = new K3();\n        }\n\n        class h {}\n\n        K3.bh p = new bh();\n\n        K3 R = new K3();\n    }\n\n    class B {}\n\n    static class l {}\n\n    K3.B u = new K3.B();\n}", innerClass.toString());
    }

    @Test
    public void test090() {
        Launcher launcher = new Launcher();
        launcher.getEnvironment().setComplianceLevel(17);
        launcher.getEnvironment().setAutoImports(true);
        launcher.getEnvironment().setShouldCompile(true);
        launcher.addInputResource(new VirtualFile("class i {\n  class EG {\n    class Nl_ {\n      class A {\n        class zqZ {\n          class De4 {\n            class C {\n              class ySSUlzV {\n                class c {\n                  class M{}\n                  class qwC1R {\n\n                    i ADqvH = new i();\n                    C.ySSUlzV.c oI = new A.zqZ.De4.C.ySSUlzV.c();\n                  }\n                  class V {\n\n                    A.zqZ.De4.C.ySSUlzV Ta = new i.EG.Nl_.A.zqZ.De4.C.ySSUlzV();\n                  }\n                  i.EG Fy_ = new i.EG();\n                  De4.C.ySSUlzV Dc = new De4.C.ySSUlzV();\n                  De4.C.ySSUlzV u = new zqZ.De4.C.ySSUlzV();\n                }\n                \n              }\n              class eL{}\n              class MRs6 {\n\n                A.zqZ.De4.C H = new De4.C();\n              }\n              \n            }\n            class K {\n\n              EG.Nl_.A.zqZ AsR = new EG.Nl_.A.zqZ();\n              EG.Nl_ aPUh95 = new Nl_();\n            }\n            class x {\n\n              i.EG y = new i.EG();\n            }\n            EG.Nl_ g = new i.EG.Nl_();\n          }\n          class r_bV{}\n          class Uub{}\n          i Q3xzAj = new i();\n        }\n        class gW {\n\n          i.EG.Nl_ z2T = new Nl_();\n          i Fh = new i();\n        }\n        \n      }\n      class U {\n\n        i.EG.Nl_ tk = new i.EG.Nl_();\n      }\n      i.EG.Nl_ L = new i.EG.Nl_();\n      EG N = new i.EG();\n      i.EG z = new EG();\n      i xBt9 = new i();\n    }\n    class t {\n\n      EG Tj = new EG();\n      i WCchV = new i();\n    }\n    \n  }\n  \n}"));
        CtType<?> innerClass = launcher.buildModel().getAllTypes().iterator().next();
        assertEquals("class i {\n    class EG {\n        class Nl_ {\n            class A {\n                class zqZ {\n                    class De4 {\n                        class C {\n                            class ySSUlzV {\n                                class c {\n                                    class M {}\n\n                                    class qwC1R {\n                                        i ADqvH = new i();\n\n                                        C.ySSUlzV.c oI = new A.zqZ.De4.C.ySSUlzV.c();\n                                    }\n\n                                    class V {\n                                        A.zqZ.De4.C.ySSUlzV Ta = new i.EG.Nl_.A.zqZ.De4.C.ySSUlzV();\n                                    }\n\n                                    i.EG Fy_ = new i.EG();\n\n                                    De4.C.ySSUlzV Dc = new De4.C.ySSUlzV();\n\n                                    De4.C.ySSUlzV u = new zqZ.De4.C.ySSUlzV();\n                                }\n                            }\n\n                            class eL {}\n\n                            class MRs6 {\n                                A.zqZ.De4.C H = new De4.C();\n                            }\n                        }\n\n                        class K {\n                            EG.Nl_.A.zqZ AsR = new EG.Nl_.A.zqZ();\n\n                            EG.Nl_ aPUh95 = new Nl_();\n                        }\n\n                        class x {\n                            i.EG y = new i.EG();\n                        }\n\n                        EG.Nl_ g = new i.EG.Nl_();\n                    }\n\n                    class r_bV {}\n\n                    class Uub {}\n\n                    i Q3xzAj = new i();\n                }\n\n                class gW {\n                    i.EG.Nl_ z2T = new Nl_();\n\n                    i Fh = new i();\n                }\n            }\n\n            class U {\n                i.EG.Nl_ tk = new i.EG.Nl_();\n            }\n\n            i.EG.Nl_ L = new i.EG.Nl_();\n\n            EG N = new i.EG();\n\n            i.EG z = new EG();\n\n            i xBt9 = new i();\n        }\n\n        class t {\n            EG Tj = new EG();\n\n            i WCchV = new i();\n        }\n    }\n}", innerClass.toString());
    }

    @Test
    public void test091() {
        Launcher launcher = new Launcher();
        launcher.getEnvironment().setComplianceLevel(17);
        launcher.getEnvironment().setAutoImports(true);
        launcher.getEnvironment().setShouldCompile(true);
        launcher.addInputResource(new VirtualFile("class P {\n  class SI3 {\n    class Y {\n      class A8Tv {\n        class G {\n          class kM {\n            class XC6 {\n              class a0mE {\n                class C {\n\n                  P Ra = new P();\n                  Y wOV = new SI3.Y();\n                }\n                class p{}\n                \n              }\n              class g {\n\n                Y.A8Tv.G.kM.XC6.g R4aB = new g();\n              }\n              \n            }\n            class NbP5{}\n            class d {\n\n              P.SI3.Y.A8Tv w = new SI3.Y.A8Tv();\n              Y.A8Tv.G.kM.d D = new A8Tv.G.kM.d();\n              P e = new P();\n              kM m31 = new Y.A8Tv.G.kM();\n              SI3.Y YvLmjs = new SI3.Y();\n              P a = new P();\n            }\n            P.SI3.Y.A8Tv.G b = new G();\n          }\n          \n        }\n        class BVa{}\n        class H {\n\n          SI3.Y.A8Tv.H i = new A8Tv.H();\n          A8Tv eIQU = new P.SI3.Y.A8Tv();\n          SI3.Y r = new SI3.Y();\n          SI3.Y.A8Tv.H Lkc25hY = new SI3.Y.A8Tv.H();\n          P.SI3 Xt = new SI3();\n          P L = new P();\n        }\n        class o {\n\n          P.SI3 y = new P.SI3();\n        }\n        P.SI3 m = new SI3();\n        P.SI3 f = new SI3();\n      }\n      SI3.Y Dpuz = new P.SI3.Y();\n    }\n    class k {\n\n      P jQV = new P();\n      P id6 = new P();\n      P.SI3.k BoB8r = new P.SI3.k();\n      P Ca = new P();\n      k fq = new P.SI3.k();\n      SI3 v = new SI3();\n    }\n    P.SI3 S = new SI3();\n  }\n  class Uqd {\n\n    Uqd fxiY = new Uqd();\n    P.Uqd bSHR = new P.Uqd();\n    P.Uqd Pht = new P.Uqd();\n  }\n  static class u{}\n  class h {\n\n    P.h cd7 = new P.h();\n  }\n  h gR = new h();\n}"));
        CtType<?> innerClass = launcher.buildModel().getAllTypes().iterator().next();
        assertEquals("class P {\n    class SI3 {\n        class Y {\n            class A8Tv {\n                class G {\n                    class kM {\n                        class XC6 {\n                            class a0mE {\n                                class C {\n                                    P Ra = new P();\n\n                                    Y wOV = new SI3.Y();\n                                }\n\n                                class p {}\n                            }\n\n                            class g {\n                                Y.A8Tv.G.kM.XC6.g R4aB = new g();\n                            }\n                        }\n\n                        class NbP5 {}\n\n                        class d {\n                            P.SI3.Y.A8Tv w = new SI3.Y.A8Tv();\n\n                            Y.A8Tv.G.kM.d D = new A8Tv.G.kM.d();\n\n                            P e = new P();\n\n                            kM m31 = new Y.A8Tv.G.kM();\n\n                            SI3.Y YvLmjs = new SI3.Y();\n\n                            P a = new P();\n                        }\n\n                        P.SI3.Y.A8Tv.G b = new G();\n                    }\n                }\n\n                class BVa {}\n\n                class H {\n                    SI3.Y.A8Tv.H i = new A8Tv.H();\n\n                    A8Tv eIQU = new P.SI3.Y.A8Tv();\n\n                    SI3.Y r = new SI3.Y();\n\n                    SI3.Y.A8Tv.H Lkc25hY = new SI3.Y.A8Tv.H();\n\n                    P.SI3 Xt = new SI3();\n\n                    P L = new P();\n                }\n\n                class o {\n                    P.SI3 y = new P.SI3();\n                }\n\n                P.SI3 m = new SI3();\n\n                P.SI3 f = new SI3();\n            }\n\n            SI3.Y Dpuz = new P.SI3.Y();\n        }\n\n        class k {\n            P jQV = new P();\n\n            P id6 = new P();\n\n            P.SI3.k BoB8r = new P.SI3.k();\n\n            P Ca = new P();\n\n            k fq = new P.SI3.k();\n\n            SI3 v = new SI3();\n        }\n\n        P.SI3 S = new SI3();\n    }\n\n    class Uqd {\n        Uqd fxiY = new Uqd();\n\n        P.Uqd bSHR = new P.Uqd();\n\n        P.Uqd Pht = new P.Uqd();\n    }\n\n    static class u {}\n\n    class h {\n        P.h cd7 = new P.h();\n    }\n\n    h gR = new h();\n}", innerClass.toString());
    }

    @Test
    public void test092() {
        Launcher launcher = new Launcher();
        launcher.getEnvironment().setComplianceLevel(17);
        launcher.getEnvironment().setAutoImports(true);
        launcher.getEnvironment().setShouldCompile(true);
        launcher.addInputResource(new VirtualFile("class u {\n  class A4ZNtv1 {\n    class iCdUH {\n      class F {\n        class mP {\n          class m {\n            class vP {\n              class Ti9i {\n\n                A4ZNtv1 B8 = new A4ZNtv1();\n              }\n              class j9{}\n              class W{}\n              class S {\n\n                A4ZNtv1 H = new u.A4ZNtv1();\n              }\n              \n            }\n            class L{}\n            u JS = new u();\n          }\n          class q {\n\n            u ae1 = new u();\n            u l = new u();\n            u Q = new u();\n          }\n          \n        }\n        u.A4ZNtv1.iCdUH.F.mP D = new iCdUH.F.mP();\n        u.A4ZNtv1.iCdUH.F.mP f = new A4ZNtv1.iCdUH.F.mP();\n      }\n      static class X{}\n      class AJ {\n\n        u v = new u();\n      }\n      class yr {\n\n        A4ZNtv1.iCdUH.yr B = new A4ZNtv1.iCdUH.yr();\n      }\n      \n    }\n    class N {\n\n      u.A4ZNtv1.N T = new A4ZNtv1.N();\n    }\n    class Qr{}\n    class c {\n\n      A4ZNtv1 x_ = new A4ZNtv1();\n      u.A4ZNtv1 xXc = new u.A4ZNtv1();\n      u suWd = new u();\n      A4ZNtv1 z = new u.A4ZNtv1();\n      u.A4ZNtv1 K = new u.A4ZNtv1();\n    }\n    u Yj1v = new u();\n    u hV = new u();\n  }\n  class LBw {\n\n    LBw H3 = new u.LBw();\n    LBw P27y4P = new u.LBw();\n    u no = new u();\n  }\n  static class bo2yKd{}\n  bo2yKd Z4 = new bo2yKd();\n}"));
        CtType<?> innerClass = launcher.buildModel().getAllTypes().iterator().next();
        assertEquals("class u {\n    class A4ZNtv1 {\n        class iCdUH {\n            class F {\n                class mP {\n                    class m {\n                        class vP {\n                            class Ti9i {\n                                A4ZNtv1 B8 = new A4ZNtv1();\n                            }\n\n                            class j9 {}\n\n                            class W {}\n\n                            class S {\n                                A4ZNtv1 H = new u.A4ZNtv1();\n                            }\n                        }\n\n                        class L {}\n\n                        u JS = new u();\n                    }\n\n                    class q {\n                        u ae1 = new u();\n\n                        u l = new u();\n\n                        u Q = new u();\n                    }\n                }\n\n                u.A4ZNtv1.iCdUH.F.mP D = new iCdUH.F.mP();\n\n                u.A4ZNtv1.iCdUH.F.mP f = new A4ZNtv1.iCdUH.F.mP();\n            }\n\n            static class X {}\n\n            class AJ {\n                u v = new u();\n            }\n\n            class yr {\n                A4ZNtv1.iCdUH.yr B = new A4ZNtv1.iCdUH.yr();\n            }\n        }\n\n        class N {\n            u.A4ZNtv1.N T = new A4ZNtv1.N();\n        }\n\n        class Qr {}\n\n        class c {\n            A4ZNtv1 x_ = new A4ZNtv1();\n\n            u.A4ZNtv1 xXc = new u.A4ZNtv1();\n\n            u suWd = new u();\n\n            A4ZNtv1 z = new u.A4ZNtv1();\n\n            u.A4ZNtv1 K = new u.A4ZNtv1();\n        }\n\n        u Yj1v = new u();\n\n        u hV = new u();\n    }\n\n    class LBw {\n        LBw H3 = new u.LBw();\n\n        LBw P27y4P = new u.LBw();\n\n        u no = new u();\n    }\n\n    static class bo2yKd {}\n\n    bo2yKd Z4 = new bo2yKd();\n}", innerClass.toString());
    }

    @Test
    public void test093() {
        Launcher launcher = new Launcher();
        launcher.getEnvironment().setComplianceLevel(17);
        launcher.getEnvironment().setAutoImports(true);
        launcher.getEnvironment().setShouldCompile(true);
        launcher.addInputResource(new VirtualFile("class r {\n  class mwp {\n    class erJql4e {\n      class Nf3 {\n        class u {\n          class Z {\n            class DLC {\n              class EqC {\n                class A{}\n                class mET{}\n                class M{}\n                \n              }\n              class Nu {\n\n                Z T = new u.Z();\n                Nf3.u fF = new Nf3.u();\n              }\n              class fNlRn{}\n              class G {\n\n                mwp.erJql4e.Nf3.u.Z.DLC oq2TRf = new mwp.erJql4e.Nf3.u.Z.DLC();\n              }\n              r.mwp.erJql4e Q5gL = new mwp.erJql4e();\n              mwp Lb0js = new r.mwp();\n              mwp.erJql4e.Nf3.u.Z.DLC J = new Nf3.u.Z.DLC();\n              DLC EM = new u.Z.DLC();\n            }\n            static class C{}\n            \n          }\n          class oqa5G{}\n          static class t{}\n          u Mj = new Nf3.u();\n        }\n        r r5 = new r();\n        u nOq = new mwp.erJql4e.Nf3.u();\n        r SdZ = new r();\n        erJql4e K_ = new r.mwp.erJql4e();\n      }\n      static class Bd{}\n      static class yN{}\n      \n    }\n    class O {\n\n      mwp Jjei = new mwp();\n    }\n    r.mwp U3Lw = new r.mwp();\n    O mc = new O();\n  }\n  class UR{}\n  \n}"));
        CtType<?> innerClass = launcher.buildModel().getAllTypes().iterator().next();
        assertEquals("class r {\n    class mwp {\n        class erJql4e {\n            class Nf3 {\n                class u {\n                    class Z {\n                        class DLC {\n                            class EqC {\n                                class A {}\n\n                                class mET {}\n\n                                class M {}\n                            }\n\n                            class Nu {\n                                Z T = new u.Z();\n\n                                Nf3.u fF = new Nf3.u();\n                            }\n\n                            class fNlRn {}\n\n                            class G {\n                                mwp.erJql4e.Nf3.u.Z.DLC oq2TRf = new mwp.erJql4e.Nf3.u.Z.DLC();\n                            }\n\n                            r.mwp.erJql4e Q5gL = new mwp.erJql4e();\n\n                            mwp Lb0js = new r.mwp();\n\n                            mwp.erJql4e.Nf3.u.Z.DLC J = new Nf3.u.Z.DLC();\n\n                            DLC EM = new u.Z.DLC();\n                        }\n\n                        static class C {}\n                    }\n\n                    class oqa5G {}\n\n                    static class t {}\n\n                    u Mj = new Nf3.u();\n                }\n\n                r r5 = new r();\n\n                u nOq = new mwp.erJql4e.Nf3.u();\n\n                r SdZ = new r();\n\n                erJql4e K_ = new r.mwp.erJql4e();\n            }\n\n            static class Bd {}\n\n            static class yN {}\n        }\n\n        class O {\n            mwp Jjei = new mwp();\n        }\n\n        r.mwp U3Lw = new r.mwp();\n\n        O mc = new O();\n    }\n\n    class UR {}\n}", innerClass.toString());
    }

    @Test
    public void test094() {
        Launcher launcher = new Launcher();
        launcher.getEnvironment().setComplianceLevel(17);
        launcher.getEnvironment().setAutoImports(true);
        launcher.getEnvironment().setShouldCompile(true);
        launcher.addInputResource(new VirtualFile("class bV {\n  class D {\n    class QYs6 {\n      class Gw {\n        class v {\n          class bM {\n            class z {\n              class b {\n\n                D.QYs6 P = new D.QYs6();\n              }\n              class q{}\n              class VfK{}\n              bV.D vA = new bV.D();\n              D.QYs6 M9 = new QYs6();\n              v.bM.z c0P = new D.QYs6.Gw.v.bM.z();\n            }\n            class B{}\n            class R {\n\n              bV.D.QYs6.Gw.v qsD = new D.QYs6.Gw.v();\n              QYs6 i = new bV.D.QYs6();\n            }\n            \n          }\n          class aaq {\n\n            bV K = new bV();\n          }\n          class X{}\n          v.bM xF = new bM();\n        }\n        class KQg {\n\n          Gw F = new D.QYs6.Gw();\n        }\n        class qy {\n\n          D.QYs6.Gw.qy a = new QYs6.Gw.qy();\n          bV Hs = new bV();\n        }\n        class e{}\n        D.QYs6.Gw s = new bV.D.QYs6.Gw();\n      }\n      QYs6 H = new D.QYs6();\n      Gw wC = new QYs6.Gw();\n      bV.D.QYs6 bn = new bV.D.QYs6();\n    }\n    class G9e2{}\n    class Sz{}\n    class SF{}\n    \n  }\n  static class V{}\n  \n}"));
        CtType<?> innerClass = launcher.buildModel().getAllTypes().iterator().next();
        assertEquals("class bV {\n    class D {\n        class QYs6 {\n            class Gw {\n                class v {\n                    class bM {\n                        class z {\n                            class b {\n                                D.QYs6 P = new D.QYs6();\n                            }\n\n                            class q {}\n\n                            class VfK {}\n\n                            bV.D vA = new bV.D();\n\n                            D.QYs6 M9 = new QYs6();\n\n                            v.bM.z c0P = new D.QYs6.Gw.v.bM.z();\n                        }\n\n                        class B {}\n\n                        class R {\n                            bV.D.QYs6.Gw.v qsD = new D.QYs6.Gw.v();\n\n                            QYs6 i = new bV.D.QYs6();\n                        }\n                    }\n\n                    class aaq {\n                        bV K = new bV();\n                    }\n\n                    class X {}\n\n                    v.bM xF = new bM();\n                }\n\n                class KQg {\n                    Gw F = new D.QYs6.Gw();\n                }\n\n                class qy {\n                    D.QYs6.Gw.qy a = new QYs6.Gw.qy();\n\n                    bV Hs = new bV();\n                }\n\n                class e {}\n\n                D.QYs6.Gw s = new bV.D.QYs6.Gw();\n            }\n\n            QYs6 H = new D.QYs6();\n\n            Gw wC = new QYs6.Gw();\n\n            bV.D.QYs6 bn = new bV.D.QYs6();\n        }\n\n        class G9e2 {}\n\n        class Sz {}\n\n        class SF {}\n    }\n\n    static class V {}\n}", innerClass.toString());
    }

    @Test
    public void test095() {
        Launcher launcher = new Launcher();
        launcher.getEnvironment().setComplianceLevel(17);
        launcher.getEnvironment().setAutoImports(true);
        launcher.getEnvironment().setShouldCompile(true);
        launcher.addInputResource(new VirtualFile("class Jn {\n  class Q {\n    class W {\n      class J {\n        class n {\n          class E {\n            class Y9 {\n              class qT {\n                class O {\n                  class X {\n                    class B {\n\n                      n.E.Y9 C1o = new Q.W.J.n.E.Y9();\n                      n N = new Jn.Q.W.J.n();\n                      Jn.Q.W.J i = new Jn.Q.W.J();\n                      X Mh = new Jn.Q.W.J.n.E.Y9.qT.O.X();\n                      n.E.Y9.qT.O.X M = new n.E.Y9.qT.O.X();\n                    }\n                    \n                  }\n                  class VV {\n\n                    Jn.Q.W.J D = new Jn.Q.W.J();\n                    Jn b = new Jn();\n                    Jn.Q cgUb5 = new Jn.Q();\n                    n L2Mpq = new J.n();\n                    qT.O.VV cpssj = new J.n.E.Y9.qT.O.VV();\n                    Jn AAme = new Jn();\n                  }\n                  class T_5 {\n\n                    Q o = new Q();\n                    Jn c = new Jn();\n                  }\n                  \n                }\n                class v{}\n                J.n x = new W.J.n();\n              }\n              class Qi{}\n              class S{}\n              Q.W nAa = new Q.W();\n              E.Y9 a = new E.Y9();\n              Jn Cy = new Jn();\n            }\n            \n          }\n          \n        }\n        class y{}\n        class f{}\n        Q.W Z6 = new Q.W();\n      }\n      Jn jD4 = new Jn();\n      Jn.Q w = new Jn.Q();\n      Q u0 = new Q();\n    }\n    class Zt2{}\n    Q.Zt2 R = new Zt2();\n  }\n  class P {\n\n    P qOPj_ = new Jn.P();\n    P G = new P();\n  }\n  Jn WLl = new Jn();\n  Jn KA = new Jn();\n  Jn.Q FM = new Q();\n  Jn.Q p = new Q();\n  Jn MG = new Jn();\n}"));
        CtType<?> innerClass = launcher.buildModel().getAllTypes().iterator().next();
        assertEquals("class Jn {\n    class Q {\n        class W {\n            class J {\n                class n {\n                    class E {\n                        class Y9 {\n                            class qT {\n                                class O {\n                                    class X {\n                                        class B {\n                                            n.E.Y9 C1o = new Q.W.J.n.E.Y9();\n\n                                            n N = new Jn.Q.W.J.n();\n\n                                            Jn.Q.W.J i = new Jn.Q.W.J();\n\n                                            X Mh = new Jn.Q.W.J.n.E.Y9.qT.O.X();\n\n                                            n.E.Y9.qT.O.X M = new n.E.Y9.qT.O.X();\n                                        }\n                                    }\n\n                                    class VV {\n                                        Jn.Q.W.J D = new Jn.Q.W.J();\n\n                                        Jn b = new Jn();\n\n                                        Jn.Q cgUb5 = new Jn.Q();\n\n                                        n L2Mpq = new J.n();\n\n                                        qT.O.VV cpssj = new J.n.E.Y9.qT.O.VV();\n\n                                        Jn AAme = new Jn();\n                                    }\n\n                                    class T_5 {\n                                        Q o = new Q();\n\n                                        Jn c = new Jn();\n                                    }\n                                }\n\n                                class v {}\n\n                                J.n x = new W.J.n();\n                            }\n\n                            class Qi {}\n\n                            class S {}\n\n                            Q.W nAa = new Q.W();\n\n                            E.Y9 a = new E.Y9();\n\n                            Jn Cy = new Jn();\n                        }\n                    }\n                }\n\n                class y {}\n\n                class f {}\n\n                Q.W Z6 = new Q.W();\n            }\n\n            Jn jD4 = new Jn();\n\n            Jn.Q w = new Jn.Q();\n\n            Q u0 = new Q();\n        }\n\n        class Zt2 {}\n\n        Q.Zt2 R = new Zt2();\n    }\n\n    class P {\n        P qOPj_ = new Jn.P();\n\n        P G = new P();\n    }\n\n    Jn WLl = new Jn();\n\n    Jn KA = new Jn();\n\n    Jn.Q FM = new Q();\n\n    Jn.Q p = new Q();\n\n    Jn MG = new Jn();\n}", innerClass.toString());
    }

    @Test
    public void test096() {
        Launcher launcher = new Launcher();
        launcher.getEnvironment().setComplianceLevel(17);
        launcher.getEnvironment().setAutoImports(true);
        launcher.getEnvironment().setShouldCompile(true);
        launcher.addInputResource(new VirtualFile("class O {\n  class G {\n    class I {\n      class yK {\n        class iMV {\n          class BFk {\n            class H7 {\n              class Q {\n                class l {\n                  class A {\n                    class g {\n                      class c{}\n                      class q {\n\n                        q YERie = new yK.iMV.BFk.H7.Q.l.A.g.q();\n                      }\n                      \n                    }\n                    \n                  }\n                  class Qe {\n\n                    yK.iMV.BFk.H7.Q.l k48k22 = new O.G.I.yK.iMV.BFk.H7.Q.l();\n                    G.I Fd = new G.I();\n                  }\n                  \n                }\n                class PV {\n\n                  G.I.yK.iMV.BFk Z = new iMV.BFk();\n                }\n                O i = new O();\n                Q.PV BJ = new PV();\n              }\n              class V{}\n              class htWa {\n\n                iMV.BFk.H7 JS = new H7();\n              }\n              yK.iMV.BFk.H7.V h = new G.I.yK.iMV.BFk.H7.V();\n            }\n            \n          }\n          \n        }\n        class N{}\n        \n      }\n      O.G zM = new G();\n      I.yK E = new I.yK();\n      G.I.yK ZL = new O.G.I.yK();\n    }\n    class F {\n\n      O.G.F fH = new G.F();\n      O H = new O();\n      F RD = new O.G.F();\n      G.F fh = new F();\n    }\n    class Mj {\n\n      O.G FU = new G();\n      G D = new O.G();\n    }\n    O.G.I m = new I();\n    O L = new O();\n    O.G K = new G();\n    O.G RSbo = new O.G();\n    G.F UL = new F();\n  }\n  class S {\n\n    O d = new O();\n    O AK1hGA = new O();\n    O F0au = new O();\n    O wLq = new O();\n    O.S G9 = new S();\n    O Pd00H = new O();\n  }\n  \n}"));
        CtType<?> innerClass = launcher.buildModel().getAllTypes().iterator().next();
        assertEquals("class O {\n    class G {\n        class I {\n            class yK {\n                class iMV {\n                    class BFk {\n                        class H7 {\n                            class Q {\n                                class l {\n                                    class A {\n                                        class g {\n                                            class c {}\n\n                                            class q {\n                                                q YERie = new yK.iMV.BFk.H7.Q.l.A.g.q();\n                                            }\n                                        }\n                                    }\n\n                                    class Qe {\n                                        yK.iMV.BFk.H7.Q.l k48k22 = new O.G.I.yK.iMV.BFk.H7.Q.l();\n\n                                        G.I Fd = new G.I();\n                                    }\n                                }\n\n                                class PV {\n                                    G.I.yK.iMV.BFk Z = new iMV.BFk();\n                                }\n\n                                O i = new O();\n\n                                Q.PV BJ = new PV();\n                            }\n\n                            class V {}\n\n                            class htWa {\n                                iMV.BFk.H7 JS = new H7();\n                            }\n\n                            yK.iMV.BFk.H7.V h = new G.I.yK.iMV.BFk.H7.V();\n                        }\n                    }\n                }\n\n                class N {}\n            }\n\n            O.G zM = new G();\n\n            I.yK E = new I.yK();\n\n            G.I.yK ZL = new O.G.I.yK();\n        }\n\n        class F {\n            O.G.F fH = new G.F();\n\n            O H = new O();\n\n            F RD = new O.G.F();\n\n            G.F fh = new F();\n        }\n\n        class Mj {\n            O.G FU = new G();\n\n            G D = new O.G();\n        }\n\n        O.G.I m = new I();\n\n        O L = new O();\n\n        O.G K = new G();\n\n        O.G RSbo = new O.G();\n\n        G.F UL = new F();\n    }\n\n    class S {\n        O d = new O();\n\n        O AK1hGA = new O();\n\n        O F0au = new O();\n\n        O wLq = new O();\n\n        O.S G9 = new S();\n\n        O Pd00H = new O();\n    }\n}", innerClass.toString());
    }

    @Test
    public void test097() {
        Launcher launcher = new Launcher();
        launcher.getEnvironment().setComplianceLevel(17);
        launcher.getEnvironment().setAutoImports(true);
        launcher.getEnvironment().setShouldCompile(true);
        launcher.addInputResource(new VirtualFile("class t {\n  class F {\n    class oj5 {\n      class hqi {\n        class f {\n          class c {\n            class GW {\n              class QPk {\n                class Ai {\n                  class E {\n                    class Lq_ {\n\n                      hqi.f.c.GW Bl = new c.GW();\n                    }\n                    class y {\n\n                      oj5 x = new oj5();\n                      F.oj5 z = new oj5();\n                      f.c Y_ = new c();\n                    }\n                    class r {\n\n                      t d2 = new t();\n                    }\n                    QPk.Ai f5 = new F.oj5.hqi.f.c.GW.QPk.Ai();\n                    E.r h = new f.c.GW.QPk.Ai.E.r();\n                  }\n                  F.oj5.hqi Ho = new oj5.hqi();\n                  t.F n = new F();\n                  t P = new t();\n                  oj5.hqi x3 = new oj5.hqi();\n                }\n                \n              }\n              oj5.hqi.f n4 = new f();\n            }\n            class gC {\n\n              t.F.oj5 D = new F.oj5();\n            }\n            class xmZNM {\n\n              t.F.oj5 ANw5JD = new oj5();\n            }\n            c WiN = new hqi.f.c();\n            f.c.GW l = new c.GW();\n            F B = new t.F();\n          }\n          class Hv {\n\n            t.F.oj5.hqi.f.Hv V = new Hv();\n            F.oj5.hqi.f Q = new F.oj5.hqi.f();\n            Hv m283yr = new F.oj5.hqi.f.Hv();\n            F b15Y = new t.F();\n            F.oj5 x5 = new oj5();\n          }\n          class m{}\n          \n        }\n        class Yd {\n\n          F JSRPl = new F();\n          F Uz = new t.F();\n        }\n        class b{}\n        \n      }\n      class C{}\n      class jg {\n\n        t A = new t();\n        t k = new t();\n      }\n      class j {\n\n        oj5.j nuB = new oj5.j();\n      }\n      \n    }\n    t p = new t();\n    t.F zfpY = new t.F();\n    F.oj5 kD7 = new oj5();\n    F hun = new t.F();\n    t sxRBI = new t();\n    oj5 gQ = new oj5();\n    t qP6i = new t();\n    t W1st = new t();\n  }\n  F iFpv1hp5 = new F();\n  t Y = new t();\n}"));
        CtType<?> innerClass = launcher.buildModel().getAllTypes().iterator().next();
        assertEquals("class t {\n    class F {\n        class oj5 {\n            class hqi {\n                class f {\n                    class c {\n                        class GW {\n                            class QPk {\n                                class Ai {\n                                    class E {\n                                        class Lq_ {\n                                            hqi.f.c.GW Bl = new c.GW();\n                                        }\n\n                                        class y {\n                                            oj5 x = new oj5();\n\n                                            F.oj5 z = new oj5();\n\n                                            f.c Y_ = new c();\n                                        }\n\n                                        class r {\n                                            t d2 = new t();\n                                        }\n\n                                        QPk.Ai f5 = new F.oj5.hqi.f.c.GW.QPk.Ai();\n\n                                        E.r h = new f.c.GW.QPk.Ai.E.r();\n                                    }\n\n                                    F.oj5.hqi Ho = new oj5.hqi();\n\n                                    t.F n = new F();\n\n                                    t P = new t();\n\n                                    oj5.hqi x3 = new oj5.hqi();\n                                }\n                            }\n\n                            oj5.hqi.f n4 = new f();\n                        }\n\n                        class gC {\n                            t.F.oj5 D = new F.oj5();\n                        }\n\n                        class xmZNM {\n                            t.F.oj5 ANw5JD = new oj5();\n                        }\n\n                        c WiN = new hqi.f.c();\n\n                        f.c.GW l = new c.GW();\n\n                        F B = new t.F();\n                    }\n\n                    class Hv {\n                        t.F.oj5.hqi.f.Hv V = new Hv();\n\n                        F.oj5.hqi.f Q = new F.oj5.hqi.f();\n\n                        Hv m283yr = new F.oj5.hqi.f.Hv();\n\n                        F b15Y = new t.F();\n\n                        F.oj5 x5 = new oj5();\n                    }\n\n                    class m {}\n                }\n\n                class Yd {\n                    F JSRPl = new F();\n\n                    F Uz = new t.F();\n                }\n\n                class b {}\n            }\n\n            class C {}\n\n            class jg {\n                t A = new t();\n\n                t k = new t();\n            }\n\n            class j {\n                oj5.j nuB = new oj5.j();\n            }\n        }\n\n        t p = new t();\n\n        t.F zfpY = new t.F();\n\n        F.oj5 kD7 = new oj5();\n\n        F hun = new t.F();\n\n        t sxRBI = new t();\n\n        oj5 gQ = new oj5();\n\n        t qP6i = new t();\n\n        t W1st = new t();\n    }\n\n    F iFpv1hp5 = new F();\n\n    t Y = new t();\n}", innerClass.toString());
    }

    @Test
    public void test098() {
        Launcher launcher = new Launcher();
        launcher.getEnvironment().setComplianceLevel(17);
        launcher.getEnvironment().setAutoImports(true);
        launcher.getEnvironment().setShouldCompile(true);
        launcher.addInputResource(new VirtualFile("class zC {\n  class w {\n    class vp {\n      class UEX {\n        class U {\n          class W {\n            class LO {\n              class dtM {\n                class atwY {\n\n                  zC M = new zC();\n                }\n                class qQ {\n\n                  UEX.U.W.LO Ne = new UEX.U.W.LO();\n                }\n                class k1 {\n\n                  vp.UEX.U H = new zC.w.vp.UEX.U();\n                }\n                class x {\n\n                  UEX Vyi = new vp.UEX();\n                }\n                vp.UEX.U.W.LO YL = new LO();\n                w.vp.UEX p = new vp.UEX();\n                UEX K4k = new zC.w.vp.UEX();\n                vp.UEX.U N = new w.vp.UEX.U();\n                W.LO K = new vp.UEX.U.W.LO();\n                zC n = new zC();\n              }\n              class CC {\n\n                vp.UEX S = new zC.w.vp.UEX();\n              }\n              \n            }\n            class F{}\n            \n          }\n          class gm1 {\n\n            zC rI = new zC();\n            zC.w.vp.UEX.U.gm1 JNYE = new vp.UEX.U.gm1();\n            vp.UEX p7b = new zC.w.vp.UEX();\n          }\n          class dw4trt{}\n          W t = new vp.UEX.U.W();\n          zC.w.vp r = new vp();\n          vp br = new w.vp();\n        }\n        \n      }\n      class h {\n\n        w.vp V7 = new w.vp();\n      }\n      zC.w.vp.h Xzo_gk = new h();\n      vp.UEX mR = new UEX();\n      zC b = new zC();\n      h wiL = new h();\n      UEX Z = new vp.UEX();\n      zC.w.vp.h kD6V = new w.vp.h();\n    }\n    class E {\n\n      w.E Gx = new zC.w.E();\n      w.E C = new zC.w.E();\n      zC o = new zC();\n    }\n    class v{}\n    \n  }\n  class lP {\n\n    zC.lP Hl3o = new lP();\n  }\n  zC.lP rr = new zC.lP();\n  lP PJ = new zC.lP();\n}"));
        CtType<?> innerClass = launcher.buildModel().getAllTypes().iterator().next();
        assertEquals("class zC {\n    class w {\n        class vp {\n            class UEX {\n                class U {\n                    class W {\n                        class LO {\n                            class dtM {\n                                class atwY {\n                                    zC M = new zC();\n                                }\n\n                                class qQ {\n                                    UEX.U.W.LO Ne = new UEX.U.W.LO();\n                                }\n\n                                class k1 {\n                                    vp.UEX.U H = new zC.w.vp.UEX.U();\n                                }\n\n                                class x {\n                                    UEX Vyi = new vp.UEX();\n                                }\n\n                                vp.UEX.U.W.LO YL = new LO();\n\n                                w.vp.UEX p = new vp.UEX();\n\n                                UEX K4k = new zC.w.vp.UEX();\n\n                                vp.UEX.U N = new w.vp.UEX.U();\n\n                                W.LO K = new vp.UEX.U.W.LO();\n\n                                zC n = new zC();\n                            }\n\n                            class CC {\n                                vp.UEX S = new zC.w.vp.UEX();\n                            }\n                        }\n\n                        class F {}\n                    }\n\n                    class gm1 {\n                        zC rI = new zC();\n\n                        zC.w.vp.UEX.U.gm1 JNYE = new vp.UEX.U.gm1();\n\n                        vp.UEX p7b = new zC.w.vp.UEX();\n                    }\n\n                    class dw4trt {}\n\n                    W t = new vp.UEX.U.W();\n\n                    zC.w.vp r = new vp();\n\n                    vp br = new w.vp();\n                }\n            }\n\n            class h {\n                w.vp V7 = new w.vp();\n            }\n\n            zC.w.vp.h Xzo_gk = new h();\n\n            vp.UEX mR = new UEX();\n\n            zC b = new zC();\n\n            h wiL = new h();\n\n            UEX Z = new vp.UEX();\n\n            zC.w.vp.h kD6V = new w.vp.h();\n        }\n\n        class E {\n            w.E Gx = new zC.w.E();\n\n            w.E C = new zC.w.E();\n\n            zC o = new zC();\n        }\n\n        class v {}\n    }\n\n    class lP {\n        zC.lP Hl3o = new lP();\n    }\n\n    zC.lP rr = new zC.lP();\n\n    lP PJ = new zC.lP();\n}", innerClass.toString());
    }

    @Test
    public void test099() {
        Launcher launcher = new Launcher();
        launcher.getEnvironment().setComplianceLevel(17);
        launcher.getEnvironment().setAutoImports(true);
        launcher.getEnvironment().setShouldCompile(true);
        launcher.addInputResource(new VirtualFile("class m {\n  class ZY0zv {\n    class K {\n      class DV {\n        class z88 {\n          class x {\n            class L5 {\n              class ro {\n\n                K.DV.z88 q = new z88();\n                L5 z = new m.ZY0zv.K.DV.z88.x.L5();\n                ZY0zv.K t = new m.ZY0zv.K();\n              }\n              class Z{}\n              class G{}\n              class Iu {\n\n                ZY0zv.K.DV.z88.x O9 = new DV.z88.x();\n                ZY0zv.K.DV rgGF = new m.ZY0zv.K.DV();\n                m.ZY0zv.K.DV.z88 h = new DV.z88();\n              }\n              K.DV w1 = new m.ZY0zv.K.DV();\n            }\n            class Jv {\n\n              K.DV.z88.x.Jv o = new Jv();\n              ZY0zv.K.DV.z88.x.Jv f = new ZY0zv.K.DV.z88.x.Jv();\n            }\n            class V2{}\n            \n          }\n          class J{}\n          class Y {\n\n            m vJ = new m();\n          }\n          \n        }\n        class X {\n\n          DV bQkyHVb = new m.ZY0zv.K.DV();\n          ZY0zv qh = new m.ZY0zv();\n          m.ZY0zv.K Q = new ZY0zv.K();\n          m.ZY0zv.K.DV Dh = new m.ZY0zv.K.DV();\n          DV.X F = new DV.X();\n        }\n        m w = new m();\n      }\n      \n    }\n    class D{}\n    class Wk {\n\n      ZY0zv N = new m.ZY0zv();\n      ZY0zv k = new ZY0zv();\n    }\n    class fqH {\n\n      ZY0zv.fqH pEKE = new ZY0zv.fqH();\n      m venmk = new m();\n      ZY0zv RL6v6 = new m.ZY0zv();\n      m zja7Y = new m();\n    }\n    m J3w = new m();\n    K j = new ZY0zv.K();\n  }\n  class WX0 {\n\n    m.WX0 kA = new WX0();\n    m.WX0 tF = new m.WX0();\n  }\n  static class i{}\n  class E {\n\n    m S = new m();\n    m jD = new m();\n  }\n  WX0 uB = new m.WX0();\n  m fYMoo = new m();\n  m Zm = new m();\n  m uv = new m();\n}"));
        CtType<?> innerClass = launcher.buildModel().getAllTypes().iterator().next();
        assertEquals("class m {\n    class ZY0zv {\n        class K {\n            class DV {\n                class z88 {\n                    class x {\n                        class L5 {\n                            class ro {\n                                K.DV.z88 q = new z88();\n\n                                L5 z = new m.ZY0zv.K.DV.z88.x.L5();\n\n                                ZY0zv.K t = new m.ZY0zv.K();\n                            }\n\n                            class Z {}\n\n                            class G {}\n\n                            class Iu {\n                                ZY0zv.K.DV.z88.x O9 = new DV.z88.x();\n\n                                ZY0zv.K.DV rgGF = new m.ZY0zv.K.DV();\n\n                                m.ZY0zv.K.DV.z88 h = new DV.z88();\n                            }\n\n                            K.DV w1 = new m.ZY0zv.K.DV();\n                        }\n\n                        class Jv {\n                            K.DV.z88.x.Jv o = new Jv();\n\n                            ZY0zv.K.DV.z88.x.Jv f = new ZY0zv.K.DV.z88.x.Jv();\n                        }\n\n                        class V2 {}\n                    }\n\n                    class J {}\n\n                    class Y {\n                        m vJ = new m();\n                    }\n                }\n\n                class X {\n                    DV bQkyHVb = new m.ZY0zv.K.DV();\n\n                    ZY0zv qh = new m.ZY0zv();\n\n                    m.ZY0zv.K Q = new ZY0zv.K();\n\n                    m.ZY0zv.K.DV Dh = new m.ZY0zv.K.DV();\n\n                    DV.X F = new DV.X();\n                }\n\n                m w = new m();\n            }\n        }\n\n        class D {}\n\n        class Wk {\n            ZY0zv N = new m.ZY0zv();\n\n            ZY0zv k = new ZY0zv();\n        }\n\n        class fqH {\n            ZY0zv.fqH pEKE = new ZY0zv.fqH();\n\n            m venmk = new m();\n\n            ZY0zv RL6v6 = new m.ZY0zv();\n\n            m zja7Y = new m();\n        }\n\n        m J3w = new m();\n\n        K j = new ZY0zv.K();\n    }\n\n    class WX0 {\n        m.WX0 kA = new WX0();\n\n        m.WX0 tF = new m.WX0();\n    }\n\n    static class i {}\n\n    class E {\n        m S = new m();\n\n        m jD = new m();\n    }\n\n    WX0 uB = new m.WX0();\n\n    m fYMoo = new m();\n\n    m Zm = new m();\n\n    m uv = new m();\n}", innerClass.toString());
    }
}

