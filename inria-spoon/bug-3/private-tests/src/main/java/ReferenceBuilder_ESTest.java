import spoon.Launcher;
import spoon.reflect.declaration.CtType;
import spoon.support.compiler.VirtualFile;

import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.assertEquals;

public class ReferenceBuilder_ESTest {
    @Test
    public void test000() {
        Launcher launcher = new Launcher();
        launcher.getEnvironment().setComplianceLevel(17);
        launcher.getEnvironment().setAutoImports(true);
        launcher.getEnvironment().setShouldCompile(true);
        launcher.addInputResource(new VirtualFile("class i {\n  class qWPnb {\n    class SU {\n      class ub {\n        class RB {\n          class F {\n            class Ws {\n              class l {\n                class h {\n                  class G{}\n                  class Qs {\n\n                    i K = new i();\n                  }\n                  class G2p {\n\n                    ub.RB.F a = new SU.ub.RB.F();\n                  }\n                  class zl4{}\n                  qWPnb.SU.ub f = new qWPnb.SU.ub();\n                }\n                class R{}\n                class fGk {\n\n                  i.qWPnb CWrNsk8r = new i.qWPnb();\n                  ub.RB.F hyYgU = new ub.RB.F();\n                  Ws oj9T = new i.qWPnb.SU.ub.RB.F.Ws();\n                  ub H = new qWPnb.SU.ub();\n                  F Btn = new F();\n                  qWPnb VKa = new qWPnb();\n                }\n                \n              }\n              SU Gmn = new SU();\n            }\n            static class zUc2{}\n            SU b3sm = new qWPnb.SU();\n          }\n          static class z{}\n          class o {\n\n            qWPnb.SU.ub Ry = new SU.ub();\n            RB.o X = new ub.RB.o();\n            i.qWPnb.SU.ub.RB.o i6 = new i.qWPnb.SU.ub.RB.o();\n            SU qvp = new SU();\n          }\n          static class I{}\n          \n        }\n        class K6J {\n\n          i.qWPnb.SU.ub.K6J cy = new SU.ub.K6J();\n        }\n        class y{}\n        class V {\n\n          V e = new ub.V();\n          i s = new i();\n        }\n        i ah = new i();\n      }\n      i.qWPnb k = new qWPnb();\n      ub JEn = new SU.ub();\n      SU uue = new SU();\n    }\n    \n  }\n  qWPnb txrWP = new qWPnb();\n  qWPnb uY = new i.qWPnb();\n}"));
        CtType<?> innerClass = launcher.buildModel().getAllTypes().iterator().next();
        assertEquals("class i {\n    class qWPnb {\n        class SU {\n            class ub {\n                class RB {\n                    class F {\n                        class Ws {\n                            class l {\n                                class h {\n                                    class G {}\n\n                                    class Qs {\n                                        i K = new i();\n                                    }\n\n                                    class G2p {\n                                        ub.RB.F a = new SU.ub.RB.F();\n                                    }\n\n                                    class zl4 {}\n\n                                    qWPnb.SU.ub f = new qWPnb.SU.ub();\n                                }\n\n                                class R {}\n\n                                class fGk {\n                                    i.qWPnb CWrNsk8r = new i.qWPnb();\n\n                                    ub.RB.F hyYgU = new ub.RB.F();\n\n                                    Ws oj9T = new i.qWPnb.SU.ub.RB.F.Ws();\n\n                                    ub H = new qWPnb.SU.ub();\n\n                                    F Btn = new F();\n\n                                    qWPnb VKa = new qWPnb();\n                                }\n                            }\n\n                            SU Gmn = new SU();\n                        }\n\n                        static class zUc2 {}\n\n                        SU b3sm = new qWPnb.SU();\n                    }\n\n                    static class z {}\n\n                    class o {\n                        qWPnb.SU.ub Ry = new SU.ub();\n\n                        RB.o X = new ub.RB.o();\n\n                        i.qWPnb.SU.ub.RB.o i6 = new i.qWPnb.SU.ub.RB.o();\n\n                        SU qvp = new SU();\n                    }\n\n                    static class I {}\n                }\n\n                class K6J {\n                    i.qWPnb.SU.ub.K6J cy = new SU.ub.K6J();\n                }\n\n                class y {}\n\n                class V {\n                    V e = new ub.V();\n\n                    i s = new i();\n                }\n\n                i ah = new i();\n            }\n\n            i.qWPnb k = new qWPnb();\n\n            ub JEn = new SU.ub();\n\n            SU uue = new SU();\n        }\n    }\n\n    qWPnb txrWP = new qWPnb();\n\n    qWPnb uY = new i.qWPnb();\n}", innerClass.toString());
    }

    @Test
    public void test001() {
        Launcher launcher = new Launcher();
        launcher.getEnvironment().setComplianceLevel(17);
        launcher.getEnvironment().setAutoImports(true);
        launcher.getEnvironment().setShouldCompile(true);
        launcher.addInputResource(new VirtualFile("class tg {\n  class pZe3eaYE {\n    class e {\n      class Xj {\n        class tG {\n          class i {\n            class I {\n              class X5 {\n                class lIT {\n                  class q {\n\n                    Xj.tG.i.I.X5 v = new I.X5();\n                  }\n                  class R{}\n                  tg k = new tg();\n                }\n                class Zq {\n\n                  e.Xj.tG xS = new tG();\n                }\n                \n              }\n              \n            }\n            class Iz{}\n            \n          }\n          class kb {\n\n            pZe3eaYE.e K = new tg.pZe3eaYE.e();\n          }\n          class A {\n\n            e.Xj G = new Xj();\n          }\n          \n        }\n        class bw{}\n        class Lq {\n\n          e r = new tg.pZe3eaYE.e();\n          tg.pZe3eaYE p = new pZe3eaYE();\n          Xj uN = new pZe3eaYE.e.Xj();\n        }\n        Xj.Lq QpJm = new tg.pZe3eaYE.e.Xj.Lq();\n      }\n      class rzfau {\n\n        pZe3eaYE lIt = new tg.pZe3eaYE();\n        pZe3eaYE.e.rzfau Fh = new e.rzfau();\n      }\n      tg IR = new tg();\n    }\n    class P {\n\n      pZe3eaYE.P ZG = new P();\n    }\n    class O {\n\n      tg wzU = new tg();\n      pZe3eaYE.O n = new pZe3eaYE.O();\n    }\n    \n  }\n  \n}"));
        CtType<?> innerClass = launcher.buildModel().getAllTypes().iterator().next();
        assertEquals("class tg {\n    class pZe3eaYE {\n        class e {\n            class Xj {\n                class tG {\n                    class i {\n                        class I {\n                            class X5 {\n                                class lIT {\n                                    class q {\n                                        Xj.tG.i.I.X5 v = new I.X5();\n                                    }\n\n                                    class R {}\n\n                                    tg k = new tg();\n                                }\n\n                                class Zq {\n                                    e.Xj.tG xS = new tG();\n                                }\n                            }\n                        }\n\n                        class Iz {}\n                    }\n\n                    class kb {\n                        pZe3eaYE.e K = new tg.pZe3eaYE.e();\n                    }\n\n                    class A {\n                        e.Xj G = new Xj();\n                    }\n                }\n\n                class bw {}\n\n                class Lq {\n                    e r = new tg.pZe3eaYE.e();\n\n                    tg.pZe3eaYE p = new pZe3eaYE();\n\n                    Xj uN = new pZe3eaYE.e.Xj();\n                }\n\n                Xj.Lq QpJm = new tg.pZe3eaYE.e.Xj.Lq();\n            }\n\n            class rzfau {\n                pZe3eaYE lIt = new tg.pZe3eaYE();\n\n                pZe3eaYE.e.rzfau Fh = new e.rzfau();\n            }\n\n            tg IR = new tg();\n        }\n\n        class P {\n            pZe3eaYE.P ZG = new P();\n        }\n\n        class O {\n            tg wzU = new tg();\n\n            pZe3eaYE.O n = new pZe3eaYE.O();\n        }\n    }\n}", innerClass.toString());
    }

    @Test
    public void test002() {
        Launcher launcher = new Launcher();
        launcher.getEnvironment().setComplianceLevel(17);
        launcher.getEnvironment().setAutoImports(true);
        launcher.getEnvironment().setShouldCompile(true);
        launcher.addInputResource(new VirtualFile("class V {\n  class D {\n    class SN {\n      class RB {\n        class F {\n          class OU {\n            class Yl {\n              class w {\n                class R {\n\n                  F.OU.Yl.w T9 = new OU.Yl.w();\n                  V B = new V();\n                  D.SN.RB.F O = new V.D.SN.RB.F();\n                }\n                class jqD{}\n                class r{}\n                class eQk{}\n                SN.RB.F.OU.Yl.w XTt = new SN.RB.F.OU.Yl.w();\n                V.D.SN.RB.F oF = new V.D.SN.RB.F();\n              }\n              V.D.SN.RB T = new RB();\n            }\n            class k{}\n            class z {\n\n              SN.RB.F.OU N = new V.D.SN.RB.F.OU();\n              D.SN.RB Ck = new RB();\n              D.SN LC = new SN();\n              V.D.SN.RB.F fZEy = new D.SN.RB.F();\n              D W = new V.D();\n            }\n            class n {\n\n              D.SN.RB KiP = new V.D.SN.RB();\n            }\n            D.SN.RB.F Bbi = new V.D.SN.RB.F();\n          }\n          static class p{}\n          class e{}\n          D.SN Od = new SN();\n        }\n        F d = new F();\n      }\n      \n    }\n    static class QG{}\n    class t{}\n    \n  }\n  class JN {\n\n    V.JN l = new JN();\n    V GxuIQz = new V();\n  }\n  V f3UVYh = new V();\n  V v = new V();\n  V H = new V();\n}"));
        CtType<?> innerClass = launcher.buildModel().getAllTypes().iterator().next();
        assertEquals("class V {\n    class D {\n        class SN {\n            class RB {\n                class F {\n                    class OU {\n                        class Yl {\n                            class w {\n                                class R {\n                                    F.OU.Yl.w T9 = new OU.Yl.w();\n\n                                    V B = new V();\n\n                                    D.SN.RB.F O = new V.D.SN.RB.F();\n                                }\n\n                                class jqD {}\n\n                                class r {}\n\n                                class eQk {}\n\n                                SN.RB.F.OU.Yl.w XTt = new SN.RB.F.OU.Yl.w();\n\n                                V.D.SN.RB.F oF = new V.D.SN.RB.F();\n                            }\n\n                            V.D.SN.RB T = new RB();\n                        }\n\n                        class k {}\n\n                        class z {\n                            SN.RB.F.OU N = new V.D.SN.RB.F.OU();\n\n                            D.SN.RB Ck = new RB();\n\n                            D.SN LC = new SN();\n\n                            V.D.SN.RB.F fZEy = new D.SN.RB.F();\n\n                            D W = new V.D();\n                        }\n\n                        class n {\n                            D.SN.RB KiP = new V.D.SN.RB();\n                        }\n\n                        D.SN.RB.F Bbi = new V.D.SN.RB.F();\n                    }\n\n                    static class p {}\n\n                    class e {}\n\n                    D.SN Od = new SN();\n                }\n\n                F d = new F();\n            }\n        }\n\n        static class QG {}\n\n        class t {}\n    }\n\n    class JN {\n        V.JN l = new JN();\n\n        V GxuIQz = new V();\n    }\n\n    V f3UVYh = new V();\n\n    V v = new V();\n\n    V H = new V();\n}", innerClass.toString());
    }

    @Test
    public void test003() {
        Launcher launcher = new Launcher();
        launcher.getEnvironment().setComplianceLevel(17);
        launcher.getEnvironment().setAutoImports(true);
        launcher.getEnvironment().setShouldCompile(true);
        launcher.addInputResource(new VirtualFile("class L {\n  class s {\n    class HAKt {\n      class AwV {\n        class Hu {\n          class Yer6V {\n            class iF {\n              class YK {\n                class Z {\n\n                  Hu.Yer6V Ze = new s.HAKt.AwV.Hu.Yer6V();\n                }\n                class zM {\n\n                  L.s.HAKt.AwV G = new AwV();\n                  iF.YK.zM w = new L.s.HAKt.AwV.Hu.Yer6V.iF.YK.zM();\n                  HAKt.AwV It = new L.s.HAKt.AwV();\n                }\n                class I {\n\n                  I H8 = new Hu.Yer6V.iF.YK.I();\n                }\n                AwV.Hu i = new HAKt.AwV.Hu();\n              }\n              class bRi{}\n              class l{}\n              L xs = new L();\n            }\n            \n          }\n          class U{}\n          class ZI{}\n          \n        }\n        s.HAKt V = new HAKt();\n      }\n      class TqK {\n\n        L jb = new L();\n      }\n      class f {\n\n        s q = new s();\n        HAKt.f v = new f();\n        f fn = new f();\n        L j8P = new L();\n      }\n      L wP = new L();\n      L.s.HAKt.f RE = new HAKt.f();\n    }\n    class Y {\n\n      L h = new L();\n      s.Y Ey = new s.Y();\n    }\n    class Bx {\n\n      s F = new s();\n    }\n    class Z5F{}\n    \n  }\n  \n}"));
        CtType<?> innerClass = launcher.buildModel().getAllTypes().iterator().next();
        assertEquals("class L {\n    class s {\n        class HAKt {\n            class AwV {\n                class Hu {\n                    class Yer6V {\n                        class iF {\n                            class YK {\n                                class Z {\n                                    Hu.Yer6V Ze = new s.HAKt.AwV.Hu.Yer6V();\n                                }\n\n                                class zM {\n                                    L.s.HAKt.AwV G = new AwV();\n\n                                    iF.YK.zM w = new L.s.HAKt.AwV.Hu.Yer6V.iF.YK.zM();\n\n                                    HAKt.AwV It = new L.s.HAKt.AwV();\n                                }\n\n                                class I {\n                                    I H8 = new Hu.Yer6V.iF.YK.I();\n                                }\n\n                                AwV.Hu i = new HAKt.AwV.Hu();\n                            }\n\n                            class bRi {}\n\n                            class l {}\n\n                            L xs = new L();\n                        }\n                    }\n\n                    class U {}\n\n                    class ZI {}\n                }\n\n                s.HAKt V = new HAKt();\n            }\n\n            class TqK {\n                L jb = new L();\n            }\n\n            class f {\n                s q = new s();\n\n                HAKt.f v = new f();\n\n                f fn = new f();\n\n                L j8P = new L();\n            }\n\n            L wP = new L();\n\n            L.s.HAKt.f RE = new HAKt.f();\n        }\n\n        class Y {\n            L h = new L();\n\n            s.Y Ey = new s.Y();\n        }\n\n        class Bx {\n            s F = new s();\n        }\n\n        class Z5F {}\n    }\n}", innerClass.toString());
    }

    @Test
    public void test004() {
        Launcher launcher = new Launcher();
        launcher.getEnvironment().setComplianceLevel(17);
        launcher.getEnvironment().setAutoImports(true);
        launcher.getEnvironment().setShouldCompile(true);
        launcher.addInputResource(new VirtualFile("class FW {\n  class TI {\n    class o {\n      class AqJ {\n        class I {\n          class AE {\n            class Fx {\n              class vW4 {\n                class IGSW {\n                  class u{}\n                  class Ei {\n\n                    o zK = new TI.o();\n                  }\n                  \n                }\n                class Sf{}\n                class Sl {\n\n                  o.AqJ d = new TI.o.AqJ();\n                  TI.o.AqJ r = new AqJ();\n                  I ETx_ = new o.AqJ.I();\n                }\n                class G{}\n                \n              }\n              class ta{}\n              o.AqJ.I.AE.Fx.ta e = new o.AqJ.I.AE.Fx.ta();\n              AE.Fx.vW4 s2 = new AE.Fx.vW4();\n            }\n            class t {\n\n              TI.o.AqJ.I s = new o.AqJ.I();\n            }\n            class ooO{}\n            AE.Fx y = new TI.o.AqJ.I.AE.Fx();\n          }\n          class vU {\n\n            FW ADE = new FW();\n          }\n          \n        }\n        \n      }\n      static class bwq{}\n      \n    }\n    \n  }\n  static class KegpdfzU{}\n  static class Ra{}\n  \n}"));
        CtType<?> innerClass = launcher.buildModel().getAllTypes().iterator().next();
        assertEquals("class FW {\n    class TI {\n        class o {\n            class AqJ {\n                class I {\n                    class AE {\n                        class Fx {\n                            class vW4 {\n                                class IGSW {\n                                    class u {}\n\n                                    class Ei {\n                                        o zK = new TI.o();\n                                    }\n                                }\n\n                                class Sf {}\n\n                                class Sl {\n                                    o.AqJ d = new TI.o.AqJ();\n\n                                    TI.o.AqJ r = new AqJ();\n\n                                    I ETx_ = new o.AqJ.I();\n                                }\n\n                                class G {}\n                            }\n\n                            class ta {}\n\n                            o.AqJ.I.AE.Fx.ta e = new o.AqJ.I.AE.Fx.ta();\n\n                            AE.Fx.vW4 s2 = new AE.Fx.vW4();\n                        }\n\n                        class t {\n                            TI.o.AqJ.I s = new o.AqJ.I();\n                        }\n\n                        class ooO {}\n\n                        AE.Fx y = new TI.o.AqJ.I.AE.Fx();\n                    }\n\n                    class vU {\n                        FW ADE = new FW();\n                    }\n                }\n            }\n\n            static class bwq {}\n        }\n    }\n\n    static class KegpdfzU {}\n\n    static class Ra {}\n}", innerClass.toString());
    }

    @Test
    public void test005() {
        Launcher launcher = new Launcher();
        launcher.getEnvironment().setComplianceLevel(17);
        launcher.getEnvironment().setAutoImports(true);
        launcher.getEnvironment().setShouldCompile(true);
        launcher.addInputResource(new VirtualFile("class K {\n  class ZSZ {\n    class kc {\n      class q {\n        class NyW {\n          class Z {\n            class dh {\n              class I {\n                class v {\n\n                  K.ZSZ.kc.q lb = new ZSZ.kc.q();\n                  K pDPf = new K();\n                }\n                class h {\n\n                  q.NyW.Z.dh.I.h b = new K.ZSZ.kc.q.NyW.Z.dh.I.h();\n                  q.NyW MJ = new ZSZ.kc.q.NyW();\n                  I.h Zk = new h();\n                }\n                class bn1{}\n                class z {\n\n                  kc.q.NyW l = new ZSZ.kc.q.NyW();\n                }\n                \n              }\n              class g_ {\n\n                ZSZ.kc qr = new ZSZ.kc();\n                ZSZ.kc mL = new K.ZSZ.kc();\n                Z.dh p = new dh();\n              }\n              K.ZSZ Y = new K.ZSZ();\n              q.NyW.Z.dh i = new Z.dh();\n              q sU = new ZSZ.kc.q();\n              kc.q ws0Ts = new ZSZ.kc.q();\n            }\n            class QREP {\n\n              ZSZ.kc N1 = new ZSZ.kc();\n              K.ZSZ G = new K.ZSZ();\n              ZSZ.kc.q.NyW.Z Q = new q.NyW.Z();\n              NyW.Z Uh = new kc.q.NyW.Z();\n            }\n            \n          }\n          class U{}\n          class BIF{}\n          class iyZe {\n\n            K A = new K();\n          }\n          K.ZSZ.kc.q F0 = new ZSZ.kc.q();\n        }\n        K m = new K();\n      }\n      class D {\n\n        kc.D o4 = new ZSZ.kc.D();\n      }\n      class jH{}\n      K.ZSZ.kc.q j = new ZSZ.kc.q();\n    }\n    class bZ {\n\n      bZ Kz = new K.ZSZ.bZ();\n    }\n    static class o{}\n    K.ZSZ bL = new ZSZ();\n  }\n  static class a{}\n  class B{}\n  \n}"));
        CtType<?> innerClass = launcher.buildModel().getAllTypes().iterator().next();
        assertEquals("class K {\n    class ZSZ {\n        class kc {\n            class q {\n                class NyW {\n                    class Z {\n                        class dh {\n                            class I {\n                                class v {\n                                    K.ZSZ.kc.q lb = new ZSZ.kc.q();\n\n                                    K pDPf = new K();\n                                }\n\n                                class h {\n                                    q.NyW.Z.dh.I.h b = new K.ZSZ.kc.q.NyW.Z.dh.I.h();\n\n                                    q.NyW MJ = new ZSZ.kc.q.NyW();\n\n                                    I.h Zk = new h();\n                                }\n\n                                class bn1 {}\n\n                                class z {\n                                    kc.q.NyW l = new ZSZ.kc.q.NyW();\n                                }\n                            }\n\n                            class g_ {\n                                ZSZ.kc qr = new ZSZ.kc();\n\n                                ZSZ.kc mL = new K.ZSZ.kc();\n\n                                Z.dh p = new dh();\n                            }\n\n                            K.ZSZ Y = new K.ZSZ();\n\n                            q.NyW.Z.dh i = new Z.dh();\n\n                            q sU = new ZSZ.kc.q();\n\n                            kc.q ws0Ts = new ZSZ.kc.q();\n                        }\n\n                        class QREP {\n                            ZSZ.kc N1 = new ZSZ.kc();\n\n                            K.ZSZ G = new K.ZSZ();\n\n                            ZSZ.kc.q.NyW.Z Q = new q.NyW.Z();\n\n                            NyW.Z Uh = new kc.q.NyW.Z();\n                        }\n                    }\n\n                    class U {}\n\n                    class BIF {}\n\n                    class iyZe {\n                        K A = new K();\n                    }\n\n                    K.ZSZ.kc.q F0 = new ZSZ.kc.q();\n                }\n\n                K m = new K();\n            }\n\n            class D {\n                kc.D o4 = new ZSZ.kc.D();\n            }\n\n            class jH {}\n\n            K.ZSZ.kc.q j = new ZSZ.kc.q();\n        }\n\n        class bZ {\n            bZ Kz = new K.ZSZ.bZ();\n        }\n\n        static class o {}\n\n        K.ZSZ bL = new ZSZ();\n    }\n\n    static class a {}\n\n    class B {}\n}", innerClass.toString());
    }

    @Test
    public void test006() {
        Launcher launcher = new Launcher();
        launcher.getEnvironment().setComplianceLevel(17);
        launcher.getEnvironment().setAutoImports(true);
        launcher.getEnvironment().setShouldCompile(true);
        launcher.addInputResource(new VirtualFile("class e {\n  class AH {\n    class c {\n      class v {\n        class OeOIG {\n          class k {\n            class nLg3 {\n              class MTOY_s {\n                class riU {\n                  class nUV {\n                    class Ius{}\n                    class i0Vuk{}\n                    e T = new e();\n                    v M = new v();\n                  }\n                  class S{}\n                  AH.c HW = new c();\n                }\n                e D = new e();\n                v jBhY = new c.v();\n                v.OeOIG uL = new e.AH.c.v.OeOIG();\n              }\n              class H_ {\n\n                AH Q = new e.AH();\n              }\n              class oi {\n\n                v.OeOIG v9 = new OeOIG();\n              }\n              \n            }\n            class GrY97{}\n            class U7{}\n            \n          }\n          v mo = new e.AH.c.v();\n        }\n        \n      }\n      class aFq {\n\n        aFq Nt = new AH.c.aFq();\n      }\n      class o {\n\n        AH.c b = new AH.c();\n        c u = new AH.c();\n        c r1f = new c();\n        AH x = new AH();\n        e.AH d = new AH();\n        e U = new e();\n        e IYa = new e();\n        AH.c J = new c();\n      }\n      e cAKOllZYU1os = new e();\n      AH.c.v QdV = new AH.c.v();\n      AH Hp = new AH();\n    }\n    \n  }\n  class lHCF {\n\n    lHCF RB = new lHCF();\n  }\n  class PMR {\n\n    e.PMR pZr = new e.PMR();\n  }\n  \n}"));
        CtType<?> innerClass = launcher.buildModel().getAllTypes().iterator().next();
        assertEquals("class e {\n    class AH {\n        class c {\n            class v {\n                class OeOIG {\n                    class k {\n                        class nLg3 {\n                            class MTOY_s {\n                                class riU {\n                                    class nUV {\n                                        class Ius {}\n\n                                        class i0Vuk {}\n\n                                        e T = new e();\n\n                                        v M = new v();\n                                    }\n\n                                    class S {}\n\n                                    AH.c HW = new c();\n                                }\n\n                                e D = new e();\n\n                                v jBhY = new c.v();\n\n                                v.OeOIG uL = new e.AH.c.v.OeOIG();\n                            }\n\n                            class H_ {\n                                AH Q = new e.AH();\n                            }\n\n                            class oi {\n                                v.OeOIG v9 = new OeOIG();\n                            }\n                        }\n\n                        class GrY97 {}\n\n                        class U7 {}\n                    }\n\n                    v mo = new e.AH.c.v();\n                }\n            }\n\n            class aFq {\n                aFq Nt = new AH.c.aFq();\n            }\n\n            class o {\n                AH.c b = new AH.c();\n\n                c u = new AH.c();\n\n                c r1f = new c();\n\n                AH x = new AH();\n\n                e.AH d = new AH();\n\n                e U = new e();\n\n                e IYa = new e();\n\n                AH.c J = new c();\n            }\n\n            e cAKOllZYU1os = new e();\n\n            AH.c.v QdV = new AH.c.v();\n\n            AH Hp = new AH();\n        }\n    }\n\n    class lHCF {\n        lHCF RB = new lHCF();\n    }\n\n    class PMR {\n        e.PMR pZr = new e.PMR();\n    }\n}", innerClass.toString());
    }

    @Test
    public void test007() {
        Launcher launcher = new Launcher();
        launcher.getEnvironment().setComplianceLevel(17);
        launcher.getEnvironment().setAutoImports(true);
        launcher.getEnvironment().setShouldCompile(true);
        launcher.addInputResource(new VirtualFile("class W {\n  class DuE {\n    class ki {\n      class kOkNw {\n        class r {\n          class eJC {\n            class RRIc {\n              class P97 {\n                class v{}\n                class l {\n\n                  kOkNw.r.eJC xwe = new r.eJC();\n                }\n                class c{}\n                \n              }\n              class N {\n\n                r.eJC E2e = new W.DuE.ki.kOkNw.r.eJC();\n              }\n              DuE.ki.kOkNw.r.eJC q = new ki.kOkNw.r.eJC();\n              RRIc.N ssBNw = new W.DuE.ki.kOkNw.r.eJC.RRIc.N();\n            }\n            class Zp {\n\n              ki RjzV = new DuE.ki();\n            }\n            DuE peGE = new W.DuE();\n          }\n          class tzX8Kg{}\n          class o4kt{}\n          kOkNw L = new DuE.ki.kOkNw();\n          DuE.ki Q = new DuE.ki();\n        }\n        class G {\n\n          W.DuE.ki i1x = new W.DuE.ki();\n        }\n        W.DuE.ki.kOkNw NPn = new DuE.ki.kOkNw();\n      }\n      class I {\n\n        W.DuE.ki vZ = new W.DuE.ki();\n      }\n      I k = new ki.I();\n    }\n    class C {\n\n      W R_BP = new W();\n      DuE x = new DuE();\n      W.DuE.C ICE2 = new W.DuE.C();\n    }\n    static class meo{}\n    \n  }\n  class nFd {\n\n    nFd M4 = new W.nFd();\n  }\n  class p{}\n  class fPvS {\n\n    W CVd = new W();\n    fPvS Gz = new fPvS();\n    W.fPvS ji = new fPvS();\n    W g = new W();\n    W.fPvS JryCTL2 = new fPvS();\n    W.fPvS jIu0R = new fPvS();\n  }\n  \n}"));
        CtType<?> innerClass = launcher.buildModel().getAllTypes().iterator().next();
        assertEquals("class W {\n    class DuE {\n        class ki {\n            class kOkNw {\n                class r {\n                    class eJC {\n                        class RRIc {\n                            class P97 {\n                                class v {}\n\n                                class l {\n                                    kOkNw.r.eJC xwe = new r.eJC();\n                                }\n\n                                class c {}\n                            }\n\n                            class N {\n                                r.eJC E2e = new W.DuE.ki.kOkNw.r.eJC();\n                            }\n\n                            DuE.ki.kOkNw.r.eJC q = new ki.kOkNw.r.eJC();\n\n                            RRIc.N ssBNw = new W.DuE.ki.kOkNw.r.eJC.RRIc.N();\n                        }\n\n                        class Zp {\n                            ki RjzV = new DuE.ki();\n                        }\n\n                        DuE peGE = new W.DuE();\n                    }\n\n                    class tzX8Kg {}\n\n                    class o4kt {}\n\n                    kOkNw L = new DuE.ki.kOkNw();\n\n                    DuE.ki Q = new DuE.ki();\n                }\n\n                class G {\n                    W.DuE.ki i1x = new W.DuE.ki();\n                }\n\n                W.DuE.ki.kOkNw NPn = new DuE.ki.kOkNw();\n            }\n\n            class I {\n                W.DuE.ki vZ = new W.DuE.ki();\n            }\n\n            I k = new ki.I();\n        }\n\n        class C {\n            W R_BP = new W();\n\n            DuE x = new DuE();\n\n            W.DuE.C ICE2 = new W.DuE.C();\n        }\n\n        static class meo {}\n    }\n\n    class nFd {\n        nFd M4 = new W.nFd();\n    }\n\n    class p {}\n\n    class fPvS {\n        W CVd = new W();\n\n        fPvS Gz = new fPvS();\n\n        W.fPvS ji = new fPvS();\n\n        W g = new W();\n\n        W.fPvS JryCTL2 = new fPvS();\n\n        W.fPvS jIu0R = new fPvS();\n    }\n}", innerClass.toString());
    }

    @Test
    public void test008() {
        Launcher launcher = new Launcher();
        launcher.getEnvironment().setComplianceLevel(17);
        launcher.getEnvironment().setAutoImports(true);
        launcher.getEnvironment().setShouldCompile(true);
        launcher.addInputResource(new VirtualFile("class u {\n  class uz {\n    class p {\n      class d {\n        class vbx {\n          class n {\n            class oSXy {\n              class M{}\n              class N{}\n              class o0 {\n\n                u.uz.p SFPIjT5 = new u.uz.p();\n              }\n              d.vbx.n.oSXy.M ZSr = new d.vbx.n.oSXy.M();\n              uz g7 = new uz();\n            }\n            class y3BwA{}\n            class h{}\n            p.d.vbx.n A9 = new d.vbx.n();\n            u.uz bzNg0 = new u.uz();\n          }\n          class U {\n\n            uz.p QA = new u.uz.p();\n          }\n          class l {\n\n            uz.p.d Lh = new p.d();\n            u.uz.p.d.vbx.l j = new d.vbx.l();\n            uz E = new u.uz();\n            d.vbx GI = new u.uz.p.d.vbx();\n          }\n          class ju {\n\n            vbx H1 = new d.vbx();\n            u gg = new u();\n            ju fB = new vbx.ju();\n            uz.p JOM6 = new p();\n            uz.p C = new uz.p();\n            uz s = new uz();\n            d.vbx R = new d.vbx();\n            uz.p.d.vbx.ju bj0 = new p.d.vbx.ju();\n          }\n          p.d.vbx g = new uz.p.d.vbx();\n          u i = new u();\n          p Ya = new u.uz.p();\n        }\n        \n      }\n      class O {\n\n        u.uz.p.O RN = new u.uz.p.O();\n      }\n      \n    }\n    class H {\n\n      uz.H Rkh = new H();\n      uz.H k = new u.uz.H();\n      u S = new u();\n      u.uz.H K = new uz.H();\n      uz.H b9E1 = new u.uz.H();\n      u.uz.H W286l = new H();\n      u Cnj = new u();\n    }\n    \n  }\n  class nk {\n\n    u q = new u();\n  }\n  static class jL{}\n  class v{}\n  \n}"));
        CtType<?> innerClass = launcher.buildModel().getAllTypes().iterator().next();
        assertEquals("class u {\n    class uz {\n        class p {\n            class d {\n                class vbx {\n                    class n {\n                        class oSXy {\n                            class M {}\n\n                            class N {}\n\n                            class o0 {\n                                u.uz.p SFPIjT5 = new u.uz.p();\n                            }\n\n                            d.vbx.n.oSXy.M ZSr = new d.vbx.n.oSXy.M();\n\n                            uz g7 = new uz();\n                        }\n\n                        class y3BwA {}\n\n                        class h {}\n\n                        p.d.vbx.n A9 = new d.vbx.n();\n\n                        u.uz bzNg0 = new u.uz();\n                    }\n\n                    class U {\n                        uz.p QA = new u.uz.p();\n                    }\n\n                    class l {\n                        uz.p.d Lh = new p.d();\n\n                        u.uz.p.d.vbx.l j = new d.vbx.l();\n\n                        uz E = new u.uz();\n\n                        d.vbx GI = new u.uz.p.d.vbx();\n                    }\n\n                    class ju {\n                        vbx H1 = new d.vbx();\n\n                        u gg = new u();\n\n                        ju fB = new vbx.ju();\n\n                        uz.p JOM6 = new p();\n\n                        uz.p C = new uz.p();\n\n                        uz s = new uz();\n\n                        d.vbx R = new d.vbx();\n\n                        uz.p.d.vbx.ju bj0 = new p.d.vbx.ju();\n                    }\n\n                    p.d.vbx g = new uz.p.d.vbx();\n\n                    u i = new u();\n\n                    p Ya = new u.uz.p();\n                }\n            }\n\n            class O {\n                u.uz.p.O RN = new u.uz.p.O();\n            }\n        }\n\n        class H {\n            uz.H Rkh = new H();\n\n            uz.H k = new u.uz.H();\n\n            u S = new u();\n\n            u.uz.H K = new uz.H();\n\n            uz.H b9E1 = new u.uz.H();\n\n            u.uz.H W286l = new H();\n\n            u Cnj = new u();\n        }\n    }\n\n    class nk {\n        u q = new u();\n    }\n\n    static class jL {}\n\n    class v {}\n}", innerClass.toString());
    }

    @Test
    public void test009() {
        Launcher launcher = new Launcher();
        launcher.getEnvironment().setComplianceLevel(17);
        launcher.getEnvironment().setAutoImports(true);
        launcher.getEnvironment().setShouldCompile(true);
        launcher.addInputResource(new VirtualFile("class S {\n  class Y {\n    class iF {\n      class m {\n        class pKFP {\n          class z {\n            class Wz {\n              class BsB {\n                class MMG {\n\n                  m.pKFP.z.Wz.BsB.MMG Mp = new z.Wz.BsB.MMG();\n                }\n                class g8T {\n\n                  pKFP Ta = new iF.m.pKFP();\n                  Y.iF.m kzk = new Y.iF.m();\n                }\n                \n              }\n              class q{}\n              Y.iF.m CY5o = new S.Y.iF.m();\n              S.Y.iF.m.pKFP.z e = new S.Y.iF.m.pKFP.z();\n              S.Y.iF.m.pKFP.z.Wz.q DhpH = new iF.m.pKFP.z.Wz.q();\n            }\n            class RQ {\n\n              Y.iF da = new Y.iF();\n            }\n            class g {\n\n              S.Y C = new Y();\n              S.Y.iF.m.pKFP.z b5M = new Y.iF.m.pKFP.z();\n            }\n            class DgZT {\n\n              S.Y.iF.m.pKFP.z o = new pKFP.z();\n              S.Y.iF.m.pKFP i36 = new Y.iF.m.pKFP();\n            }\n            S y = new S();\n          }\n          class bUX{}\n          class z1 {\n\n            Y i = new Y();\n            S jzA = new S();\n          }\n          class GZMRDNXe{}\n          \n        }\n        Y Ict = new Y();\n      }\n      class LtE{}\n      class u {\n\n        S.Y.iF H = new iF();\n      }\n      class k {\n\n        Y d = new S.Y();\n        S.Y.iF Z8L90D = new S.Y.iF();\n      }\n      \n    }\n    \n  }\n  \n}"));
        CtType<?> innerClass = launcher.buildModel().getAllTypes().iterator().next();
        assertEquals("class S {\n    class Y {\n        class iF {\n            class m {\n                class pKFP {\n                    class z {\n                        class Wz {\n                            class BsB {\n                                class MMG {\n                                    m.pKFP.z.Wz.BsB.MMG Mp = new z.Wz.BsB.MMG();\n                                }\n\n                                class g8T {\n                                    pKFP Ta = new iF.m.pKFP();\n\n                                    Y.iF.m kzk = new Y.iF.m();\n                                }\n                            }\n\n                            class q {}\n\n                            Y.iF.m CY5o = new S.Y.iF.m();\n\n                            S.Y.iF.m.pKFP.z e = new S.Y.iF.m.pKFP.z();\n\n                            S.Y.iF.m.pKFP.z.Wz.q DhpH = new iF.m.pKFP.z.Wz.q();\n                        }\n\n                        class RQ {\n                            Y.iF da = new Y.iF();\n                        }\n\n                        class g {\n                            S.Y C = new Y();\n\n                            S.Y.iF.m.pKFP.z b5M = new Y.iF.m.pKFP.z();\n                        }\n\n                        class DgZT {\n                            S.Y.iF.m.pKFP.z o = new pKFP.z();\n\n                            S.Y.iF.m.pKFP i36 = new Y.iF.m.pKFP();\n                        }\n\n                        S y = new S();\n                    }\n\n                    class bUX {}\n\n                    class z1 {\n                        Y i = new Y();\n\n                        S jzA = new S();\n                    }\n\n                    class GZMRDNXe {}\n                }\n\n                Y Ict = new Y();\n            }\n\n            class LtE {}\n\n            class u {\n                S.Y.iF H = new iF();\n            }\n\n            class k {\n                Y d = new S.Y();\n\n                S.Y.iF Z8L90D = new S.Y.iF();\n            }\n        }\n    }\n}", innerClass.toString());
    }

    @Test
    public void test010() {
        Launcher launcher = new Launcher();
        launcher.getEnvironment().setComplianceLevel(17);
        launcher.getEnvironment().setAutoImports(true);
        launcher.getEnvironment().setShouldCompile(true);
        launcher.addInputResource(new VirtualFile("class eGG {\n  class L88y {\n    class N {\n      class e4 {\n        class h {\n          class Df {\n            class r {\n              class i {\n\n                L88y.N.e4.h.Df.r I = new r();\n              }\n              class B{}\n              class TpyGsKO {\n\n                Df.r s = new e4.h.Df.r();\n              }\n              N.e4.h.Df.r w = new L88y.N.e4.h.Df.r();\n            }\n            \n          }\n          class lVDO{}\n          N kX = new L88y.N();\n          L88y oyeJ = new eGG.L88y();\n          eGG HV = new eGG();\n          eGG y = new eGG();\n          L88y B5 = new L88y();\n          eGG.L88y v = new eGG.L88y();\n        }\n        class C {\n\n          N.e4.C lU = new C();\n        }\n        class Q{}\n        class Kf {\n\n          L88y Xk = new eGG.L88y();\n          e4 bjzLM = new e4();\n        }\n        \n      }\n      class brIT {\n\n        eGG lerDI = new eGG();\n      }\n      class v9V{}\n      \n    }\n    static class bmlzuI{}\n    static class c{}\n    class q{}\n    N b = new L88y.N();\n    L88y S = new eGG.L88y();\n    L88y.N Y8 = new N();\n    q gVK = new q();\n    eGG.L88y V7 = new L88y();\n    eGG.L88y.q L = new q();\n  }\n  class Cc{}\n  class ABv {\n\n    ABv uz = new eGG.ABv();\n  }\n  class E{}\n  \n}"));
        CtType<?> innerClass = launcher.buildModel().getAllTypes().iterator().next();
        assertEquals("class eGG {\n    class L88y {\n        class N {\n            class e4 {\n                class h {\n                    class Df {\n                        class r {\n                            class i {\n                                L88y.N.e4.h.Df.r I = new r();\n                            }\n\n                            class B {}\n\n                            class TpyGsKO {\n                                Df.r s = new e4.h.Df.r();\n                            }\n\n                            N.e4.h.Df.r w = new L88y.N.e4.h.Df.r();\n                        }\n                    }\n\n                    class lVDO {}\n\n                    N kX = new L88y.N();\n\n                    L88y oyeJ = new eGG.L88y();\n\n                    eGG HV = new eGG();\n\n                    eGG y = new eGG();\n\n                    L88y B5 = new L88y();\n\n                    eGG.L88y v = new eGG.L88y();\n                }\n\n                class C {\n                    N.e4.C lU = new C();\n                }\n\n                class Q {}\n\n                class Kf {\n                    L88y Xk = new eGG.L88y();\n\n                    e4 bjzLM = new e4();\n                }\n            }\n\n            class brIT {\n                eGG lerDI = new eGG();\n            }\n\n            class v9V {}\n        }\n\n        static class bmlzuI {}\n\n        static class c {}\n\n        class q {}\n\n        N b = new L88y.N();\n\n        L88y S = new eGG.L88y();\n\n        L88y.N Y8 = new N();\n\n        q gVK = new q();\n\n        eGG.L88y V7 = new L88y();\n\n        eGG.L88y.q L = new q();\n    }\n\n    class Cc {}\n\n    class ABv {\n        ABv uz = new eGG.ABv();\n    }\n\n    class E {}\n}", innerClass.toString());
    }

    @Test
    public void test011() {
        Launcher launcher = new Launcher();
        launcher.getEnvironment().setComplianceLevel(17);
        launcher.getEnvironment().setAutoImports(true);
        launcher.getEnvironment().setShouldCompile(true);
        launcher.addInputResource(new VirtualFile("class i {\n  class M {\n    class zc {\n      class k {\n        class yq {\n          class Q {\n            class D {\n              class p {\n                class o0 {\n                  class L {\n                    class q0d {\n\n                      M.zc.k.yq.Q.D.p Qr = new i.M.zc.k.yq.Q.D.p();\n                    }\n                    \n                  }\n                  \n                }\n                i.M P = new M();\n                Q g = new k.yq.Q();\n              }\n              class y {\n\n                M W = new M();\n                zc NT = new i.M.zc();\n                M.zc vNqs = new zc();\n                M.zc.k y3F = new M.zc.k();\n                M.zc.k.yq.Q.D.y gBh = new yq.Q.D.y();\n              }\n              class N{}\n              class oK_{}\n              Q w = new zc.k.yq.Q();\n            }\n            M.zc Ib = new zc();\n          }\n          zc ex = new i.M.zc();\n          i v = new i();\n        }\n        class kMG {\n\n          zc.k.kMG Xe = new k.kMG();\n        }\n        class K {\n\n          k.K XbH = new zc.k.K();\n          M Baj = new M();\n          k gY = new k();\n          M.zc.k J = new zc.k();\n        }\n        zc tBuc6 = new zc();\n        i.M.zc q = new M.zc();\n        M.zc C = new zc();\n      }\n      class u {\n\n        M f = new i.M();\n      }\n      class e {\n\n        i.M.zc YN = new M.zc();\n        i NB = new i();\n        i b = new i();\n        zc n = new zc();\n        i.M F9 = new i.M();\n      }\n      i.M.zc.u vKn = new M.zc.u();\n    }\n    class Z {\n\n      M.Z l = new Z();\n      i.M Rq = new M();\n      i.M NC = new i.M();\n      i.M Jc = new M();\n    }\n    class a{}\n    M qSl = new i.M();\n  }\n  \n}"));
        CtType<?> innerClass = launcher.buildModel().getAllTypes().iterator().next();
        assertEquals("class i {\n    class M {\n        class zc {\n            class k {\n                class yq {\n                    class Q {\n                        class D {\n                            class p {\n                                class o0 {\n                                    class L {\n                                        class q0d {\n                                            M.zc.k.yq.Q.D.p Qr = new i.M.zc.k.yq.Q.D.p();\n                                        }\n                                    }\n                                }\n\n                                i.M P = new M();\n\n                                Q g = new k.yq.Q();\n                            }\n\n                            class y {\n                                M W = new M();\n\n                                zc NT = new i.M.zc();\n\n                                M.zc vNqs = new zc();\n\n                                M.zc.k y3F = new M.zc.k();\n\n                                M.zc.k.yq.Q.D.y gBh = new yq.Q.D.y();\n                            }\n\n                            class N {}\n\n                            class oK_ {}\n\n                            Q w = new zc.k.yq.Q();\n                        }\n\n                        M.zc Ib = new zc();\n                    }\n\n                    zc ex = new i.M.zc();\n\n                    i v = new i();\n                }\n\n                class kMG {\n                    zc.k.kMG Xe = new k.kMG();\n                }\n\n                class K {\n                    k.K XbH = new zc.k.K();\n\n                    M Baj = new M();\n\n                    k gY = new k();\n\n                    M.zc.k J = new zc.k();\n                }\n\n                zc tBuc6 = new zc();\n\n                i.M.zc q = new M.zc();\n\n                M.zc C = new zc();\n            }\n\n            class u {\n                M f = new i.M();\n            }\n\n            class e {\n                i.M.zc YN = new M.zc();\n\n                i NB = new i();\n\n                i b = new i();\n\n                zc n = new zc();\n\n                i.M F9 = new i.M();\n            }\n\n            i.M.zc.u vKn = new M.zc.u();\n        }\n\n        class Z {\n            M.Z l = new Z();\n\n            i.M Rq = new M();\n\n            i.M NC = new i.M();\n\n            i.M Jc = new M();\n        }\n\n        class a {}\n\n        M qSl = new i.M();\n    }\n}", innerClass.toString());
    }

    @Test
    public void test012() {
        Launcher launcher = new Launcher();
        launcher.getEnvironment().setComplianceLevel(17);
        launcher.getEnvironment().setAutoImports(true);
        launcher.getEnvironment().setShouldCompile(true);
        launcher.addInputResource(new VirtualFile("class H {\n  class o {\n    class HN {\n      class d {\n        class PkNIQ {\n          class G {\n            class p {\n              class TOL {\n                class X {\n\n                  HN x = new o.HN();\n                }\n                class I {\n\n                  H.o.HN.d.PkNIQ.G.p Mo = new d.PkNIQ.G.p();\n                  HN SGX = new H.o.HN();\n                  HN.d.PkNIQ.G.p.TOL Gp = new H.o.HN.d.PkNIQ.G.p.TOL();\n                  H.o.HN.d.PkNIQ.G.p.TOL.I x17Re = new H.o.HN.d.PkNIQ.G.p.TOL.I();\n                }\n                H.o MY2MFe = new H.o();\n                HN e = new o.HN();\n              }\n              class gk{}\n              class oPoqqXj {\n\n                o l = new o();\n                o.HN.d Y = new H.o.HN.d();\n              }\n              HN.d.PkNIQ.G.p K = new G.p();\n              PkNIQ.G k = new d.PkNIQ.G();\n              o.HN.d.PkNIQ.G m = new d.PkNIQ.G();\n            }\n            class B2X{}\n            class N62NLyqF3ra {\n\n              o Qo = new H.o();\n            }\n            class R{}\n            o.HN.d t = new H.o.HN.d();\n          }\n          class Y3 {\n\n            HN.d Vk = new d();\n            d J = new HN.d();\n            PkNIQ.Y3 Bp = new Y3();\n            H.o.HN.d.PkNIQ.Y3 u2 = new Y3();\n            o.HN.d.PkNIQ.Y3 jGf = new d.PkNIQ.Y3();\n            d nAE = new HN.d();\n            o E = new o();\n          }\n          \n        }\n        class B{}\n        class M {\n\n          o a = new H.o();\n        }\n        class WB {\n\n          o.HN.d.WB IUI8 = new d.WB();\n          o.HN D = new HN();\n          HN.d sw9 = new H.o.HN.d();\n          HN.d Pv = new o.HN.d();\n          H TDTZ = new H();\n        }\n        H.o Wr = new H.o();\n      }\n      class s {\n\n        H WH = new H();\n      }\n      o.HN.d JiN = new HN.d();\n    }\n    HN i = new H.o.HN();\n  }\n  \n}"));
        CtType<?> innerClass = launcher.buildModel().getAllTypes().iterator().next();
        assertEquals("class H {\n    class o {\n        class HN {\n            class d {\n                class PkNIQ {\n                    class G {\n                        class p {\n                            class TOL {\n                                class X {\n                                    HN x = new o.HN();\n                                }\n\n                                class I {\n                                    H.o.HN.d.PkNIQ.G.p Mo = new d.PkNIQ.G.p();\n\n                                    HN SGX = new H.o.HN();\n\n                                    HN.d.PkNIQ.G.p.TOL Gp = new H.o.HN.d.PkNIQ.G.p.TOL();\n\n                                    H.o.HN.d.PkNIQ.G.p.TOL.I x17Re = new H.o.HN.d.PkNIQ.G.p.TOL.I();\n                                }\n\n                                H.o MY2MFe = new H.o();\n\n                                HN e = new o.HN();\n                            }\n\n                            class gk {}\n\n                            class oPoqqXj {\n                                o l = new o();\n\n                                o.HN.d Y = new H.o.HN.d();\n                            }\n\n                            HN.d.PkNIQ.G.p K = new G.p();\n\n                            PkNIQ.G k = new d.PkNIQ.G();\n\n                            o.HN.d.PkNIQ.G m = new d.PkNIQ.G();\n                        }\n\n                        class B2X {}\n\n                        class N62NLyqF3ra {\n                            o Qo = new H.o();\n                        }\n\n                        class R {}\n\n                        o.HN.d t = new H.o.HN.d();\n                    }\n\n                    class Y3 {\n                        HN.d Vk = new d();\n\n                        d J = new HN.d();\n\n                        PkNIQ.Y3 Bp = new Y3();\n\n                        H.o.HN.d.PkNIQ.Y3 u2 = new Y3();\n\n                        o.HN.d.PkNIQ.Y3 jGf = new d.PkNIQ.Y3();\n\n                        d nAE = new HN.d();\n\n                        o E = new o();\n                    }\n                }\n\n                class B {}\n\n                class M {\n                    o a = new H.o();\n                }\n\n                class WB {\n                    o.HN.d.WB IUI8 = new d.WB();\n\n                    o.HN D = new HN();\n\n                    HN.d sw9 = new H.o.HN.d();\n\n                    HN.d Pv = new o.HN.d();\n\n                    H TDTZ = new H();\n                }\n\n                H.o Wr = new H.o();\n            }\n\n            class s {\n                H WH = new H();\n            }\n\n            o.HN.d JiN = new HN.d();\n        }\n\n        HN i = new H.o.HN();\n    }\n}", innerClass.toString());
    }

    @Test
    public void test013() {
        Launcher launcher = new Launcher();
        launcher.getEnvironment().setComplianceLevel(17);
        launcher.getEnvironment().setAutoImports(true);
        launcher.getEnvironment().setShouldCompile(true);
        launcher.addInputResource(new VirtualFile("class wj {\n  class e {\n    class TRB {\n      class wEro {\n        class FaDY {\n          class TV {\n            class o {\n              class l {\n\n                wj.e.TRB T = new e.TRB();\n                wj.e.TRB.wEro.FaDY r = new wj.e.TRB.wEro.FaDY();\n                TRB J6Dj9s = new TRB();\n              }\n              class k5{}\n              class w7 {\n\n                wEro x = new wEro();\n                e.TRB.wEro wT = new wj.e.TRB.wEro();\n              }\n              \n            }\n            class Jv {\n\n              wj.e G = new wj.e();\n              wj.e j = new wj.e();\n              TRB g_M = new wj.e.TRB();\n            }\n            class IX{}\n            class B {\n\n              TV t = new TRB.wEro.FaDY.TV();\n            }\n            \n          }\n          class kgl {\n\n            wEro R9 = new TRB.wEro();\n            wj na6n = new wj();\n            e.TRB D = new e.TRB();\n          }\n          \n        }\n        \n      }\n      class F {\n\n        wj U = new wj();\n        e.TRB P = new wj.e.TRB();\n      }\n      class DeOz {\n\n        e.TRB.DeOz Fr5 = new e.TRB.DeOz();\n        wj Sn8 = new wj();\n        DeOz He = new TRB.DeOz();\n      }\n      class LH {\n\n        e tb = new e();\n        e.TRB X = new TRB();\n        LH R = new TRB.LH();\n        wj.e.TRB.LH uR = new wj.e.TRB.LH();\n        e jT = new wj.e();\n        wj ofM = new wj();\n      }\n      \n    }\n    class P5H {\n\n      e s = new wj.e();\n      e Sd = new e();\n    }\n    class w {\n\n      wj h = new wj();\n      e cJ = new wj.e();\n      e.w v = new wj.e.w();\n      wj.e.w iv = new wj.e.w();\n      wj.e b = new e();\n    }\n    class Co {\n\n      e.Co Z = new wj.e.Co();\n    }\n    TRB YF = new wj.e.TRB();\n    e m = new e();\n    e AHf46 = new wj.e();\n  }\n  \n}"));
        CtType<?> innerClass = launcher.buildModel().getAllTypes().iterator().next();
        assertEquals("class wj {\n    class e {\n        class TRB {\n            class wEro {\n                class FaDY {\n                    class TV {\n                        class o {\n                            class l {\n                                wj.e.TRB T = new e.TRB();\n\n                                wj.e.TRB.wEro.FaDY r = new wj.e.TRB.wEro.FaDY();\n\n                                TRB J6Dj9s = new TRB();\n                            }\n\n                            class k5 {}\n\n                            class w7 {\n                                wEro x = new wEro();\n\n                                e.TRB.wEro wT = new wj.e.TRB.wEro();\n                            }\n                        }\n\n                        class Jv {\n                            wj.e G = new wj.e();\n\n                            wj.e j = new wj.e();\n\n                            TRB g_M = new wj.e.TRB();\n                        }\n\n                        class IX {}\n\n                        class B {\n                            TV t = new TRB.wEro.FaDY.TV();\n                        }\n                    }\n\n                    class kgl {\n                        wEro R9 = new TRB.wEro();\n\n                        wj na6n = new wj();\n\n                        e.TRB D = new e.TRB();\n                    }\n                }\n            }\n\n            class F {\n                wj U = new wj();\n\n                e.TRB P = new wj.e.TRB();\n            }\n\n            class DeOz {\n                e.TRB.DeOz Fr5 = new e.TRB.DeOz();\n\n                wj Sn8 = new wj();\n\n                DeOz He = new TRB.DeOz();\n            }\n\n            class LH {\n                e tb = new e();\n\n                e.TRB X = new TRB();\n\n                LH R = new TRB.LH();\n\n                wj.e.TRB.LH uR = new wj.e.TRB.LH();\n\n                e jT = new wj.e();\n\n                wj ofM = new wj();\n            }\n        }\n\n        class P5H {\n            e s = new wj.e();\n\n            e Sd = new e();\n        }\n\n        class w {\n            wj h = new wj();\n\n            e cJ = new wj.e();\n\n            e.w v = new wj.e.w();\n\n            wj.e.w iv = new wj.e.w();\n\n            wj.e b = new e();\n        }\n\n        class Co {\n            e.Co Z = new wj.e.Co();\n        }\n\n        TRB YF = new wj.e.TRB();\n\n        e m = new e();\n\n        e AHf46 = new wj.e();\n    }\n}", innerClass.toString());
    }

    @Test
    public void test014() {
        Launcher launcher = new Launcher();
        launcher.getEnvironment().setComplianceLevel(17);
        launcher.getEnvironment().setAutoImports(true);
        launcher.getEnvironment().setShouldCompile(true);
        launcher.addInputResource(new VirtualFile("class mxMQ8ukfYL {\n  class KGx {\n    class ZR {\n      class al {\n        class n {\n          class SD {\n            class F {\n              class z{}\n              class V9 {\n\n                mxMQ8ukfYL.KGx.ZR.al.n Br = new KGx.ZR.al.n();\n                KGx.ZR wC = new mxMQ8ukfYL.KGx.ZR();\n              }\n              class R {\n\n                mxMQ8ukfYL A = new mxMQ8ukfYL();\n              }\n              class Ei {\n\n                mxMQ8ukfYL.KGx GS = new KGx();\n              }\n              \n            }\n            \n          }\n          class m9 {\n\n            mxMQ8ukfYL W = new mxMQ8ukfYL();\n          }\n          mxMQ8ukfYL.KGx.ZR q = new mxMQ8ukfYL.KGx.ZR();\n        }\n        class N{}\n        mxMQ8ukfYL pRL = new mxMQ8ukfYL();\n      }\n      class C5O {\n\n        KGx r = new mxMQ8ukfYL.KGx();\n        KGx It0 = new KGx();\n      }\n      KGx O = new KGx();\n      mxMQ8ukfYL.KGx.ZR.C5O SxE = new ZR.C5O();\n    }\n    class do{}\n    class s{}\n    class XvM{}\n    \n  }\n  class U {\n\n    mxMQ8ukfYL o1xcv = new mxMQ8ukfYL();\n    U c6 = new U();\n    mxMQ8ukfYL ua = new mxMQ8ukfYL();\n  }\n  class NQ {\n\n    mxMQ8ukfYL.NQ t = new NQ();\n    mxMQ8ukfYL Ml = new mxMQ8ukfYL();\n  }\n  class b{}\n  U X = new U();\n}"));
        CtType<?> innerClass = launcher.buildModel().getAllTypes().iterator().next();
        assertEquals("class mxMQ8ukfYL {\n    class KGx {\n        class ZR {\n            class al {\n                class n {\n                    class SD {\n                        class F {\n                            class z {}\n\n                            class V9 {\n                                mxMQ8ukfYL.KGx.ZR.al.n Br = new KGx.ZR.al.n();\n\n                                KGx.ZR wC = new mxMQ8ukfYL.KGx.ZR();\n                            }\n\n                            class R {\n                                mxMQ8ukfYL A = new mxMQ8ukfYL();\n                            }\n\n                            class Ei {\n                                mxMQ8ukfYL.KGx GS = new KGx();\n                            }\n                        }\n                    }\n\n                    class m9 {\n                        mxMQ8ukfYL W = new mxMQ8ukfYL();\n                    }\n\n                    mxMQ8ukfYL.KGx.ZR q = new mxMQ8ukfYL.KGx.ZR();\n                }\n\n                class N {}\n\n                mxMQ8ukfYL pRL = new mxMQ8ukfYL();\n            }\n\n            class C5O {\n                KGx r = new mxMQ8ukfYL.KGx();\n\n                KGx It0 = new KGx();\n            }\n\n            KGx O = new KGx();\n\n            mxMQ8ukfYL.KGx.ZR.C5O SxE = new ZR.C5O();\n        }\n\n        {\n        }\n\n        class s {}\n\n        class XvM {}\n    }\n\n    class U {\n        mxMQ8ukfYL o1xcv = new mxMQ8ukfYL();\n\n        U c6 = new U();\n\n        mxMQ8ukfYL ua = new mxMQ8ukfYL();\n    }\n\n    class NQ {\n        mxMQ8ukfYL.NQ t = new NQ();\n\n        mxMQ8ukfYL Ml = new mxMQ8ukfYL();\n    }\n\n    class b {}\n\n    U X = new U();\n}", innerClass.toString());
    }

    @Test
    public void test015() {
        Launcher launcher = new Launcher();
        launcher.getEnvironment().setComplianceLevel(17);
        launcher.getEnvironment().setAutoImports(true);
        launcher.getEnvironment().setShouldCompile(true);
        launcher.addInputResource(new VirtualFile("class o {\n  class fmVL69 {\n    class s {\n      class x {\n        class h9Q {\n          class ru {\n            class V4 {\n              class k {\n                class qm{}\n                class NA{}\n                class M{}\n                class fS {\n\n                  fmVL69.s NsJif = new fmVL69.s();\n                }\n                \n              }\n              class K{}\n              s eV = new o.fmVL69.s();\n              s.x.h9Q.ru AC_ = new s.x.h9Q.ru();\n            }\n            class D {\n\n              fmVL69 O = new fmVL69();\n              x.h9Q dZFj = new h9Q();\n            }\n            class bGAG{}\n            class F {\n\n              fmVL69 R = new o.fmVL69();\n            }\n            x.h9Q.ru ra = new s.x.h9Q.ru();\n            s.x.h9Q.ru.V4 U0qjn = new x.h9Q.ru.V4();\n            fmVL69 HF = new fmVL69();\n          }\n          class H {\n\n            s.x FBb = new s.x();\n            o.fmVL69.s BC = new fmVL69.s();\n          }\n          class cS{}\n          class sg {\n\n            o.fmVL69.s n = new fmVL69.s();\n          }\n          \n        }\n        \n      }\n      class B {\n\n        o.fmVL69.s DrFy = new fmVL69.s();\n      }\n      class Aq{}\n      \n    }\n    static class sGIu{}\n    class VX {\n\n      o j3sP = new o();\n    }\n    fmVL69.s Q = new fmVL69.s();\n    fmVL69 odQT = new o.fmVL69();\n  }\n  o FD = new o();\n  o f = new o();\n}"));
        CtType<?> innerClass = launcher.buildModel().getAllTypes().iterator().next();
        assertEquals("class o {\n    class fmVL69 {\n        class s {\n            class x {\n                class h9Q {\n                    class ru {\n                        class V4 {\n                            class k {\n                                class qm {}\n\n                                class NA {}\n\n                                class M {}\n\n                                class fS {\n                                    fmVL69.s NsJif = new fmVL69.s();\n                                }\n                            }\n\n                            class K {}\n\n                            s eV = new o.fmVL69.s();\n\n                            s.x.h9Q.ru AC_ = new s.x.h9Q.ru();\n                        }\n\n                        class D {\n                            fmVL69 O = new fmVL69();\n\n                            x.h9Q dZFj = new h9Q();\n                        }\n\n                        class bGAG {}\n\n                        class F {\n                            fmVL69 R = new o.fmVL69();\n                        }\n\n                        x.h9Q.ru ra = new s.x.h9Q.ru();\n\n                        s.x.h9Q.ru.V4 U0qjn = new x.h9Q.ru.V4();\n\n                        fmVL69 HF = new fmVL69();\n                    }\n\n                    class H {\n                        s.x FBb = new s.x();\n\n                        o.fmVL69.s BC = new fmVL69.s();\n                    }\n\n                    class cS {}\n\n                    class sg {\n                        o.fmVL69.s n = new fmVL69.s();\n                    }\n                }\n            }\n\n            class B {\n                o.fmVL69.s DrFy = new fmVL69.s();\n            }\n\n            class Aq {}\n        }\n\n        static class sGIu {}\n\n        class VX {\n            o j3sP = new o();\n        }\n\n        fmVL69.s Q = new fmVL69.s();\n\n        fmVL69 odQT = new o.fmVL69();\n    }\n\n    o FD = new o();\n\n    o f = new o();\n}", innerClass.toString());
    }

    @Test
    public void test016() {
        Launcher launcher = new Launcher();
        launcher.getEnvironment().setComplianceLevel(17);
        launcher.getEnvironment().setAutoImports(true);
        launcher.getEnvironment().setShouldCompile(true);
        launcher.addInputResource(new VirtualFile("class y6 {\n  class jR {\n    class f {\n      class R {\n        class A {\n          class PV {\n            class z {\n              class D {\n                class gO {\n                  class QX{}\n                  class U{}\n                  class a{}\n                  \n                }\n                class vAbK3 {\n\n                  jR.f.R.A W = new A();\n                  y6.jR zA = new jR();\n                }\n                class dp {\n\n                  y6.jR.f.R.A.PV.z.D.dp F = new y6.jR.f.R.A.PV.z.D.dp();\n                }\n                class Gy {\n\n                  y6.jR.f.R.A.PV l = new PV();\n                  jR.f er = new f();\n                }\n                \n              }\n              class ii {\n\n                y6 I = new y6();\n                jR.f.R.A tmt8O = new y6.jR.f.R.A();\n              }\n              \n            }\n            class i {\n\n              jR.f.R.A.PV.i YwY = new R.A.PV.i();\n            }\n            class Wp {\n\n              jR.f.R.A y = new f.R.A();\n              y6.jR.f mO = new y6.jR.f();\n              y6.jR.f.R.A.PV sW = new R.A.PV();\n              y6 BC = new y6();\n              A Ti = new f.R.A();\n            }\n            class m{}\n            \n          }\n          jR.f.R h = new f.R();\n        }\n        class n_xB {\n\n          f.R b = new y6.jR.f.R();\n        }\n        class T27{}\n        y6 qUU = new y6();\n      }\n      y6.jR T = new jR();\n    }\n    jR w = new jR();\n  }\n  class X {\n\n    y6 UxL = new y6();\n    y6 Z = new y6();\n  }\n  \n}"));
        CtType<?> innerClass = launcher.buildModel().getAllTypes().iterator().next();
        assertEquals("class y6 {\n    class jR {\n        class f {\n            class R {\n                class A {\n                    class PV {\n                        class z {\n                            class D {\n                                class gO {\n                                    class QX {}\n\n                                    class U {}\n\n                                    class a {}\n                                }\n\n                                class vAbK3 {\n                                    jR.f.R.A W = new A();\n\n                                    y6.jR zA = new jR();\n                                }\n\n                                class dp {\n                                    y6.jR.f.R.A.PV.z.D.dp F = new y6.jR.f.R.A.PV.z.D.dp();\n                                }\n\n                                class Gy {\n                                    y6.jR.f.R.A.PV l = new PV();\n\n                                    jR.f er = new f();\n                                }\n                            }\n\n                            class ii {\n                                y6 I = new y6();\n\n                                jR.f.R.A tmt8O = new y6.jR.f.R.A();\n                            }\n                        }\n\n                        class i {\n                            jR.f.R.A.PV.i YwY = new R.A.PV.i();\n                        }\n\n                        class Wp {\n                            jR.f.R.A y = new f.R.A();\n\n                            y6.jR.f mO = new y6.jR.f();\n\n                            y6.jR.f.R.A.PV sW = new R.A.PV();\n\n                            y6 BC = new y6();\n\n                            A Ti = new f.R.A();\n                        }\n\n                        class m {}\n                    }\n\n                    jR.f.R h = new f.R();\n                }\n\n                class n_xB {\n                    f.R b = new y6.jR.f.R();\n                }\n\n                class T27 {}\n\n                y6 qUU = new y6();\n            }\n\n            y6.jR T = new jR();\n        }\n\n        jR w = new jR();\n    }\n\n    class X {\n        y6 UxL = new y6();\n\n        y6 Z = new y6();\n    }\n}", innerClass.toString());
    }

    @Test
    public void test017() {
        Launcher launcher = new Launcher();
        launcher.getEnvironment().setComplianceLevel(17);
        launcher.getEnvironment().setAutoImports(true);
        launcher.getEnvironment().setShouldCompile(true);
        launcher.addInputResource(new VirtualFile("class ni {\n  class Bj {\n    class M {\n      class y4 {\n        class E {\n          class n {\n            class O8 {\n              class Qu {\n\n                y4.E.n R = new E.n();\n              }\n              \n            }\n            class O7OcDF{}\n            \n          }\n          class rj_vWAX0{}\n          class yiN {\n\n            Bj.M.y4 N = new Bj.M.y4();\n            ni.Bj l = new Bj();\n          }\n          class z{}\n          M.y4.E Q = new M.y4.E();\n        }\n        class U {\n\n          ni.Bj.M.y4 DO = new Bj.M.y4();\n          y4.U XDj8 = new y4.U();\n          M.y4.U p = new y4.U();\n        }\n        class W{}\n        class H9ETJ {\n\n          ni Y = new ni();\n          ni.Bj.M wSQIQ = new M();\n        }\n        \n      }\n      class a {\n\n        Bj.M dr = new ni.Bj.M();\n      }\n      class H {\n\n        ni.Bj fR = new Bj();\n        ni.Bj.M.H o = new H();\n        M fuC4iE4FFsq = new M();\n        ni b = new ni();\n      }\n      class V {\n\n        M J = new Bj.M();\n        M.V E6 = new M.V();\n        ni K = new ni();\n        ni.Bj.M.V p3 = new ni.Bj.M.V();\n        M jNJr = new ni.Bj.M();\n        Bj.M.V ur = new Bj.M.V();\n      }\n      \n    }\n    class qy{}\n    class zNAEd8 {\n\n      ni.Bj w = new ni.Bj();\n    }\n    \n  }\n  ni.Bj Hf = new ni.Bj();\n  Bj x = new Bj();\n  ni aq0 = new ni();\n  ni A = new ni();\n  ni sz = new ni();\n  ni PCXwK = new ni();\n}"));
        CtType<?> innerClass = launcher.buildModel().getAllTypes().iterator().next();
        assertEquals("class ni {\n    class Bj {\n        class M {\n            class y4 {\n                class E {\n                    class n {\n                        class O8 {\n                            class Qu {\n                                y4.E.n R = new E.n();\n                            }\n                        }\n\n                        class O7OcDF {}\n                    }\n\n                    class rj_vWAX0 {}\n\n                    class yiN {\n                        Bj.M.y4 N = new Bj.M.y4();\n\n                        ni.Bj l = new Bj();\n                    }\n\n                    class z {}\n\n                    M.y4.E Q = new M.y4.E();\n                }\n\n                class U {\n                    ni.Bj.M.y4 DO = new Bj.M.y4();\n\n                    y4.U XDj8 = new y4.U();\n\n                    M.y4.U p = new y4.U();\n                }\n\n                class W {}\n\n                class H9ETJ {\n                    ni Y = new ni();\n\n                    ni.Bj.M wSQIQ = new M();\n                }\n            }\n\n            class a {\n                Bj.M dr = new ni.Bj.M();\n            }\n\n            class H {\n                ni.Bj fR = new Bj();\n\n                ni.Bj.M.H o = new H();\n\n                M fuC4iE4FFsq = new M();\n\n                ni b = new ni();\n            }\n\n            class V {\n                M J = new Bj.M();\n\n                M.V E6 = new M.V();\n\n                ni K = new ni();\n\n                ni.Bj.M.V p3 = new ni.Bj.M.V();\n\n                M jNJr = new ni.Bj.M();\n\n                Bj.M.V ur = new Bj.M.V();\n            }\n        }\n\n        class qy {}\n\n        class zNAEd8 {\n            ni.Bj w = new ni.Bj();\n        }\n    }\n\n    ni.Bj Hf = new ni.Bj();\n\n    Bj x = new Bj();\n\n    ni aq0 = new ni();\n\n    ni A = new ni();\n\n    ni sz = new ni();\n\n    ni PCXwK = new ni();\n}", innerClass.toString());
    }

    @Test
    public void test018() {
        Launcher launcher = new Launcher();
        launcher.getEnvironment().setComplianceLevel(17);
        launcher.getEnvironment().setAutoImports(true);
        launcher.getEnvironment().setShouldCompile(true);
        launcher.addInputResource(new VirtualFile("class o {\n  class p {\n    class V {\n      class x {\n        class A {\n          class G {\n            class cIh{}\n            class WB {\n\n              p z = new o.p();\n            }\n            class MYzSH{}\n            o hH = new o();\n          }\n          class W_O{}\n          class WY{}\n          class u{}\n          o.p.V.x.A Ww = new p.V.x.A();\n        }\n        class ImoRoq {\n\n          x UdEl = new p.V.x();\n        }\n        class z7n6j{}\n        class Q {\n\n          o a = new o();\n          o y5it = new o();\n          p.V n = new V();\n        }\n        p.V y = new V();\n      }\n      class R_ {\n\n        p.V.R_ tSw_ = new V.R_();\n      }\n      \n    }\n    class CtuDVL{}\n    class Z {\n\n      o.p I = new o.p();\n    }\n    class g{}\n    p blS3 = new o.p();\n    o xf = new o();\n    o x2 = new o();\n  }\n  class i4G{}\n  static class q{}\n  i4G pgtg6 = new i4G();\n}"));
        CtType<?> innerClass = launcher.buildModel().getAllTypes().iterator().next();
        assertEquals("class o {\n    class p {\n        class V {\n            class x {\n                class A {\n                    class G {\n                        class cIh {}\n\n                        class WB {\n                            p z = new o.p();\n                        }\n\n                        class MYzSH {}\n\n                        o hH = new o();\n                    }\n\n                    class W_O {}\n\n                    class WY {}\n\n                    class u {}\n\n                    o.p.V.x.A Ww = new p.V.x.A();\n                }\n\n                class ImoRoq {\n                    x UdEl = new p.V.x();\n                }\n\n                class z7n6j {}\n\n                class Q {\n                    o a = new o();\n\n                    o y5it = new o();\n\n                    p.V n = new V();\n                }\n\n                p.V y = new V();\n            }\n\n            class R_ {\n                p.V.R_ tSw_ = new V.R_();\n            }\n        }\n\n        class CtuDVL {}\n\n        class Z {\n            o.p I = new o.p();\n        }\n\n        class g {}\n\n        p blS3 = new o.p();\n\n        o xf = new o();\n\n        o x2 = new o();\n    }\n\n    class i4G {}\n\n    static class q {}\n\n    i4G pgtg6 = new i4G();\n}", innerClass.toString());
    }

    @Test
    public void test019() {
        Launcher launcher = new Launcher();
        launcher.getEnvironment().setComplianceLevel(17);
        launcher.getEnvironment().setAutoImports(true);
        launcher.getEnvironment().setShouldCompile(true);
        launcher.addInputResource(new VirtualFile("class W8Ort {\n  class cqU {\n    class u {\n      class wi {\n        class x {\n          class l {\n            class D {\n              class MEB {\n                class t{}\n                \n              }\n              class WD{}\n              u.wi.x.l.D.WD R = new cqU.u.wi.x.l.D.WD();\n            }\n            \n          }\n          class k {\n\n            x sMPR = new u.wi.x();\n          }\n          class Bi{}\n          class b{}\n          \n        }\n        class IM{}\n        class pI{}\n        \n      }\n      class A{}\n      static class K{}\n      static class Kv{}\n      u.wi m = new wi();\n      W8Ort zx = new W8Ort();\n    }\n    u VOp = new W8Ort.cqU.u();\n  }\n  class lF {\n\n    W8Ort.lF Gzz1M7jjAXxx = new lF();\n  }\n  class Q9 {\n\n    W8Ort Uviu = new W8Ort();\n    W8Ort At = new W8Ort();\n    W8Ort c = new W8Ort();\n    W8Ort.Q9 e = new W8Ort.Q9();\n  }\n  \n}"));
        CtType<?> innerClass = launcher.buildModel().getAllTypes().iterator().next();
        assertEquals("class W8Ort {\n    class cqU {\n        class u {\n            class wi {\n                class x {\n                    class l {\n                        class D {\n                            class MEB {\n                                class t {}\n                            }\n\n                            class WD {}\n\n                            u.wi.x.l.D.WD R = new cqU.u.wi.x.l.D.WD();\n                        }\n                    }\n\n                    class k {\n                        x sMPR = new u.wi.x();\n                    }\n\n                    class Bi {}\n\n                    class b {}\n                }\n\n                class IM {}\n\n                class pI {}\n            }\n\n            class A {}\n\n            static class K {}\n\n            static class Kv {}\n\n            u.wi m = new wi();\n\n            W8Ort zx = new W8Ort();\n        }\n\n        u VOp = new W8Ort.cqU.u();\n    }\n\n    class lF {\n        W8Ort.lF Gzz1M7jjAXxx = new lF();\n    }\n\n    class Q9 {\n        W8Ort Uviu = new W8Ort();\n\n        W8Ort At = new W8Ort();\n\n        W8Ort c = new W8Ort();\n\n        W8Ort.Q9 e = new W8Ort.Q9();\n    }\n}", innerClass.toString());
    }

    @Test
    public void test020() {
        Launcher launcher = new Launcher();
        launcher.getEnvironment().setComplianceLevel(17);
        launcher.getEnvironment().setAutoImports(true);
        launcher.getEnvironment().setShouldCompile(true);
        launcher.addInputResource(new VirtualFile("class Tr {\n  class D {\n    class K3Xhl {\n      class W {\n        class OKP3 {\n          class R {\n            class yQM {\n              class XN {\n\n                D M3 = new D();\n              }\n              class l{}\n              class E29 {\n\n                Tr.D.K3Xhl.W.OKP3 h = new OKP3();\n              }\n              class S{}\n              \n            }\n            yQM e = new OKP3.R.yQM();\n          }\n          class t {\n\n            D.K3Xhl.W L = new W();\n          }\n          \n        }\n        class i{}\n        class OfG{}\n        class iXIe{}\n        \n      }\n      class x {\n\n        D z = new Tr.D();\n        Tr.D.K3Xhl f = new D.K3Xhl();\n        Tr.D uXLcz = new D();\n      }\n      class d {\n\n        Tr.D dP = new D();\n      }\n      class H {\n\n        K3Xhl.H n = new D.K3Xhl.H();\n      }\n      K3Xhl.x rt = new x();\n    }\n    \n  }\n  class ID {\n\n    Tr.ID FG = new Tr.ID();\n    ID HC1 = new Tr.ID();\n  }\n  class bCeW {\n\n    Tr.bCeW M = new bCeW();\n  }\n  class m {\n\n    Tr E = new Tr();\n    Tr y = new Tr();\n    Tr.m RE = new m();\n  }\n  \n}"));
        CtType<?> innerClass = launcher.buildModel().getAllTypes().iterator().next();
        assertEquals("class Tr {\n    class D {\n        class K3Xhl {\n            class W {\n                class OKP3 {\n                    class R {\n                        class yQM {\n                            class XN {\n                                D M3 = new D();\n                            }\n\n                            class l {}\n\n                            class E29 {\n                                Tr.D.K3Xhl.W.OKP3 h = new OKP3();\n                            }\n\n                            class S {}\n                        }\n\n                        yQM e = new OKP3.R.yQM();\n                    }\n\n                    class t {\n                        D.K3Xhl.W L = new W();\n                    }\n                }\n\n                class i {}\n\n                class OfG {}\n\n                class iXIe {}\n            }\n\n            class x {\n                D z = new Tr.D();\n\n                Tr.D.K3Xhl f = new D.K3Xhl();\n\n                Tr.D uXLcz = new D();\n            }\n\n            class d {\n                Tr.D dP = new D();\n            }\n\n            class H {\n                K3Xhl.H n = new D.K3Xhl.H();\n            }\n\n            K3Xhl.x rt = new x();\n        }\n    }\n\n    class ID {\n        Tr.ID FG = new Tr.ID();\n\n        ID HC1 = new Tr.ID();\n    }\n\n    class bCeW {\n        Tr.bCeW M = new bCeW();\n    }\n\n    class m {\n        Tr E = new Tr();\n\n        Tr y = new Tr();\n\n        Tr.m RE = new m();\n    }\n}", innerClass.toString());
    }

    @Test
    public void test021() {
        Launcher launcher = new Launcher();
        launcher.getEnvironment().setComplianceLevel(17);
        launcher.getEnvironment().setAutoImports(true);
        launcher.getEnvironment().setShouldCompile(true);
        launcher.addInputResource(new VirtualFile("class zz {\n  class CRiz1 {\n    class mzZXVX {\n      class Gs {\n        class JT_c {\n          class c {\n            class sf {\n              class S{}\n              class q {\n\n                mzZXVX.Gs T = new zz.CRiz1.mzZXVX.Gs();\n                mzZXVX.Gs di = new CRiz1.mzZXVX.Gs();\n              }\n              class Yc4mpf {\n\n                zz F = new zz();\n              }\n              class g {\n\n                sf R = new c.sf();\n              }\n              CRiz1.mzZXVX H = new mzZXVX();\n              sf S7 = new CRiz1.mzZXVX.Gs.JT_c.c.sf();\n              c Q = new JT_c.c();\n              zz Kge = new zz();\n              CRiz1 ZQh = new CRiz1();\n              zz.CRiz1.mzZXVX Z2 = new zz.CRiz1.mzZXVX();\n              zz Z = new zz();\n              mzZXVX.Gs.JT_c.c.sf vyZ = new CRiz1.mzZXVX.Gs.JT_c.c.sf();\n              Gs.JT_c.c.sf mGo = new c.sf();\n              zz.CRiz1.mzZXVX x = new zz.CRiz1.mzZXVX();\n              zz.CRiz1.mzZXVX.Gs.JT_c.c.sf.q l3 = new CRiz1.mzZXVX.Gs.JT_c.c.sf.q();\n              zz.CRiz1.mzZXVX.Gs k = new mzZXVX.Gs();\n            }\n            class tL {\n\n              JT_c.c.tL rW = new CRiz1.mzZXVX.Gs.JT_c.c.tL();\n            }\n            class My{}\n            zz t = new zz();\n          }\n          class yHX {\n\n            mzZXVX.Gs.JT_c b = new JT_c();\n          }\n          class A {\n\n            zz.CRiz1.mzZXVX.Gs zC = new CRiz1.mzZXVX.Gs();\n          }\n          CRiz1.mzZXVX.Gs.JT_c m = new Gs.JT_c();\n        }\n        mzZXVX.Gs.JT_c e = new zz.CRiz1.mzZXVX.Gs.JT_c();\n      }\n      class o {\n\n        CRiz1 Xjy = new CRiz1();\n        zz D = new zz();\n        zz.CRiz1 T7ZS = new CRiz1();\n      }\n      zz.CRiz1.mzZXVX SG0gM6g3rRQ = new mzZXVX();\n      zz FN = new zz();\n      zz w = new zz();\n      zz Aj = new zz();\n      zz.CRiz1 Qt = new CRiz1();\n    }\n    class a{}\n    class K{}\n    class uy {\n\n      uy BL = new zz.CRiz1.uy();\n    }\n    CRiz1 eir = new CRiz1();\n    zz f = new zz();\n  }\n  static class O{}\n  class lh {\n\n    lh V = new lh();\n    zz Yq = new zz();\n  }\n  static class wX{}\n  \n}"));
        CtType<?> innerClass = launcher.buildModel().getAllTypes().iterator().next();
        assertEquals("class zz {\n    class CRiz1 {\n        class mzZXVX {\n            class Gs {\n                class JT_c {\n                    class c {\n                        class sf {\n                            class S {}\n\n                            class q {\n                                mzZXVX.Gs T = new zz.CRiz1.mzZXVX.Gs();\n\n                                mzZXVX.Gs di = new CRiz1.mzZXVX.Gs();\n                            }\n\n                            class Yc4mpf {\n                                zz F = new zz();\n                            }\n\n                            class g {\n                                sf R = new c.sf();\n                            }\n\n                            CRiz1.mzZXVX H = new mzZXVX();\n\n                            sf S7 = new CRiz1.mzZXVX.Gs.JT_c.c.sf();\n\n                            c Q = new JT_c.c();\n\n                            zz Kge = new zz();\n\n                            CRiz1 ZQh = new CRiz1();\n\n                            zz.CRiz1.mzZXVX Z2 = new zz.CRiz1.mzZXVX();\n\n                            zz Z = new zz();\n\n                            mzZXVX.Gs.JT_c.c.sf vyZ = new CRiz1.mzZXVX.Gs.JT_c.c.sf();\n\n                            Gs.JT_c.c.sf mGo = new c.sf();\n\n                            zz.CRiz1.mzZXVX x = new zz.CRiz1.mzZXVX();\n\n                            zz.CRiz1.mzZXVX.Gs.JT_c.c.sf.q l3 = new CRiz1.mzZXVX.Gs.JT_c.c.sf.q();\n\n                            zz.CRiz1.mzZXVX.Gs k = new mzZXVX.Gs();\n                        }\n\n                        class tL {\n                            JT_c.c.tL rW = new CRiz1.mzZXVX.Gs.JT_c.c.tL();\n                        }\n\n                        class My {}\n\n                        zz t = new zz();\n                    }\n\n                    class yHX {\n                        mzZXVX.Gs.JT_c b = new JT_c();\n                    }\n\n                    class A {\n                        zz.CRiz1.mzZXVX.Gs zC = new CRiz1.mzZXVX.Gs();\n                    }\n\n                    CRiz1.mzZXVX.Gs.JT_c m = new Gs.JT_c();\n                }\n\n                mzZXVX.Gs.JT_c e = new zz.CRiz1.mzZXVX.Gs.JT_c();\n            }\n\n            class o {\n                CRiz1 Xjy = new CRiz1();\n\n                zz D = new zz();\n\n                zz.CRiz1 T7ZS = new CRiz1();\n            }\n\n            zz.CRiz1.mzZXVX SG0gM6g3rRQ = new mzZXVX();\n\n            zz FN = new zz();\n\n            zz w = new zz();\n\n            zz Aj = new zz();\n\n            zz.CRiz1 Qt = new CRiz1();\n        }\n\n        class a {}\n\n        class K {}\n\n        class uy {\n            uy BL = new zz.CRiz1.uy();\n        }\n\n        CRiz1 eir = new CRiz1();\n\n        zz f = new zz();\n    }\n\n    static class O {}\n\n    class lh {\n        lh V = new lh();\n\n        zz Yq = new zz();\n    }\n\n    static class wX {}\n}", innerClass.toString());
    }

    @Test
    public void test022() {
        Launcher launcher = new Launcher();
        launcher.getEnvironment().setComplianceLevel(17);
        launcher.getEnvironment().setAutoImports(true);
        launcher.getEnvironment().setShouldCompile(true);
        launcher.addInputResource(new VirtualFile("class i {\n  class YV {\n    class Q {\n      class c {\n        class k {\n          class m {\n            class G {\n              class RX {\n                class H {\n                  class Quc {\n                    class t6yEPd {\n                      class q {\n\n                        i BG = new i();\n                      }\n                      class bE0{}\n                      class Uo{}\n                      i n = new i();\n                    }\n                    class N {\n\n                      YV.Q.c.k.m.G s = new k.m.G();\n                      Q.c.k.m.G.RX.H.Quc.N KZ = new Quc.N();\n                    }\n                    class AL{}\n                    class Uc {\n\n                      YV.Q.c.k.m.G.RX.H.Quc.Uc hY = new H.Quc.Uc();\n                      i ru = new i();\n                      c.k i2LPB8w = new i.YV.Q.c.k();\n                    }\n                    \n                  }\n                  class zT {\n\n                    H.zT DL = new G.RX.H.zT();\n                    i WC = new i();\n                    k j0f = new Q.c.k();\n                    i.YV.Q ZX = new YV.Q();\n                  }\n                  m X = new i.YV.Q.c.k.m();\n                }\n                class a {\n\n                  i.YV.Q.c.k o = new i.YV.Q.c.k();\n                  i R = new i();\n                  RX.a Oxo = new G.RX.a();\n                }\n                \n              }\n              \n            }\n            \n          }\n          class Y2 {\n\n            Q.c.k WdwG9 = new i.YV.Q.c.k();\n            YV.Q p = new YV.Q();\n          }\n          YV ENBX = new YV();\n          YV.Q.c NOwZ = new YV.Q.c();\n        }\n        \n      }\n      class vPue_{}\n      YV.Q RDv = new i.YV.Q();\n    }\n    \n  }\n  i NaT = new i();\n  i U = new i();\n  i.YV D = new i.YV();\n}"));
        CtType<?> innerClass = launcher.buildModel().getAllTypes().iterator().next();
        assertEquals("class i {\n    class YV {\n        class Q {\n            class c {\n                class k {\n                    class m {\n                        class G {\n                            class RX {\n                                class H {\n                                    class Quc {\n                                        class t6yEPd {\n                                            class q {\n                                                i BG = new i();\n                                            }\n\n                                            class bE0 {}\n\n                                            class Uo {}\n\n                                            i n = new i();\n                                        }\n\n                                        class N {\n                                            YV.Q.c.k.m.G s = new k.m.G();\n\n                                            Q.c.k.m.G.RX.H.Quc.N KZ = new Quc.N();\n                                        }\n\n                                        class AL {}\n\n                                        class Uc {\n                                            YV.Q.c.k.m.G.RX.H.Quc.Uc hY = new H.Quc.Uc();\n\n                                            i ru = new i();\n\n                                            c.k i2LPB8w = new i.YV.Q.c.k();\n                                        }\n                                    }\n\n                                    class zT {\n                                        H.zT DL = new G.RX.H.zT();\n\n                                        i WC = new i();\n\n                                        k j0f = new Q.c.k();\n\n                                        i.YV.Q ZX = new YV.Q();\n                                    }\n\n                                    m X = new i.YV.Q.c.k.m();\n                                }\n\n                                class a {\n                                    i.YV.Q.c.k o = new i.YV.Q.c.k();\n\n                                    i R = new i();\n\n                                    RX.a Oxo = new G.RX.a();\n                                }\n                            }\n                        }\n                    }\n\n                    class Y2 {\n                        Q.c.k WdwG9 = new i.YV.Q.c.k();\n\n                        YV.Q p = new YV.Q();\n                    }\n\n                    YV ENBX = new YV();\n\n                    YV.Q.c NOwZ = new YV.Q.c();\n                }\n            }\n\n            class vPue_ {}\n\n            YV.Q RDv = new i.YV.Q();\n        }\n    }\n\n    i NaT = new i();\n\n    i U = new i();\n\n    i.YV D = new i.YV();\n}", innerClass.toString());
    }

    @Test
    public void test023() {
        Launcher launcher = new Launcher();
        launcher.getEnvironment().setComplianceLevel(17);
        launcher.getEnvironment().setAutoImports(true);
        launcher.getEnvironment().setShouldCompile(true);
        launcher.addInputResource(new VirtualFile("class n {\n  class T {\n    class eMu {\n      class t4o8x {\n        class d {\n          class v {\n            class t {\n              class kg {\n\n                n V = new n();\n              }\n              class Qt7 {\n\n                n y = new n();\n                n lUh = new n();\n                n j = new n();\n                n.T i = new T();\n                v.t.Qt7 K = new n.T.eMu.t4o8x.d.v.t.Qt7();\n              }\n              class O{}\n              \n            }\n            class Q {\n\n              eMu.t4o8x.d s = new d();\n              n x = new n();\n            }\n            \n          }\n          static class CD{}\n          static class hGexQ{}\n          class X {\n\n            eMu.t4o8x g = new t4o8x();\n            T c = new n.T();\n          }\n          \n        }\n        class Z {\n\n          n.T.eMu Y5dZ = new eMu();\n        }\n        static class whD{}\n        eMu glDlT0 = new n.T.eMu();\n        n.T QM = new n.T();\n      }\n      static class ja{}\n      class p {\n\n        eMu.p Yr = new n.T.eMu.p();\n      }\n      \n    }\n    class oi {\n\n      n nl1vmy = new n();\n      oi H = new T.oi();\n    }\n    class L {\n\n      T m = new n.T();\n      T UU = new T();\n      n.T.L eT = new T.L();\n      n.T ZHtEKb9MyZ = new T();\n      T.L Cw = new T.L();\n      L I = new T.L();\n      T QF = new T();\n    }\n    eMu l = new n.T.eMu();\n  }\n  \n}"));
        CtType<?> innerClass = launcher.buildModel().getAllTypes().iterator().next();
        assertEquals("class n {\n    class T {\n        class eMu {\n            class t4o8x {\n                class d {\n                    class v {\n                        class t {\n                            class kg {\n                                n V = new n();\n                            }\n\n                            class Qt7 {\n                                n y = new n();\n\n                                n lUh = new n();\n\n                                n j = new n();\n\n                                n.T i = new T();\n\n                                v.t.Qt7 K = new n.T.eMu.t4o8x.d.v.t.Qt7();\n                            }\n\n                            class O {}\n                        }\n\n                        class Q {\n                            eMu.t4o8x.d s = new d();\n\n                            n x = new n();\n                        }\n                    }\n\n                    static class CD {}\n\n                    static class hGexQ {}\n\n                    class X {\n                        eMu.t4o8x g = new t4o8x();\n\n                        T c = new n.T();\n                    }\n                }\n\n                class Z {\n                    n.T.eMu Y5dZ = new eMu();\n                }\n\n                static class whD {}\n\n                eMu glDlT0 = new n.T.eMu();\n\n                n.T QM = new n.T();\n            }\n\n            static class ja {}\n\n            class p {\n                eMu.p Yr = new n.T.eMu.p();\n            }\n        }\n\n        class oi {\n            n nl1vmy = new n();\n\n            oi H = new T.oi();\n        }\n\n        class L {\n            T m = new n.T();\n\n            T UU = new T();\n\n            n.T.L eT = new T.L();\n\n            n.T ZHtEKb9MyZ = new T();\n\n            T.L Cw = new T.L();\n\n            L I = new T.L();\n\n            T QF = new T();\n        }\n\n        eMu l = new n.T.eMu();\n    }\n}", innerClass.toString());
    }

    @Test
    public void test024() {
        Launcher launcher = new Launcher();
        launcher.getEnvironment().setComplianceLevel(17);
        launcher.getEnvironment().setAutoImports(true);
        launcher.getEnvironment().setShouldCompile(true);
        launcher.addInputResource(new VirtualFile("class Hw {\n  class l {\n    class o {\n      class Y {\n        class G {\n          class jWY {\n            class U {\n              class O {\n                class iN7 {\n\n                  Hw.l.o.Y.G.jWY.U Q2kd = new G.jWY.U();\n                }\n                class A6 {\n\n                  Hw.l T = new Hw.l();\n                }\n                class DG {\n\n                  Hw oc = new Hw();\n                }\n                class PO{}\n                \n              }\n              \n            }\n            \n          }\n          class ny{}\n          class Wx2u {\n\n            Hw.l.o Qp5 = new o();\n            Hw.l.o S7 = new Hw.l.o();\n            l.o jXeId = new Hw.l.o();\n          }\n          G AYTG = new Y.G();\n        }\n        class v{}\n        class u{}\n        o.Y.u F = new o.Y.u();\n      }\n      \n    }\n    class X {\n\n      Hw N = new Hw();\n    }\n    class a {\n\n      Hw.l.a j = new a();\n    }\n    \n  }\n  class gN{}\n  static class MHY{}\n  static class JU{}\n  MHY l7 = new MHY();\n  JU uhV = new Hw.JU();\n}"));
        CtType<?> innerClass = launcher.buildModel().getAllTypes().iterator().next();
        assertEquals("class Hw {\n    class l {\n        class o {\n            class Y {\n                class G {\n                    class jWY {\n                        class U {\n                            class O {\n                                class iN7 {\n                                    Hw.l.o.Y.G.jWY.U Q2kd = new G.jWY.U();\n                                }\n\n                                class A6 {\n                                    Hw.l T = new Hw.l();\n                                }\n\n                                class DG {\n                                    Hw oc = new Hw();\n                                }\n\n                                class PO {}\n                            }\n                        }\n                    }\n\n                    class ny {}\n\n                    class Wx2u {\n                        Hw.l.o Qp5 = new o();\n\n                        Hw.l.o S7 = new Hw.l.o();\n\n                        l.o jXeId = new Hw.l.o();\n                    }\n\n                    G AYTG = new Y.G();\n                }\n\n                class v {}\n\n                class u {}\n\n                o.Y.u F = new o.Y.u();\n            }\n        }\n\n        class X {\n            Hw N = new Hw();\n        }\n\n        class a {\n            Hw.l.a j = new a();\n        }\n    }\n\n    class gN {}\n\n    static class MHY {}\n\n    static class JU {}\n\n    MHY l7 = new MHY();\n\n    JU uhV = new Hw.JU();\n}", innerClass.toString());
    }

    @Test
    public void test025() {
        Launcher launcher = new Launcher();
        launcher.getEnvironment().setComplianceLevel(17);
        launcher.getEnvironment().setAutoImports(true);
        launcher.getEnvironment().setShouldCompile(true);
        launcher.addInputResource(new VirtualFile("class G {\n  class v {\n    class XpF {\n      class a {\n        class J {\n          class w7 {\n            class O {\n              class l {\n                class B {\n                  class nz {\n\n                    v vHj = new v();\n                  }\n                  class Hp {\n\n                    G N = new G();\n                    G Xn = new G();\n                    G m = new G();\n                    a.J.w7.O.l.B.Hp Ii = new w7.O.l.B.Hp();\n                  }\n                  class j {\n\n                    l.B b = new l.B();\n                    w7.O.l w7h4 = new w7.O.l();\n                  }\n                  \n                }\n                class W{}\n                class s {\n\n                  v GQ = new G.v();\n                  XpF.a.J EKaAh = new G.v.XpF.a.J();\n                }\n                \n              }\n              G H = new G();\n            }\n            G.v.XpF.a.J.w7 BC = new v.XpF.a.J.w7();\n            O Nc = new J.w7.O();\n          }\n          class k {\n\n            G jFdD7D = new G();\n            XpF.a S = new XpF.a();\n            v.XpF.a Hpys = new XpF.a();\n          }\n          v CH = new G.v();\n          G MyyyO = new G();\n          G.v.XpF.a UG = new G.v.XpF.a();\n          G.v.XpF.a.J V = new a.J();\n        }\n        class u {\n\n          G.v.XpF.a BXz = new v.XpF.a();\n          u I = new G.v.XpF.a.u();\n        }\n        class K {\n\n          v.XpF.a U = new XpF.a();\n        }\n        G.v.XpF.a c = new XpF.a();\n      }\n      XpF.a sl = new XpF.a();\n    }\n    \n  }\n  static class p{}\n  class siB2{}\n  static class Bk{}\n  G h = new G();\n}"));
        CtType<?> innerClass = launcher.buildModel().getAllTypes().iterator().next();
        assertEquals("class G {\n    class v {\n        class XpF {\n            class a {\n                class J {\n                    class w7 {\n                        class O {\n                            class l {\n                                class B {\n                                    class nz {\n                                        v vHj = new v();\n                                    }\n\n                                    class Hp {\n                                        G N = new G();\n\n                                        G Xn = new G();\n\n                                        G m = new G();\n\n                                        a.J.w7.O.l.B.Hp Ii = new w7.O.l.B.Hp();\n                                    }\n\n                                    class j {\n                                        l.B b = new l.B();\n\n                                        w7.O.l w7h4 = new w7.O.l();\n                                    }\n                                }\n\n                                class W {}\n\n                                class s {\n                                    v GQ = new G.v();\n\n                                    XpF.a.J EKaAh = new G.v.XpF.a.J();\n                                }\n                            }\n\n                            G H = new G();\n                        }\n\n                        G.v.XpF.a.J.w7 BC = new v.XpF.a.J.w7();\n\n                        O Nc = new J.w7.O();\n                    }\n\n                    class k {\n                        G jFdD7D = new G();\n\n                        XpF.a S = new XpF.a();\n\n                        v.XpF.a Hpys = new XpF.a();\n                    }\n\n                    v CH = new G.v();\n\n                    G MyyyO = new G();\n\n                    G.v.XpF.a UG = new G.v.XpF.a();\n\n                    G.v.XpF.a.J V = new a.J();\n                }\n\n                class u {\n                    G.v.XpF.a BXz = new v.XpF.a();\n\n                    u I = new G.v.XpF.a.u();\n                }\n\n                class K {\n                    v.XpF.a U = new XpF.a();\n                }\n\n                G.v.XpF.a c = new XpF.a();\n            }\n\n            XpF.a sl = new XpF.a();\n        }\n    }\n\n    static class p {}\n\n    class siB2 {}\n\n    static class Bk {}\n\n    G h = new G();\n}", innerClass.toString());
    }

    @Test
    public void test026() {
        Launcher launcher = new Launcher();
        launcher.getEnvironment().setComplianceLevel(17);
        launcher.getEnvironment().setAutoImports(true);
        launcher.getEnvironment().setShouldCompile(true);
        launcher.addInputResource(new VirtualFile("class lM {\n  class v {\n    class W {\n      class Q {\n        class PLpr {\n          class o {\n            class TKib {\n              class V6 {\n                class ND {\n                  class qUh {\n\n                    lM.v.W H = new v.W();\n                  }\n                  class t {\n\n                    v.W.Q n = new W.Q();\n                  }\n                  class y{}\n                  class mj9 {\n\n                    o.TKib d = new W.Q.PLpr.o.TKib();\n                    v yuFU = new lM.v();\n                    o.TKib.V6 vz = new V6();\n                  }\n                  \n                }\n                lM f = new lM();\n                Q.PLpr.o.TKib.V6 k = new PLpr.o.TKib.V6();\n              }\n              \n            }\n            class UY {\n\n              PLpr a6 = new Q.PLpr();\n              W.Q.PLpr WK = new lM.v.W.Q.PLpr();\n            }\n            \n          }\n          static class w{}\n          static class wV{}\n          static class U{}\n          W.Q Mz4 = new W.Q();\n        }\n        class p {\n\n          Q T = new lM.v.W.Q();\n          v g = new lM.v();\n        }\n        class Ux{}\n        class e {\n\n          v qZ9 = new lM.v();\n        }\n        lM Vi = new lM();\n      }\n      static class RR{}\n      \n    }\n    class Gk1n {\n\n      lM.v E5 = new lM.v();\n      lM.v.Gk1n s = new v.Gk1n();\n    }\n    class R {\n\n      lM m = new lM();\n      lM.v W6FY = new lM.v();\n    }\n    \n  }\n  v bSJzdxgU = new lM.v();\n  lM.v C = new v();\n  v UB = new lM.v();\n  lM N = new lM();\n  v j = new v();\n  lM O = new lM();\n  lM l = new lM();\n  lM X = new lM();\n  lM.v y9 = new lM.v();\n}"));
        CtType<?> innerClass = launcher.buildModel().getAllTypes().iterator().next();
        assertEquals("class lM {\n    class v {\n        class W {\n            class Q {\n                class PLpr {\n                    class o {\n                        class TKib {\n                            class V6 {\n                                class ND {\n                                    class qUh {\n                                        lM.v.W H = new v.W();\n                                    }\n\n                                    class t {\n                                        v.W.Q n = new W.Q();\n                                    }\n\n                                    class y {}\n\n                                    class mj9 {\n                                        o.TKib d = new W.Q.PLpr.o.TKib();\n\n                                        v yuFU = new lM.v();\n\n                                        o.TKib.V6 vz = new V6();\n                                    }\n                                }\n\n                                lM f = new lM();\n\n                                Q.PLpr.o.TKib.V6 k = new PLpr.o.TKib.V6();\n                            }\n                        }\n\n                        class UY {\n                            PLpr a6 = new Q.PLpr();\n\n                            W.Q.PLpr WK = new lM.v.W.Q.PLpr();\n                        }\n                    }\n\n                    static class w {}\n\n                    static class wV {}\n\n                    static class U {}\n\n                    W.Q Mz4 = new W.Q();\n                }\n\n                class p {\n                    Q T = new lM.v.W.Q();\n\n                    v g = new lM.v();\n                }\n\n                class Ux {}\n\n                class e {\n                    v qZ9 = new lM.v();\n                }\n\n                lM Vi = new lM();\n            }\n\n            static class RR {}\n        }\n\n        class Gk1n {\n            lM.v E5 = new lM.v();\n\n            lM.v.Gk1n s = new v.Gk1n();\n        }\n\n        class R {\n            lM m = new lM();\n\n            lM.v W6FY = new lM.v();\n        }\n    }\n\n    v bSJzdxgU = new lM.v();\n\n    lM.v C = new v();\n\n    v UB = new lM.v();\n\n    lM N = new lM();\n\n    v j = new v();\n\n    lM O = new lM();\n\n    lM l = new lM();\n\n    lM X = new lM();\n\n    lM.v y9 = new lM.v();\n}", innerClass.toString());
    }

    @Test
    public void test027() {
        Launcher launcher = new Launcher();
        launcher.getEnvironment().setComplianceLevel(17);
        launcher.getEnvironment().setAutoImports(true);
        launcher.getEnvironment().setShouldCompile(true);
        launcher.addInputResource(new VirtualFile("class X {\n  class tL {\n    class d {\n      class Iz {\n        class o {\n          class a {\n            class M {\n              class rGwRA{}\n              class pcUzATi {\n\n                M.pcUzATi Z = new a.M.pcUzATi();\n              }\n              class w{}\n              class x {\n\n                tL.d.Iz HL = new tL.d.Iz();\n                X.tL.d.Iz.o P = new o();\n              }\n              a.M z6k = new d.Iz.o.a.M();\n            }\n            class L {\n\n              X.tL T = new tL();\n            }\n            class Gx {\n\n              X.tL Wz_ = new tL();\n              X.tL.d.Iz.o D3kO = new tL.d.Iz.o();\n            }\n            class vn {\n\n              Iz.o.a.vn D = new vn();\n            }\n            X Lq = new X();\n            tL.d o4 = new d();\n            tL.d.Iz.o.a F = new o.a();\n          }\n          d.Iz.o zq = new tL.d.Iz.o();\n          X FO2 = new X();\n          X.tL mr = new tL();\n        }\n        class wW {\n\n          X lDay = new X();\n        }\n        class sl3{}\n        class bl{}\n        \n      }\n      class SOIu{}\n      static class b5{}\n      static class rmO3{}\n      \n    }\n    class K {\n\n      tL lm = new tL();\n      X.tL c = new tL();\n      X b = new X();\n    }\n    class Mv1S{}\n    \n  }\n  X cb = new X();\n  X Qz = new X();\n}"));
        CtType<?> innerClass = launcher.buildModel().getAllTypes().iterator().next();
        assertEquals("class X {\n    class tL {\n        class d {\n            class Iz {\n                class o {\n                    class a {\n                        class M {\n                            class rGwRA {}\n\n                            class pcUzATi {\n                                M.pcUzATi Z = new a.M.pcUzATi();\n                            }\n\n                            class w {}\n\n                            class x {\n                                tL.d.Iz HL = new tL.d.Iz();\n\n                                X.tL.d.Iz.o P = new o();\n                            }\n\n                            a.M z6k = new d.Iz.o.a.M();\n                        }\n\n                        class L {\n                            X.tL T = new tL();\n                        }\n\n                        class Gx {\n                            X.tL Wz_ = new tL();\n\n                            X.tL.d.Iz.o D3kO = new tL.d.Iz.o();\n                        }\n\n                        class vn {\n                            Iz.o.a.vn D = new vn();\n                        }\n\n                        X Lq = new X();\n\n                        tL.d o4 = new d();\n\n                        tL.d.Iz.o.a F = new o.a();\n                    }\n\n                    d.Iz.o zq = new tL.d.Iz.o();\n\n                    X FO2 = new X();\n\n                    X.tL mr = new tL();\n                }\n\n                class wW {\n                    X lDay = new X();\n                }\n\n                class sl3 {}\n\n                class bl {}\n            }\n\n            class SOIu {}\n\n            static class b5 {}\n\n            static class rmO3 {}\n        }\n\n        class K {\n            tL lm = new tL();\n\n            X.tL c = new tL();\n\n            X b = new X();\n        }\n\n        class Mv1S {}\n    }\n\n    X cb = new X();\n\n    X Qz = new X();\n}", innerClass.toString());
    }

    @Test
    public void test028() {
        Launcher launcher = new Launcher();
        launcher.getEnvironment().setComplianceLevel(17);
        launcher.getEnvironment().setAutoImports(true);
        launcher.getEnvironment().setShouldCompile(true);
        launcher.addInputResource(new VirtualFile("class CeW {\n  class xYg7 {\n    class T {\n      class Bw {\n        class D {\n          class OG {\n            class m {\n              class K{}\n              class x {\n\n                x c = new CeW.xYg7.T.Bw.D.OG.m.x();\n              }\n              class Q{}\n              \n            }\n            class u{}\n            class J {\n\n              Bw.D.OG xyFR = new OG();\n            }\n            T.Bw.D.OG.u lS = new xYg7.T.Bw.D.OG.u();\n          }\n          class Am {\n\n            xYg7.T.Bw.D q = new xYg7.T.Bw.D();\n          }\n          class U{}\n          \n        }\n        \n      }\n      class mE1i {\n\n        mE1i uefZ = new CeW.xYg7.T.mE1i();\n        T k = new T();\n      }\n      class eLu{}\n      CeW Ig = new CeW();\n      CeW.xYg7 XvC = new xYg7();\n      CeW.xYg7.T.mE1i g2 = new mE1i();\n    }\n    class E {\n\n      xYg7 PZn02 = new CeW.xYg7();\n    }\n    class qy {\n\n      xYg7 f = new xYg7();\n    }\n    \n  }\n  static class I{}\n  class G {\n\n    CeW.G H2 = new CeW.G();\n    CeW.G n = new G();\n  }\n  CeW c18 = new CeW();\n}"));
        CtType<?> innerClass = launcher.buildModel().getAllTypes().iterator().next();
        assertEquals("class CeW {\n    class xYg7 {\n        class T {\n            class Bw {\n                class D {\n                    class OG {\n                        class m {\n                            class K {}\n\n                            class x {\n                                x c = new CeW.xYg7.T.Bw.D.OG.m.x();\n                            }\n\n                            class Q {}\n                        }\n\n                        class u {}\n\n                        class J {\n                            Bw.D.OG xyFR = new OG();\n                        }\n\n                        T.Bw.D.OG.u lS = new xYg7.T.Bw.D.OG.u();\n                    }\n\n                    class Am {\n                        xYg7.T.Bw.D q = new xYg7.T.Bw.D();\n                    }\n\n                    class U {}\n                }\n            }\n\n            class mE1i {\n                mE1i uefZ = new CeW.xYg7.T.mE1i();\n\n                T k = new T();\n            }\n\n            class eLu {}\n\n            CeW Ig = new CeW();\n\n            CeW.xYg7 XvC = new xYg7();\n\n            CeW.xYg7.T.mE1i g2 = new mE1i();\n        }\n\n        class E {\n            xYg7 PZn02 = new CeW.xYg7();\n        }\n\n        class qy {\n            xYg7 f = new xYg7();\n        }\n    }\n\n    static class I {}\n\n    class G {\n        CeW.G H2 = new CeW.G();\n\n        CeW.G n = new G();\n    }\n\n    CeW c18 = new CeW();\n}", innerClass.toString());
    }

    @Test
    public void test029() {
        Launcher launcher = new Launcher();
        launcher.getEnvironment().setComplianceLevel(17);
        launcher.getEnvironment().setAutoImports(true);
        launcher.getEnvironment().setShouldCompile(true);
        launcher.addInputResource(new VirtualFile("class GU {\n  class IR {\n    class b {\n      class e {\n        class d {\n          class n6soz {\n            class z {\n              class XD7 {\n\n                IR.b.e.d.n6soz.z W = new d.n6soz.z();\n              }\n              class V {\n\n                d.n6soz.z.V m0 = new V();\n                n6soz.z.V kTi = new d.n6soz.z.V();\n                GU iDyf = new GU();\n              }\n              class n {\n\n                b.e.d K = new IR.b.e.d();\n              }\n              class O8K{}\n              \n            }\n            class JHn {\n\n              GU.IR.b.e m = new GU.IR.b.e();\n              e.d.n6soz mZR = new GU.IR.b.e.d.n6soz();\n            }\n            class hc {\n\n              n6soz A = new GU.IR.b.e.d.n6soz();\n            }\n            class COH{}\n            \n          }\n          class o {\n\n            GU.IR Kl = new GU.IR();\n          }\n          class vwp{}\n          vwp h = new b.e.d.vwp();\n          GU.IR Kj = new IR();\n        }\n        \n      }\n      class Lq {\n\n        IR D = new IR();\n      }\n      class rF {\n\n        b D1 = new b();\n      }\n      \n    }\n    GU mvW = new GU();\n  }\n  class rd {\n\n    GU i = new GU();\n    GU S = new GU();\n  }\n  static class I{}\n  \n}"));
        CtType<?> innerClass = launcher.buildModel().getAllTypes().iterator().next();
        assertEquals("class GU {\n    class IR {\n        class b {\n            class e {\n                class d {\n                    class n6soz {\n                        class z {\n                            class XD7 {\n                                IR.b.e.d.n6soz.z W = new d.n6soz.z();\n                            }\n\n                            class V {\n                                d.n6soz.z.V m0 = new V();\n\n                                n6soz.z.V kTi = new d.n6soz.z.V();\n\n                                GU iDyf = new GU();\n                            }\n\n                            class n {\n                                b.e.d K = new IR.b.e.d();\n                            }\n\n                            class O8K {}\n                        }\n\n                        class JHn {\n                            GU.IR.b.e m = new GU.IR.b.e();\n\n                            e.d.n6soz mZR = new GU.IR.b.e.d.n6soz();\n                        }\n\n                        class hc {\n                            n6soz A = new GU.IR.b.e.d.n6soz();\n                        }\n\n                        class COH {}\n                    }\n\n                    class o {\n                        GU.IR Kl = new GU.IR();\n                    }\n\n                    class vwp {}\n\n                    vwp h = new b.e.d.vwp();\n\n                    GU.IR Kj = new IR();\n                }\n            }\n\n            class Lq {\n                IR D = new IR();\n            }\n\n            class rF {\n                b D1 = new b();\n            }\n        }\n\n        GU mvW = new GU();\n    }\n\n    class rd {\n        GU i = new GU();\n\n        GU S = new GU();\n    }\n\n    static class I {}\n}", innerClass.toString());
    }

    @Test
    public void test030() {
        Launcher launcher = new Launcher();
        launcher.getEnvironment().setComplianceLevel(17);
        launcher.getEnvironment().setAutoImports(true);
        launcher.getEnvironment().setShouldCompile(true);
        launcher.addInputResource(new VirtualFile("class y {\n  class v {\n    class Kp {\n      class k {\n        class J {\n          class I {\n            class C7e {\n              class o {\n                class wH {\n\n                  y.v.Kp.k.J.I iQly = new Kp.k.J.I();\n                }\n                class Wnc {\n\n                  Kp.k.J H6Non = new J();\n                  y yN = new y();\n                  k.J.I.C7e.o Doblu5 = new Kp.k.J.I.C7e.o();\n                  Kp r = new y.v.Kp();\n                }\n                \n              }\n              class ADR {\n\n                v.Kp s = new Kp();\n              }\n              \n            }\n            y.v m4 = new v();\n            y.v.Kp.k.J.I j = new v.Kp.k.J.I();\n            v KL = new v();\n          }\n          class u{}\n          \n        }\n        class iA {\n\n          v.Kp.k K = new y.v.Kp.k();\n        }\n        class l{}\n        y.v.Kp.k dC2 = new Kp.k();\n      }\n      static class h{}\n      class N4fa {\n\n        y N = new y();\n        Kp.N4fa c9 = new y.v.Kp.N4fa();\n      }\n      class r1 {\n\n        v Nr = new y.v();\n        v PVxb = new v();\n        y a_ho = new y();\n      }\n      k OM = new y.v.Kp.k();\n    }\n    class O {\n\n      y NMC = new y();\n      y.v S = new y.v();\n      y.v d = new y.v();\n      y Mg6 = new y();\n    }\n    static class MO{}\n    \n  }\n  class vD{}\n  y.v WyfX = new y.v();\n  y vch = new y();\n  y.v xSE = new v();\n  y VnJ = new y();\n  y NQ = new y();\n  y.v P = new y.v();\n  y BjH = new y();\n  y.v E = new y.v();\n}"));
        CtType<?> innerClass = launcher.buildModel().getAllTypes().iterator().next();
        assertEquals("class y {\n    class v {\n        class Kp {\n            class k {\n                class J {\n                    class I {\n                        class C7e {\n                            class o {\n                                class wH {\n                                    y.v.Kp.k.J.I iQly = new Kp.k.J.I();\n                                }\n\n                                class Wnc {\n                                    Kp.k.J H6Non = new J();\n\n                                    y yN = new y();\n\n                                    k.J.I.C7e.o Doblu5 = new Kp.k.J.I.C7e.o();\n\n                                    Kp r = new y.v.Kp();\n                                }\n                            }\n\n                            class ADR {\n                                v.Kp s = new Kp();\n                            }\n                        }\n\n                        y.v m4 = new v();\n\n                        y.v.Kp.k.J.I j = new v.Kp.k.J.I();\n\n                        v KL = new v();\n                    }\n\n                    class u {}\n                }\n\n                class iA {\n                    v.Kp.k K = new y.v.Kp.k();\n                }\n\n                class l {}\n\n                y.v.Kp.k dC2 = new Kp.k();\n            }\n\n            static class h {}\n\n            class N4fa {\n                y N = new y();\n\n                Kp.N4fa c9 = new y.v.Kp.N4fa();\n            }\n\n            class r1 {\n                v Nr = new y.v();\n\n                v PVxb = new v();\n\n                y a_ho = new y();\n            }\n\n            k OM = new y.v.Kp.k();\n        }\n\n        class O {\n            y NMC = new y();\n\n            y.v S = new y.v();\n\n            y.v d = new y.v();\n\n            y Mg6 = new y();\n        }\n\n        static class MO {}\n    }\n\n    class vD {}\n\n    y.v WyfX = new y.v();\n\n    y vch = new y();\n\n    y.v xSE = new v();\n\n    y VnJ = new y();\n\n    y NQ = new y();\n\n    y.v P = new y.v();\n\n    y BjH = new y();\n\n    y.v E = new y.v();\n}", innerClass.toString());
    }

    @Test
    public void test031() {
        Launcher launcher = new Launcher();
        launcher.getEnvironment().setComplianceLevel(17);
        launcher.getEnvironment().setAutoImports(true);
        launcher.getEnvironment().setShouldCompile(true);
        launcher.addInputResource(new VirtualFile("class Sk {\n  class PgL {\n    class M {\n      class i {\n        class c {\n          class O {\n            class D {\n              class j {\n                class il{}\n                class l {\n\n                  Sk.PgL.M enaV = new Sk.PgL.M();\n                }\n                \n              }\n              \n            }\n            \n          }\n          class u {\n\n            Sk.PgL n = new PgL();\n          }\n          class hh {\n\n            i zXm = new PgL.M.i();\n          }\n          class d {\n\n            M SK0H = new M();\n          }\n          PgL P = new PgL();\n          PgL.M PMA = new Sk.PgL.M();\n        }\n        class pj{}\n        static class chc{}\n        \n      }\n      \n    }\n    static class Mr{}\n    class g {\n\n      g Wl1 = new Sk.PgL.g();\n      PgL X = new PgL();\n      Sk.PgL.g I = new g();\n    }\n    class J {\n\n      PgL w = new Sk.PgL();\n    }\n    Sk Y = new Sk();\n    Sk zuHO = new Sk();\n  }\n  class t {\n\n    t Av = new t();\n  }\n  static class bK{}\n  \n}"));
        CtType<?> innerClass = launcher.buildModel().getAllTypes().iterator().next();
        assertEquals("class Sk {\n    class PgL {\n        class M {\n            class i {\n                class c {\n                    class O {\n                        class D {\n                            class j {\n                                class il {}\n\n                                class l {\n                                    Sk.PgL.M enaV = new Sk.PgL.M();\n                                }\n                            }\n                        }\n                    }\n\n                    class u {\n                        Sk.PgL n = new PgL();\n                    }\n\n                    class hh {\n                        i zXm = new PgL.M.i();\n                    }\n\n                    class d {\n                        M SK0H = new M();\n                    }\n\n                    PgL P = new PgL();\n\n                    PgL.M PMA = new Sk.PgL.M();\n                }\n\n                class pj {}\n\n                static class chc {}\n            }\n        }\n\n        static class Mr {}\n\n        class g {\n            g Wl1 = new Sk.PgL.g();\n\n            PgL X = new PgL();\n\n            Sk.PgL.g I = new g();\n        }\n\n        class J {\n            PgL w = new Sk.PgL();\n        }\n\n        Sk Y = new Sk();\n\n        Sk zuHO = new Sk();\n    }\n\n    class t {\n        t Av = new t();\n    }\n\n    static class bK {}\n}", innerClass.toString());
    }

    @Test
    public void test032() {
        Launcher launcher = new Launcher();
        launcher.getEnvironment().setComplianceLevel(17);
        launcher.getEnvironment().setAutoImports(true);
        launcher.getEnvironment().setShouldCompile(true);
        launcher.addInputResource(new VirtualFile("class fa {\n  class o {\n    class gZO {\n      class uutZI {\n        class X {\n          class WvwOyN {\n            class a {\n\n              fa x = new fa();\n              fa.o.gZO.uutZI qPs = new gZO.uutZI();\n            }\n            class m_ {\n\n              gZO S = new o.gZO();\n            }\n            class sRC9L{}\n            \n          }\n          class EefR{}\n          class Hl{}\n          class e {\n\n            fa.o ya = new o();\n            gZO.uutZI QcH = new o.gZO.uutZI();\n          }\n          \n        }\n        class B{}\n        \n      }\n      static class bX{}\n      class H {\n\n        o.gZO PKc = new o.gZO();\n      }\n      static class dxj7E9K7{}\n      \n    }\n    class Du4dFw{}\n    static class Z6t{}\n    \n  }\n  class q {\n\n    fa v = new fa();\n    q I = new fa.q();\n  }\n  static class ro{}\n  class YJ {\n\n    fa b = new fa();\n  }\n  fa.q Z = new fa.q();\n  fa.q TT = new q();\n}"));
        CtType<?> innerClass = launcher.buildModel().getAllTypes().iterator().next();
        assertEquals("class fa {\n    class o {\n        class gZO {\n            class uutZI {\n                class X {\n                    class WvwOyN {\n                        class a {\n                            fa x = new fa();\n\n                            fa.o.gZO.uutZI qPs = new gZO.uutZI();\n                        }\n\n                        class m_ {\n                            gZO S = new o.gZO();\n                        }\n\n                        class sRC9L {}\n                    }\n\n                    class EefR {}\n\n                    class Hl {}\n\n                    class e {\n                        fa.o ya = new o();\n\n                        gZO.uutZI QcH = new o.gZO.uutZI();\n                    }\n                }\n\n                class B {}\n            }\n\n            static class bX {}\n\n            class H {\n                o.gZO PKc = new o.gZO();\n            }\n\n            static class dxj7E9K7 {}\n        }\n\n        class Du4dFw {}\n\n        static class Z6t {}\n    }\n\n    class q {\n        fa v = new fa();\n\n        q I = new fa.q();\n    }\n\n    static class ro {}\n\n    class YJ {\n        fa b = new fa();\n    }\n\n    fa.q Z = new fa.q();\n\n    fa.q TT = new q();\n}", innerClass.toString());
    }

    @Test
    public void test033() {
        Launcher launcher = new Launcher();
        launcher.getEnvironment().setComplianceLevel(17);
        launcher.getEnvironment().setAutoImports(true);
        launcher.getEnvironment().setShouldCompile(true);
        launcher.addInputResource(new VirtualFile("class wvdhv {\n  class D2XxD {\n    class z {\n      class c {\n        class PF {\n          class w9n {\n            class s {\n              class P{}\n              class c3 {\n\n                c LKa_B = new D2XxD.z.c();\n              }\n              class n{}\n              class T4N_xc3 {\n\n                wvdhv.D2XxD TuT = new D2XxD();\n                wvdhv.D2XxD.z.c.PF.w9n.s o = new z.c.PF.w9n.s();\n                PF.w9n.s.T4N_xc3 V = new c.PF.w9n.s.T4N_xc3();\n              }\n              wvdhv.D2XxD oxj = new D2XxD();\n            }\n            class Ld {\n\n              wvdhv mjdQ2 = new wvdhv();\n              w9n.Ld W = new PF.w9n.Ld();\n            }\n            class Y9{}\n            class X{}\n            D2XxD.z.c ffH = new D2XxD.z.c();\n            z.c D = new wvdhv.D2XxD.z.c();\n            wvdhv.D2XxD.z.c XVr = new z.c();\n            D2XxD.z aE7p = new D2XxD.z();\n            wvdhv d = new wvdhv();\n          }\n          \n        }\n        class L {\n\n          D2XxD uDH = new D2XxD();\n        }\n        class J{}\n        wvdhv.D2XxD.z.c.L ygy_N = new z.c.L();\n      }\n      \n    }\n    class pDCd {\n\n      D2XxD.pDCd kV = new D2XxD.pDCd();\n      wvdhv k = new wvdhv();\n    }\n    class Ys{}\n    class rq{}\n    \n  }\n  class K {\n\n    K Y = new K();\n  }\n  \n}"));
        CtType<?> innerClass = launcher.buildModel().getAllTypes().iterator().next();
        assertEquals("class wvdhv {\n    class D2XxD {\n        class z {\n            class c {\n                class PF {\n                    class w9n {\n                        class s {\n                            class P {}\n\n                            class c3 {\n                                c LKa_B = new D2XxD.z.c();\n                            }\n\n                            class n {}\n\n                            class T4N_xc3 {\n                                wvdhv.D2XxD TuT = new D2XxD();\n\n                                wvdhv.D2XxD.z.c.PF.w9n.s o = new z.c.PF.w9n.s();\n\n                                PF.w9n.s.T4N_xc3 V = new c.PF.w9n.s.T4N_xc3();\n                            }\n\n                            wvdhv.D2XxD oxj = new D2XxD();\n                        }\n\n                        class Ld {\n                            wvdhv mjdQ2 = new wvdhv();\n\n                            w9n.Ld W = new PF.w9n.Ld();\n                        }\n\n                        class Y9 {}\n\n                        class X {}\n\n                        D2XxD.z.c ffH = new D2XxD.z.c();\n\n                        z.c D = new wvdhv.D2XxD.z.c();\n\n                        wvdhv.D2XxD.z.c XVr = new z.c();\n\n                        D2XxD.z aE7p = new D2XxD.z();\n\n                        wvdhv d = new wvdhv();\n                    }\n                }\n\n                class L {\n                    D2XxD uDH = new D2XxD();\n                }\n\n                class J {}\n\n                wvdhv.D2XxD.z.c.L ygy_N = new z.c.L();\n            }\n        }\n\n        class pDCd {\n            D2XxD.pDCd kV = new D2XxD.pDCd();\n\n            wvdhv k = new wvdhv();\n        }\n\n        class Ys {}\n\n        class rq {}\n    }\n\n    class K {\n        K Y = new K();\n    }\n}", innerClass.toString());
    }

    @Test
    public void test034() {
        Launcher launcher = new Launcher();
        launcher.getEnvironment().setComplianceLevel(17);
        launcher.getEnvironment().setAutoImports(true);
        launcher.getEnvironment().setShouldCompile(true);
        launcher.addInputResource(new VirtualFile("class TMo2XV {\n  class Z {\n    class QN {\n      class o {\n        class BC {\n          class M4 {\n            class a {\n              class c {\n\n                TMo2XV g = new TMo2XV();\n              }\n              class z{}\n              class PvNq{}\n              class B{}\n              o.BC l = new QN.o.BC();\n              TMo2XV.Z.QN Qx = new Z.QN();\n              TMo2XV.Z.QN.o.BC.M4.a VWFe7 = new QN.o.BC.M4.a();\n            }\n            class F{}\n            class k {\n\n              TMo2XV pH = new TMo2XV();\n              Z.QN.o Y0 = new o();\n              o.BC J = new o.BC();\n              QN.o.BC.M4.k fMFox = new BC.M4.k();\n              TMo2XV Do = new TMo2XV();\n              BC.M4 Si = new TMo2XV.Z.QN.o.BC.M4();\n            }\n            class L6RzdNn{}\n            \n          }\n          class C{}\n          class m {\n\n            Z UI = new Z();\n            TMo2XV q = new TMo2XV();\n            QN.o.BC.m H9n = new TMo2XV.Z.QN.o.BC.m();\n            QN.o.BC TM = new TMo2XV.Z.QN.o.BC();\n          }\n          class hB {\n\n            Z.QN cGNQ = new Z.QN();\n          }\n          \n        }\n        TMo2XV P = new TMo2XV();\n        Z.QN XJm = new QN();\n        TMo2XV.Z D2 = new TMo2XV.Z();\n        TMo2XV.Z.QN fm = new TMo2XV.Z.QN();\n        TMo2XV G7l = new TMo2XV();\n      }\n      class A {\n\n        TMo2XV d3C = new TMo2XV();\n        TMo2XV.Z j1 = new Z();\n      }\n      class t {\n\n        TMo2XV.Z.QN vt = new TMo2XV.Z.QN();\n        TMo2XV x = new TMo2XV();\n      }\n      class prp {\n\n        Z.QN Ry = new QN();\n      }\n      TMo2XV u = new TMo2XV();\n      TMo2XV.Z.QN.prp PY = new QN.prp();\n    }\n    Z.QN W = new QN();\n    TMo2XV.Z.QN X = new Z.QN();\n    TMo2XV vX = new TMo2XV();\n    TMo2XV CH = new TMo2XV();\n  }\n  \n}"));
        CtType<?> innerClass = launcher.buildModel().getAllTypes().iterator().next();
        assertEquals("class TMo2XV {\n    class Z {\n        class QN {\n            class o {\n                class BC {\n                    class M4 {\n                        class a {\n                            class c {\n                                TMo2XV g = new TMo2XV();\n                            }\n\n                            class z {}\n\n                            class PvNq {}\n\n                            class B {}\n\n                            o.BC l = new QN.o.BC();\n\n                            TMo2XV.Z.QN Qx = new Z.QN();\n\n                            TMo2XV.Z.QN.o.BC.M4.a VWFe7 = new QN.o.BC.M4.a();\n                        }\n\n                        class F {}\n\n                        class k {\n                            TMo2XV pH = new TMo2XV();\n\n                            Z.QN.o Y0 = new o();\n\n                            o.BC J = new o.BC();\n\n                            QN.o.BC.M4.k fMFox = new BC.M4.k();\n\n                            TMo2XV Do = new TMo2XV();\n\n                            BC.M4 Si = new TMo2XV.Z.QN.o.BC.M4();\n                        }\n\n                        class L6RzdNn {}\n                    }\n\n                    class C {}\n\n                    class m {\n                        Z UI = new Z();\n\n                        TMo2XV q = new TMo2XV();\n\n                        QN.o.BC.m H9n = new TMo2XV.Z.QN.o.BC.m();\n\n                        QN.o.BC TM = new TMo2XV.Z.QN.o.BC();\n                    }\n\n                    class hB {\n                        Z.QN cGNQ = new Z.QN();\n                    }\n                }\n\n                TMo2XV P = new TMo2XV();\n\n                Z.QN XJm = new QN();\n\n                TMo2XV.Z D2 = new TMo2XV.Z();\n\n                TMo2XV.Z.QN fm = new TMo2XV.Z.QN();\n\n                TMo2XV G7l = new TMo2XV();\n            }\n\n            class A {\n                TMo2XV d3C = new TMo2XV();\n\n                TMo2XV.Z j1 = new Z();\n            }\n\n            class t {\n                TMo2XV.Z.QN vt = new TMo2XV.Z.QN();\n\n                TMo2XV x = new TMo2XV();\n            }\n\n            class prp {\n                Z.QN Ry = new QN();\n            }\n\n            TMo2XV u = new TMo2XV();\n\n            TMo2XV.Z.QN.prp PY = new QN.prp();\n        }\n\n        Z.QN W = new QN();\n\n        TMo2XV.Z.QN X = new Z.QN();\n\n        TMo2XV vX = new TMo2XV();\n\n        TMo2XV CH = new TMo2XV();\n    }\n}", innerClass.toString());
    }

    @Test
    public void test035() {
        Launcher launcher = new Launcher();
        launcher.getEnvironment().setComplianceLevel(17);
        launcher.getEnvironment().setAutoImports(true);
        launcher.getEnvironment().setShouldCompile(true);
        launcher.addInputResource(new VirtualFile("class s {\n  class Ekt {\n    class HY {\n      class w {\n        class BDA {\n          class Z {\n            class k {\n              class O {\n                class G {\n                  class f {\n                    static class g{}\n                    class e {\n\n                      Z.k.O.G Qw = new BDA.Z.k.O.G();\n                      k.O.G.f.e Ki = new s.Ekt.HY.w.BDA.Z.k.O.G.f.e();\n                      s.Ekt.HY.w.BDA A = new w.BDA();\n                    }\n                    class a {\n\n                      s.Ekt eJ = new Ekt();\n                      HY.w.BDA R = new s.Ekt.HY.w.BDA();\n                    }\n                    \n                  }\n                  Ekt.HY M = new HY();\n                  Z.k.O.G Kq = new HY.w.BDA.Z.k.O.G();\n                  Ekt.HY.w.BDA.Z.k l2 = new BDA.Z.k();\n                }\n                class aj{}\n                \n              }\n              Ekt.HY J = new s.Ekt.HY();\n              HY.w.BDA.Z mDR = new w.BDA.Z();\n              Ekt vk = new s.Ekt();\n              s.Ekt P = new Ekt();\n            }\n            static class h{}\n            class kzsR{}\n            \n          }\n          class NH3Xa {\n\n            s.Ekt.HY.w.BDA.NH3Xa EQA0x = new s.Ekt.HY.w.BDA.NH3Xa();\n            s.Ekt gO = new s.Ekt();\n          }\n          \n        }\n        static class YAF{}\n        \n      }\n      s.Ekt x = new s.Ekt();\n    }\n    class p {\n\n      Ekt X = new Ekt();\n    }\n    \n  }\n  class d {\n\n    s V = new s();\n    s zt6 = new s();\n  }\n  s ut = new s();\n}"));
        CtType<?> innerClass = launcher.buildModel().getAllTypes().iterator().next();
        assertEquals("class s {\n    class Ekt {\n        class HY {\n            class w {\n                class BDA {\n                    class Z {\n                        class k {\n                            class O {\n                                class G {\n                                    class f {\n                                        static class g {}\n\n                                        class e {\n                                            Z.k.O.G Qw = new BDA.Z.k.O.G();\n\n                                            k.O.G.f.e Ki = new s.Ekt.HY.w.BDA.Z.k.O.G.f.e();\n\n                                            s.Ekt.HY.w.BDA A = new w.BDA();\n                                        }\n\n                                        class a {\n                                            s.Ekt eJ = new Ekt();\n\n                                            HY.w.BDA R = new s.Ekt.HY.w.BDA();\n                                        }\n                                    }\n\n                                    Ekt.HY M = new HY();\n\n                                    Z.k.O.G Kq = new HY.w.BDA.Z.k.O.G();\n\n                                    Ekt.HY.w.BDA.Z.k l2 = new BDA.Z.k();\n                                }\n\n                                class aj {}\n                            }\n\n                            Ekt.HY J = new s.Ekt.HY();\n\n                            HY.w.BDA.Z mDR = new w.BDA.Z();\n\n                            Ekt vk = new s.Ekt();\n\n                            s.Ekt P = new Ekt();\n                        }\n\n                        static class h {}\n\n                        class kzsR {}\n                    }\n\n                    class NH3Xa {\n                        s.Ekt.HY.w.BDA.NH3Xa EQA0x = new s.Ekt.HY.w.BDA.NH3Xa();\n\n                        s.Ekt gO = new s.Ekt();\n                    }\n                }\n\n                static class YAF {}\n            }\n\n            s.Ekt x = new s.Ekt();\n        }\n\n        class p {\n            Ekt X = new Ekt();\n        }\n    }\n\n    class d {\n        s V = new s();\n\n        s zt6 = new s();\n    }\n\n    s ut = new s();\n}", innerClass.toString());
    }

    @Test
    public void test036() {
        Launcher launcher = new Launcher();
        launcher.getEnvironment().setComplianceLevel(17);
        launcher.getEnvironment().setAutoImports(true);
        launcher.getEnvironment().setShouldCompile(true);
        launcher.addInputResource(new VirtualFile("class j {\n  class a {\n    class r {\n      class tO {\n        class NI {\n          class yjP {\n            class KPSfDE {\n              class xbr {\n                class aQ{}\n                class lkaQ{}\n                class WG {\n\n                  j.a.r b = new j.a.r();\n                  a.r f = new a.r();\n                  NI pG = new a.r.tO.NI();\n                  a n3 = new j.a();\n                }\n                class Q{}\n                \n              }\n              class h{}\n              class m{}\n              class n {\n\n                r.tO wf4 = new j.a.r.tO();\n              }\n              NI Z = new a.r.tO.NI();\n              a.r IiNO = new r();\n            }\n            class nm{}\n            class fB{}\n            j IeI0 = new j();\n            a l = new a();\n          }\n          class J{}\n          class D4U8g{}\n          \n        }\n        class xfunzIBiO7S {\n\n          a.r.tO M = new r.tO();\n        }\n        \n      }\n      class TK {\n\n        j.a kVN = new j.a();\n        j P = new j();\n      }\n      class Mt{}\n      j PII = new j();\n      j.a x = new j.a();\n    }\n    \n  }\n  class IL {\n\n    j bK = new j();\n  }\n  \n}"));
        CtType<?> innerClass = launcher.buildModel().getAllTypes().iterator().next();
        assertEquals("class j {\n    class a {\n        class r {\n            class tO {\n                class NI {\n                    class yjP {\n                        class KPSfDE {\n                            class xbr {\n                                class aQ {}\n\n                                class lkaQ {}\n\n                                class WG {\n                                    j.a.r b = new j.a.r();\n\n                                    a.r f = new a.r();\n\n                                    NI pG = new a.r.tO.NI();\n\n                                    a n3 = new j.a();\n                                }\n\n                                class Q {}\n                            }\n\n                            class h {}\n\n                            class m {}\n\n                            class n {\n                                r.tO wf4 = new j.a.r.tO();\n                            }\n\n                            NI Z = new a.r.tO.NI();\n\n                            a.r IiNO = new r();\n                        }\n\n                        class nm {}\n\n                        class fB {}\n\n                        j IeI0 = new j();\n\n                        a l = new a();\n                    }\n\n                    class J {}\n\n                    class D4U8g {}\n                }\n\n                class xfunzIBiO7S {\n                    a.r.tO M = new r.tO();\n                }\n            }\n\n            class TK {\n                j.a kVN = new j.a();\n\n                j P = new j();\n            }\n\n            class Mt {}\n\n            j PII = new j();\n\n            j.a x = new j.a();\n        }\n    }\n\n    class IL {\n        j bK = new j();\n    }\n}", innerClass.toString());
    }

    @Test
    public void test037() {
        Launcher launcher = new Launcher();
        launcher.getEnvironment().setComplianceLevel(17);
        launcher.getEnvironment().setAutoImports(true);
        launcher.getEnvironment().setShouldCompile(true);
        launcher.addInputResource(new VirtualFile("class ew {\n  class y {\n    class Upgz {\n      class Z {\n        class kNaW {\n          class mXmBeF {\n            class N {\n              class uV {\n\n                kNaW T = new Z.kNaW();\n              }\n              class P9 {\n\n                Upgz.Z.kNaW.mXmBeF V = new kNaW.mXmBeF();\n              }\n              class Cg {\n\n                Upgz.Z.kNaW.mXmBeF.N aL6d = new N();\n              }\n              y.Upgz.Z w1oF = new ew.y.Upgz.Z();\n              ew.y.Upgz m = new Upgz();\n            }\n            class iakJ{}\n            Upgz.Z.kNaW.mXmBeF.N Y = new Z.kNaW.mXmBeF.N();\n          }\n          class O{}\n          class d{}\n          \n        }\n        class WIw2VqJB {\n\n          ew.y A4 = new ew.y();\n          Upgz i = new Upgz();\n          Upgz Z_ = new y.Upgz();\n          Upgz w = new Upgz();\n          Upgz.Z EU = new ew.y.Upgz.Z();\n          ew.y A = new y();\n          ew.y z8 = new y();\n        }\n        \n      }\n      static class u{}\n      static class X5wI{}\n      \n    }\n    static class z7{}\n    \n  }\n  class h {\n\n    h t6N = new ew.h();\n    ew pDN = new ew();\n  }\n  class p{}\n  class vM {\n\n    ew nO = new ew();\n    ew Ba = new ew();\n    vM dE = new vM();\n  }\n  ew J = new ew();\n}"));
        CtType<?> innerClass = launcher.buildModel().getAllTypes().iterator().next();
        assertEquals("class ew {\n    class y {\n        class Upgz {\n            class Z {\n                class kNaW {\n                    class mXmBeF {\n                        class N {\n                            class uV {\n                                kNaW T = new Z.kNaW();\n                            }\n\n                            class P9 {\n                                Upgz.Z.kNaW.mXmBeF V = new kNaW.mXmBeF();\n                            }\n\n                            class Cg {\n                                Upgz.Z.kNaW.mXmBeF.N aL6d = new N();\n                            }\n\n                            y.Upgz.Z w1oF = new ew.y.Upgz.Z();\n\n                            ew.y.Upgz m = new Upgz();\n                        }\n\n                        class iakJ {}\n\n                        Upgz.Z.kNaW.mXmBeF.N Y = new Z.kNaW.mXmBeF.N();\n                    }\n\n                    class O {}\n\n                    class d {}\n                }\n\n                class WIw2VqJB {\n                    ew.y A4 = new ew.y();\n\n                    Upgz i = new Upgz();\n\n                    Upgz Z_ = new y.Upgz();\n\n                    Upgz w = new Upgz();\n\n                    Upgz.Z EU = new ew.y.Upgz.Z();\n\n                    ew.y A = new y();\n\n                    ew.y z8 = new y();\n                }\n            }\n\n            static class u {}\n\n            static class X5wI {}\n        }\n\n        static class z7 {}\n    }\n\n    class h {\n        h t6N = new ew.h();\n\n        ew pDN = new ew();\n    }\n\n    class p {}\n\n    class vM {\n        ew nO = new ew();\n\n        ew Ba = new ew();\n\n        vM dE = new vM();\n    }\n\n    ew J = new ew();\n}", innerClass.toString());
    }

    @Test
    public void test038() {
        Launcher launcher = new Launcher();
        launcher.getEnvironment().setComplianceLevel(17);
        launcher.getEnvironment().setAutoImports(true);
        launcher.getEnvironment().setShouldCompile(true);
        launcher.addInputResource(new VirtualFile("class j {\n  class BBgIk {\n    class o {\n      class D {\n        class Ni {\n          class b {\n            class u {\n              class F {\n                class a {\n                  class RQ{}\n                  class s{}\n                  class wI {\n\n                    j.BBgIk jwRtZf = new BBgIk();\n                  }\n                  class Z {\n\n                    j.BBgIk c = new j.BBgIk();\n                  }\n                  \n                }\n                j.BBgIk.o.D.Ni.b.u.F.a g = new Ni.b.u.F.a();\n                j vJINCd = new j();\n              }\n              \n            }\n            o.D Hq = new BBgIk.o.D();\n          }\n          class T{}\n          class I9{}\n          j.BBgIk R = new BBgIk();\n        }\n        class I {\n\n          BBgIk Nau = new j.BBgIk();\n          I ai = new o.D.I();\n          BBgIk.o.D f = new j.BBgIk.o.D();\n          BBgIk vi = new j.BBgIk();\n        }\n        class Q7{}\n        class h {\n\n          j.BBgIk X = new BBgIk();\n          BBgIk.o.D.h O = new o.D.h();\n        }\n        \n      }\n      class fsZ{}\n      class fm {\n\n        o.fm Ry = new BBgIk.o.fm();\n      }\n      class Cm {\n\n        BBgIk.o KBV = new BBgIk.o();\n      }\n      o.D U = new BBgIk.o.D();\n      j.BBgIk.o yn = new j.BBgIk.o();\n    }\n    j GQq = new j();\n  }\n  class n {\n\n    j.n bG = new n();\n  }\n  static class aW{}\n  \n}"));
        CtType<?> innerClass = launcher.buildModel().getAllTypes().iterator().next();
        assertEquals("class j {\n    class BBgIk {\n        class o {\n            class D {\n                class Ni {\n                    class b {\n                        class u {\n                            class F {\n                                class a {\n                                    class RQ {}\n\n                                    class s {}\n\n                                    class wI {\n                                        j.BBgIk jwRtZf = new BBgIk();\n                                    }\n\n                                    class Z {\n                                        j.BBgIk c = new j.BBgIk();\n                                    }\n                                }\n\n                                j.BBgIk.o.D.Ni.b.u.F.a g = new Ni.b.u.F.a();\n\n                                j vJINCd = new j();\n                            }\n                        }\n\n                        o.D Hq = new BBgIk.o.D();\n                    }\n\n                    class T {}\n\n                    class I9 {}\n\n                    j.BBgIk R = new BBgIk();\n                }\n\n                class I {\n                    BBgIk Nau = new j.BBgIk();\n\n                    I ai = new o.D.I();\n\n                    BBgIk.o.D f = new j.BBgIk.o.D();\n\n                    BBgIk vi = new j.BBgIk();\n                }\n\n                class Q7 {}\n\n                class h {\n                    j.BBgIk X = new BBgIk();\n\n                    BBgIk.o.D.h O = new o.D.h();\n                }\n            }\n\n            class fsZ {}\n\n            class fm {\n                o.fm Ry = new BBgIk.o.fm();\n            }\n\n            class Cm {\n                BBgIk.o KBV = new BBgIk.o();\n            }\n\n            o.D U = new BBgIk.o.D();\n\n            j.BBgIk.o yn = new j.BBgIk.o();\n        }\n\n        j GQq = new j();\n    }\n\n    class n {\n        j.n bG = new n();\n    }\n\n    static class aW {}\n}", innerClass.toString());
    }

    @Test
    public void test039() {
        Launcher launcher = new Launcher();
        launcher.getEnvironment().setComplianceLevel(17);
        launcher.getEnvironment().setAutoImports(true);
        launcher.getEnvironment().setShouldCompile(true);
        launcher.addInputResource(new VirtualFile("class u {\n  class czK {\n    class at {\n      class yGrG {\n        class z9 {\n          class bMT {\n            class qa {\n              class I5U {\n                class a {\n                  class F{}\n                  class ybkWfmE6{}\n                  class Ly{}\n                  class z2 {\n\n                    u.czK.at.yGrG.z9.bMT.qa.I5U h = new qa.I5U();\n                  }\n                  bMT.qa.I5U D = new bMT.qa.I5U();\n                }\n                at.yGrG.z9.bMT.qa.I5U.a BST = new czK.at.yGrG.z9.bMT.qa.I5U.a();\n              }\n              class s {\n\n                z9 dKvD = new yGrG.z9();\n              }\n              class k{}\n              class b5S4V629 {\n\n                z9.bMT n1aS = new bMT();\n                at.yGrG q = new at.yGrG();\n              }\n              yGrG H = new czK.at.yGrG();\n              czK.at.yGrG B = new at.yGrG();\n              bMT.qa.I5U F8JsUzF = new bMT.qa.I5U();\n            }\n            at en = new czK.at();\n            u.czK.at.yGrG.z9.bMT.qa K = new qa();\n          }\n          class Z {\n\n            yGrG DN4p = new yGrG();\n          }\n          class Vr6 {\n\n            u.czK.at Ou = new czK.at();\n            u.czK kR3 = new czK();\n            at.yGrG E = new at.yGrG();\n            Vr6 ED = new czK.at.yGrG.z9.Vr6();\n          }\n          class N {\n\n            czK.at.yGrG.z9.N j = new czK.at.yGrG.z9.N();\n            czK.at Og = new czK.at();\n            yGrG C = new czK.at.yGrG();\n          }\n          at.yGrG kt = new czK.at.yGrG();\n        }\n        at uE = new czK.at();\n        czK U = new czK();\n      }\n      u w = new u();\n    }\n    class Q {\n\n      czK bbcT = new u.czK();\n      czK G = new czK();\n      Q A = new u.czK.Q();\n    }\n    static class M{}\n    u O = new u();\n    u t = new u();\n  }\n  \n}"));
        CtType<?> innerClass = launcher.buildModel().getAllTypes().iterator().next();
        assertEquals("class u {\n    class czK {\n        class at {\n            class yGrG {\n                class z9 {\n                    class bMT {\n                        class qa {\n                            class I5U {\n                                class a {\n                                    class F {}\n\n                                    class ybkWfmE6 {}\n\n                                    class Ly {}\n\n                                    class z2 {\n                                        u.czK.at.yGrG.z9.bMT.qa.I5U h = new qa.I5U();\n                                    }\n\n                                    bMT.qa.I5U D = new bMT.qa.I5U();\n                                }\n\n                                at.yGrG.z9.bMT.qa.I5U.a BST = new czK.at.yGrG.z9.bMT.qa.I5U.a();\n                            }\n\n                            class s {\n                                z9 dKvD = new yGrG.z9();\n                            }\n\n                            class k {}\n\n                            class b5S4V629 {\n                                z9.bMT n1aS = new bMT();\n\n                                at.yGrG q = new at.yGrG();\n                            }\n\n                            yGrG H = new czK.at.yGrG();\n\n                            czK.at.yGrG B = new at.yGrG();\n\n                            bMT.qa.I5U F8JsUzF = new bMT.qa.I5U();\n                        }\n\n                        at en = new czK.at();\n\n                        u.czK.at.yGrG.z9.bMT.qa K = new qa();\n                    }\n\n                    class Z {\n                        yGrG DN4p = new yGrG();\n                    }\n\n                    class Vr6 {\n                        u.czK.at Ou = new czK.at();\n\n                        u.czK kR3 = new czK();\n\n                        at.yGrG E = new at.yGrG();\n\n                        Vr6 ED = new czK.at.yGrG.z9.Vr6();\n                    }\n\n                    class N {\n                        czK.at.yGrG.z9.N j = new czK.at.yGrG.z9.N();\n\n                        czK.at Og = new czK.at();\n\n                        yGrG C = new czK.at.yGrG();\n                    }\n\n                    at.yGrG kt = new czK.at.yGrG();\n                }\n\n                at uE = new czK.at();\n\n                czK U = new czK();\n            }\n\n            u w = new u();\n        }\n\n        class Q {\n            czK bbcT = new u.czK();\n\n            czK G = new czK();\n\n            Q A = new u.czK.Q();\n        }\n\n        static class M {}\n\n        u O = new u();\n\n        u t = new u();\n    }\n}", innerClass.toString());
    }

    @Test
    public void test040() {
        Launcher launcher = new Launcher();
        launcher.getEnvironment().setComplianceLevel(17);
        launcher.getEnvironment().setAutoImports(true);
        launcher.getEnvironment().setShouldCompile(true);
        launcher.addInputResource(new VirtualFile("class n {\n  class R9 {\n    class R {\n      class g {\n        class Fo_ {\n          class Iw {\n            class Q {\n              class Ba {\n                class B {\n\n                  n.R9 QZ9 = new R9();\n                  n.R9.R.g.Fo_.Iw.Q mex = new R.g.Fo_.Iw.Q();\n                }\n                class y{}\n                \n              }\n              class t{}\n              class U{}\n              class P8{}\n              \n            }\n            class k0{}\n            n pjcgN47b = new n();\n          }\n          class H{}\n          Iw iV = new g.Fo_.Iw();\n        }\n        g.Fo_ RQ6qm = new Fo_();\n      }\n      class T{}\n      \n    }\n    class f {\n\n      R9.f A7 = new f();\n      f MzQ = new n.R9.f();\n    }\n    class A{}\n    \n  }\n  class Oy {\n\n    n s = new n();\n    Oy uyR = new Oy();\n    n F = new n();\n    Oy E = new n.Oy();\n    n N = new n();\n  }\n  class tW {\n\n    n.tW O = new tW();\n    tW N0 = new tW();\n    tW D = new n.tW();\n    n.tW mZ = new n.tW();\n    n OP8h = new n();\n    n.tW J = new n.tW();\n    n.tW wHn = new n.tW();\n  }\n  static class qp5{}\n  R9 iuD = new n.R9();\n  n.qp5 u = new qp5();\n  n d = new n();\n}"));
        CtType<?> innerClass = launcher.buildModel().getAllTypes().iterator().next();
        assertEquals("class n {\n    class R9 {\n        class R {\n            class g {\n                class Fo_ {\n                    class Iw {\n                        class Q {\n                            class Ba {\n                                class B {\n                                    n.R9 QZ9 = new R9();\n\n                                    n.R9.R.g.Fo_.Iw.Q mex = new R.g.Fo_.Iw.Q();\n                                }\n\n                                class y {}\n                            }\n\n                            class t {}\n\n                            class U {}\n\n                            class P8 {}\n                        }\n\n                        class k0 {}\n\n                        n pjcgN47b = new n();\n                    }\n\n                    class H {}\n\n                    Iw iV = new g.Fo_.Iw();\n                }\n\n                g.Fo_ RQ6qm = new Fo_();\n            }\n\n            class T {}\n        }\n\n        class f {\n            R9.f A7 = new f();\n\n            f MzQ = new n.R9.f();\n        }\n\n        class A {}\n    }\n\n    class Oy {\n        n s = new n();\n\n        Oy uyR = new Oy();\n\n        n F = new n();\n\n        Oy E = new n.Oy();\n\n        n N = new n();\n    }\n\n    class tW {\n        n.tW O = new tW();\n\n        tW N0 = new tW();\n\n        tW D = new n.tW();\n\n        n.tW mZ = new n.tW();\n\n        n OP8h = new n();\n\n        n.tW J = new n.tW();\n\n        n.tW wHn = new n.tW();\n    }\n\n    static class qp5 {}\n\n    R9 iuD = new n.R9();\n\n    n.qp5 u = new qp5();\n\n    n d = new n();\n}", innerClass.toString());
    }

    @Test
    public void test041() {
        Launcher launcher = new Launcher();
        launcher.getEnvironment().setComplianceLevel(17);
        launcher.getEnvironment().setAutoImports(true);
        launcher.getEnvironment().setShouldCompile(true);
        launcher.addInputResource(new VirtualFile("class GX {\n  class L {\n    class Xm {\n      class R5 {\n        class AsAUrsV {\n          class P {\n            class E8U {\n              class m {\n                class X {\n                  class Wc {\n\n                    AsAUrsV.P.E8U.m.X.Wc C = new P.E8U.m.X.Wc();\n                    GX.L.Xm.R5 I = new L.Xm.R5();\n                  }\n                  class Q {\n\n                    AsAUrsV.P.E8U oxoENw = new P.E8U();\n                  }\n                  P.E8U.m.X kjm5 = new Xm.R5.AsAUrsV.P.E8U.m.X();\n                }\n                class h5{}\n                class Lf {\n\n                  L.Xm.R5.AsAUrsV.P y = new R5.AsAUrsV.P();\n                  Xm YL1Bhyz = new Xm();\n                }\n                class d {\n\n                  L.Xm.R5.AsAUrsV.P.E8U.m kj = new R5.AsAUrsV.P.E8U.m();\n                  d v = new P.E8U.m.d();\n                  GX.L.Xm Td = new L.Xm();\n                  L.Xm.R5 H = new GX.L.Xm.R5();\n                  GX HF = new GX();\n                }\n                \n              }\n              class k{}\n              class Va {\n\n                AsAUrsV.P qGgV = new P();\n              }\n              class TS {\n\n                GX TX = new GX();\n              }\n              \n            }\n            \n          }\n          class b {\n\n            Xm mZ = new L.Xm();\n            L s = new L();\n          }\n          class z1{}\n          AsAUrsV K2t = new R5.AsAUrsV();\n          L f3 = new GX.L();\n        }\n        \n      }\n      class YIt {\n\n        L nn = new GX.L();\n        YIt wSWXzn = new GX.L.Xm.YIt();\n        Xm.YIt Gb = new Xm.YIt();\n      }\n      \n    }\n    \n  }\n  static class Tp{}\n  \n}"));
        CtType<?> innerClass = launcher.buildModel().getAllTypes().iterator().next();
        assertEquals("class GX {\n    class L {\n        class Xm {\n            class R5 {\n                class AsAUrsV {\n                    class P {\n                        class E8U {\n                            class m {\n                                class X {\n                                    class Wc {\n                                        AsAUrsV.P.E8U.m.X.Wc C = new P.E8U.m.X.Wc();\n\n                                        GX.L.Xm.R5 I = new L.Xm.R5();\n                                    }\n\n                                    class Q {\n                                        AsAUrsV.P.E8U oxoENw = new P.E8U();\n                                    }\n\n                                    P.E8U.m.X kjm5 = new Xm.R5.AsAUrsV.P.E8U.m.X();\n                                }\n\n                                class h5 {}\n\n                                class Lf {\n                                    L.Xm.R5.AsAUrsV.P y = new R5.AsAUrsV.P();\n\n                                    Xm YL1Bhyz = new Xm();\n                                }\n\n                                class d {\n                                    L.Xm.R5.AsAUrsV.P.E8U.m kj = new R5.AsAUrsV.P.E8U.m();\n\n                                    d v = new P.E8U.m.d();\n\n                                    GX.L.Xm Td = new L.Xm();\n\n                                    L.Xm.R5 H = new GX.L.Xm.R5();\n\n                                    GX HF = new GX();\n                                }\n                            }\n\n                            class k {}\n\n                            class Va {\n                                AsAUrsV.P qGgV = new P();\n                            }\n\n                            class TS {\n                                GX TX = new GX();\n                            }\n                        }\n                    }\n\n                    class b {\n                        Xm mZ = new L.Xm();\n\n                        L s = new L();\n                    }\n\n                    class z1 {}\n\n                    AsAUrsV K2t = new R5.AsAUrsV();\n\n                    L f3 = new GX.L();\n                }\n            }\n\n            class YIt {\n                L nn = new GX.L();\n\n                YIt wSWXzn = new GX.L.Xm.YIt();\n\n                Xm.YIt Gb = new Xm.YIt();\n            }\n        }\n    }\n\n    static class Tp {}\n}", innerClass.toString());
    }

    @Test
    public void test042() {
        Launcher launcher = new Launcher();
        launcher.getEnvironment().setComplianceLevel(17);
        launcher.getEnvironment().setAutoImports(true);
        launcher.getEnvironment().setShouldCompile(true);
        launcher.addInputResource(new VirtualFile("class Z {\n  class G6 {\n    class ZWY {\n      class C {\n        class o {\n          class MR5 {\n            class b {\n              class Y {\n                class H{}\n                class E{}\n                class ls{}\n                class a {\n\n                  ZWY.C.o.MR5.b.Y pL = new Z.G6.ZWY.C.o.MR5.b.Y();\n                  o.MR5 Q = new o.MR5();\n                  ZWY.C dG = new C();\n                  C.o.MR5.b.Y.a w = new G6.ZWY.C.o.MR5.b.Y.a();\n                  Y.a M = new a();\n                  ZWY CMgG_ = new G6.ZWY();\n                }\n                C.o.MR5 CN9 = new Z.G6.ZWY.C.o.MR5();\n              }\n              class d {\n\n                Z.G6.ZWY.C.o.MR5.b wg = new G6.ZWY.C.o.MR5.b();\n              }\n              class sO{}\n              class l{}\n              \n            }\n            class iS{}\n            class kA07 {\n\n              kA07 oPy9h = new o.MR5.kA07();\n              G6 jd = new G6();\n              Z.G6 iU = new G6();\n              Z.G6.ZWY g9 = new Z.G6.ZWY();\n            }\n            \n          }\n          class utu {\n\n            Z Pt = new Z();\n          }\n          \n        }\n        class ugs {\n\n          ZWY.C SE = new ZWY.C();\n        }\n        \n      }\n      ZWY zaeC = new ZWY();\n      Z v = new Z();\n    }\n    class FYWl{}\n    class q {\n\n      Z.G6 HjzA = new G6();\n      Z Hel = new Z();\n    }\n    G6.FYWl TE = new Z.G6.FYWl();\n    Z A = new Z();\n  }\n  static class WF{}\n  static class K{}\n  \n}"));
        CtType<?> innerClass = launcher.buildModel().getAllTypes().iterator().next();
        assertEquals("class Z {\n    class G6 {\n        class ZWY {\n            class C {\n                class o {\n                    class MR5 {\n                        class b {\n                            class Y {\n                                class H {}\n\n                                class E {}\n\n                                class ls {}\n\n                                class a {\n                                    ZWY.C.o.MR5.b.Y pL = new Z.G6.ZWY.C.o.MR5.b.Y();\n\n                                    o.MR5 Q = new o.MR5();\n\n                                    ZWY.C dG = new C();\n\n                                    C.o.MR5.b.Y.a w = new G6.ZWY.C.o.MR5.b.Y.a();\n\n                                    Y.a M = new a();\n\n                                    ZWY CMgG_ = new G6.ZWY();\n                                }\n\n                                C.o.MR5 CN9 = new Z.G6.ZWY.C.o.MR5();\n                            }\n\n                            class d {\n                                Z.G6.ZWY.C.o.MR5.b wg = new G6.ZWY.C.o.MR5.b();\n                            }\n\n                            class sO {}\n\n                            class l {}\n                        }\n\n                        class iS {}\n\n                        class kA07 {\n                            kA07 oPy9h = new o.MR5.kA07();\n\n                            G6 jd = new G6();\n\n                            Z.G6 iU = new G6();\n\n                            Z.G6.ZWY g9 = new Z.G6.ZWY();\n                        }\n                    }\n\n                    class utu {\n                        Z Pt = new Z();\n                    }\n                }\n\n                class ugs {\n                    ZWY.C SE = new ZWY.C();\n                }\n            }\n\n            ZWY zaeC = new ZWY();\n\n            Z v = new Z();\n        }\n\n        class FYWl {}\n\n        class q {\n            Z.G6 HjzA = new G6();\n\n            Z Hel = new Z();\n        }\n\n        G6.FYWl TE = new Z.G6.FYWl();\n\n        Z A = new Z();\n    }\n\n    static class WF {}\n\n    static class K {}\n}", innerClass.toString());
    }

    @Test
    public void test043() {
        Launcher launcher = new Launcher();
        launcher.getEnvironment().setComplianceLevel(17);
        launcher.getEnvironment().setAutoImports(true);
        launcher.getEnvironment().setShouldCompile(true);
        launcher.addInputResource(new VirtualFile("class P {\n  class G {\n    class r {\n      class mE {\n        class l {\n          class P1G {\n            class J {\n              class iY {\n                class nv{}\n                class EU {\n\n                  P.G j = new G();\n                  P.G.r.mE.l.P1G.J.iY nX = new P1G.J.iY();\n                  mE.l.P1G.J.iY.EU ly = new P1G.J.iY.EU();\n                  P1G.J.iY.EU sX = new l.P1G.J.iY.EU();\n                }\n                class ZDW{}\n                \n              }\n              \n            }\n            class t {\n\n              r f = new G.r();\n              P y = new P();\n            }\n            \n          }\n          class Z {\n\n            G.r EgOH = new r();\n            G e = new G();\n          }\n          class o{}\n          r x = new P.G.r();\n          G.r.mE.l.P1G FVuPm = new P1G();\n        }\n        class dPA {\n\n          mE Y = new P.G.r.mE();\n          P.G u = new P.G();\n          G b = new P.G();\n        }\n        P Ie = new P();\n      }\n      class a{}\n      class M0 {\n\n        G g = new G();\n      }\n      class r6{}\n      P L = new P();\n    }\n    class Bogn {\n\n      G h = new G();\n      G xGI = new P.G();\n      P.G s = new P.G();\n    }\n    G pCj = new P.G();\n  }\n  static class w2{}\n  static class I{}\n  class M {\n\n    P GBX = new P();\n    P MK = new P();\n    M W = new M();\n  }\n  \n}"));
        CtType<?> innerClass = launcher.buildModel().getAllTypes().iterator().next();
        assertEquals("class P {\n    class G {\n        class r {\n            class mE {\n                class l {\n                    class P1G {\n                        class J {\n                            class iY {\n                                class nv {}\n\n                                class EU {\n                                    P.G j = new G();\n\n                                    P.G.r.mE.l.P1G.J.iY nX = new P1G.J.iY();\n\n                                    mE.l.P1G.J.iY.EU ly = new P1G.J.iY.EU();\n\n                                    P1G.J.iY.EU sX = new l.P1G.J.iY.EU();\n                                }\n\n                                class ZDW {}\n                            }\n                        }\n\n                        class t {\n                            r f = new G.r();\n\n                            P y = new P();\n                        }\n                    }\n\n                    class Z {\n                        G.r EgOH = new r();\n\n                        G e = new G();\n                    }\n\n                    class o {}\n\n                    r x = new P.G.r();\n\n                    G.r.mE.l.P1G FVuPm = new P1G();\n                }\n\n                class dPA {\n                    mE Y = new P.G.r.mE();\n\n                    P.G u = new P.G();\n\n                    G b = new P.G();\n                }\n\n                P Ie = new P();\n            }\n\n            class a {}\n\n            class M0 {\n                G g = new G();\n            }\n\n            class r6 {}\n\n            P L = new P();\n        }\n\n        class Bogn {\n            G h = new G();\n\n            G xGI = new P.G();\n\n            P.G s = new P.G();\n        }\n\n        G pCj = new P.G();\n    }\n\n    static class w2 {}\n\n    static class I {}\n\n    class M {\n        P GBX = new P();\n\n        P MK = new P();\n\n        M W = new M();\n    }\n}", innerClass.toString());
    }

    @Test
    public void test044() {
        Launcher launcher = new Launcher();
        launcher.getEnvironment().setComplianceLevel(17);
        launcher.getEnvironment().setAutoImports(true);
        launcher.getEnvironment().setShouldCompile(true);
        launcher.addInputResource(new VirtualFile("class vv {\n  class Z {\n    class Q {\n      class R {\n        class OWr {\n          class p {\n            class Iu9ynsA {\n              class Zh{}\n              class EX {\n\n                Q.R.OWr.p.Iu9ynsA j = new Z.Q.R.OWr.p.Iu9ynsA();\n                p HX = new R.OWr.p();\n                vv.Z.Q ro = new vv.Z.Q();\n                Z.Q O = new vv.Z.Q();\n                OWr.p.Iu9ynsA.EX d = new Q.R.OWr.p.Iu9ynsA.EX();\n                vv.Z.Q.R f = new Q.R();\n              }\n              class L{}\n              R.OWr vaVy = new Q.R.OWr();\n              Z RhW = new Z();\n            }\n            class TllX {\n\n              R T = new Q.R();\n            }\n            class E{}\n            vv.Z.Q X = new Z.Q();\n            p kT = new R.OWr.p();\n          }\n          class e {\n\n            vv.Z z = new vv.Z();\n            Z Zj = new Z();\n          }\n          class t {\n\n            Z rZ = new Z();\n            Q.R Mb = new Z.Q.R();\n            vv.Z.Q U = new Z.Q();\n            Q M = new Q();\n            R h = new Z.Q.R();\n          }\n          class hD9 {\n\n            hD9 Ef = new hD9();\n          }\n          \n        }\n        class ZzV{}\n        \n      }\n      class N{}\n      R Iv = new vv.Z.Q.R();\n    }\n    class XV {\n\n      vv.Z Oi = new Z();\n      vv J = new vv();\n      XV Lx = new vv.Z.XV();\n      vv.Z.XV yG = new XV();\n    }\n    \n  }\n  static class wZefi2n5{}\n  class y {\n\n    vv.y C_ = new vv.y();\n    vv.y Il0 = new vv.y();\n  }\n  vv uEC = new vv();\n  wZefi2n5 K = new wZefi2n5();\n  vv.Z VVo = new Z();\n}"));
        CtType<?> innerClass = launcher.buildModel().getAllTypes().iterator().next();
        assertEquals("class vv {\n    class Z {\n        class Q {\n            class R {\n                class OWr {\n                    class p {\n                        class Iu9ynsA {\n                            class Zh {}\n\n                            class EX {\n                                Q.R.OWr.p.Iu9ynsA j = new Z.Q.R.OWr.p.Iu9ynsA();\n\n                                p HX = new R.OWr.p();\n\n                                vv.Z.Q ro = new vv.Z.Q();\n\n                                Z.Q O = new vv.Z.Q();\n\n                                OWr.p.Iu9ynsA.EX d = new Q.R.OWr.p.Iu9ynsA.EX();\n\n                                vv.Z.Q.R f = new Q.R();\n                            }\n\n                            class L {}\n\n                            R.OWr vaVy = new Q.R.OWr();\n\n                            Z RhW = new Z();\n                        }\n\n                        class TllX {\n                            R T = new Q.R();\n                        }\n\n                        class E {}\n\n                        vv.Z.Q X = new Z.Q();\n\n                        p kT = new R.OWr.p();\n                    }\n\n                    class e {\n                        vv.Z z = new vv.Z();\n\n                        Z Zj = new Z();\n                    }\n\n                    class t {\n                        Z rZ = new Z();\n\n                        Q.R Mb = new Z.Q.R();\n\n                        vv.Z.Q U = new Z.Q();\n\n                        Q M = new Q();\n\n                        R h = new Z.Q.R();\n                    }\n\n                    class hD9 {\n                        hD9 Ef = new hD9();\n                    }\n                }\n\n                class ZzV {}\n            }\n\n            class N {}\n\n            R Iv = new vv.Z.Q.R();\n        }\n\n        class XV {\n            vv.Z Oi = new Z();\n\n            vv J = new vv();\n\n            XV Lx = new vv.Z.XV();\n\n            vv.Z.XV yG = new XV();\n        }\n    }\n\n    static class wZefi2n5 {}\n\n    class y {\n        vv.y C_ = new vv.y();\n\n        vv.y Il0 = new vv.y();\n    }\n\n    vv uEC = new vv();\n\n    wZefi2n5 K = new wZefi2n5();\n\n    vv.Z VVo = new Z();\n}", innerClass.toString());
    }

    @Test
    public void test045() {
        Launcher launcher = new Launcher();
        launcher.getEnvironment().setComplianceLevel(17);
        launcher.getEnvironment().setAutoImports(true);
        launcher.getEnvironment().setShouldCompile(true);
        launcher.addInputResource(new VirtualFile("class li {\n  class U {\n    class H {\n      class bvC5 {\n        class s {\n          class R9 {\n            class ETkLH {\n              class P6 {\n                class i {\n\n                  U.H O = new li.U.H();\n                  U.H.bvC5.s.R9.ETkLH R4hln8P = new ETkLH();\n                }\n                \n              }\n              \n            }\n            \n          }\n          class TqL{}\n          class d {\n\n            U X8 = new U();\n          }\n          U.H.bvC5 qQ = new U.H.bvC5();\n          d z = new d();\n        }\n        class dn {\n\n          bvC5.dn p = new li.U.H.bvC5.dn();\n          li.U KX8 = new U();\n        }\n        class J{}\n        \n      }\n      class OYp {\n\n        H As = new li.U.H();\n      }\n      class K2 {\n\n        H.K2 q = new U.H.K2();\n      }\n      class Lt {\n\n        li.U.H.Lt w = new H.Lt();\n      }\n      U.H YJ = new li.U.H();\n      U C = new li.U();\n      li.U f = new li.U();\n    }\n    static class gS{}\n    class X {\n\n      li.U aG = new li.U();\n      X S = new X();\n    }\n    li.U.X k = new X();\n  }\n  class x {\n\n    li.x dG = new x();\n  }\n  class P5 {\n\n    li XiTPMU8DN = new li();\n  }\n  li Z = new li();\n  li zC = new li();\n  li e = new li();\n}"));
        CtType<?> innerClass = launcher.buildModel().getAllTypes().iterator().next();
        assertEquals("class li {\n    class U {\n        class H {\n            class bvC5 {\n                class s {\n                    class R9 {\n                        class ETkLH {\n                            class P6 {\n                                class i {\n                                    U.H O = new li.U.H();\n\n                                    U.H.bvC5.s.R9.ETkLH R4hln8P = new ETkLH();\n                                }\n                            }\n                        }\n                    }\n\n                    class TqL {}\n\n                    class d {\n                        U X8 = new U();\n                    }\n\n                    U.H.bvC5 qQ = new U.H.bvC5();\n\n                    d z = new d();\n                }\n\n                class dn {\n                    bvC5.dn p = new li.U.H.bvC5.dn();\n\n                    li.U KX8 = new U();\n                }\n\n                class J {}\n            }\n\n            class OYp {\n                H As = new li.U.H();\n            }\n\n            class K2 {\n                H.K2 q = new U.H.K2();\n            }\n\n            class Lt {\n                li.U.H.Lt w = new H.Lt();\n            }\n\n            U.H YJ = new li.U.H();\n\n            U C = new li.U();\n\n            li.U f = new li.U();\n        }\n\n        static class gS {}\n\n        class X {\n            li.U aG = new li.U();\n\n            X S = new X();\n        }\n\n        li.U.X k = new X();\n    }\n\n    class x {\n        li.x dG = new x();\n    }\n\n    class P5 {\n        li XiTPMU8DN = new li();\n    }\n\n    li Z = new li();\n\n    li zC = new li();\n\n    li e = new li();\n}", innerClass.toString());
    }

    @Test
    public void test046() {
        Launcher launcher = new Launcher();
        launcher.getEnvironment().setComplianceLevel(17);
        launcher.getEnvironment().setAutoImports(true);
        launcher.getEnvironment().setShouldCompile(true);
        launcher.addInputResource(new VirtualFile("class h {\n  class H {\n    class K {\n      class Nb {\n        class F {\n          class MQ {\n            class XP {\n              class G_1d {\n\n                Nb.F uL = new F();\n                h.H.K.Nb.F.MQ p = new h.H.K.Nb.F.MQ();\n              }\n              class X{}\n              \n            }\n            class I0s8{}\n            class kM{}\n            \n          }\n          class MTY{}\n          \n        }\n        class T {\n\n          h.H Giqw = new h.H();\n        }\n        class O {\n\n          h.H.K.Nb.O ml9 = new H.K.Nb.O();\n          h Y = new h();\n          K do3 = new K();\n        }\n        \n      }\n      class btzHDo {\n\n        H.K.btzHDo Q = new H.K.btzHDo();\n      }\n      class C67{}\n      H.K.btzHDo d = new K.btzHDo();\n    }\n    class Ynp{}\n    class Rv{}\n    class s {\n\n      H f3FI = new H();\n      h OL = new h();\n    }\n    H.s SbLv = new s();\n    h hA = new h();\n    s TQ = new h.H.s();\n    h.H CaT = new H();\n    h A = new h();\n  }\n  static class arek{}\n  \n}"));
        CtType<?> innerClass = launcher.buildModel().getAllTypes().iterator().next();
        assertEquals("class h {\n    class H {\n        class K {\n            class Nb {\n                class F {\n                    class MQ {\n                        class XP {\n                            class G_1d {\n                                Nb.F uL = new F();\n\n                                h.H.K.Nb.F.MQ p = new h.H.K.Nb.F.MQ();\n                            }\n\n                            class X {}\n                        }\n\n                        class I0s8 {}\n\n                        class kM {}\n                    }\n\n                    class MTY {}\n                }\n\n                class T {\n                    h.H Giqw = new h.H();\n                }\n\n                class O {\n                    h.H.K.Nb.O ml9 = new H.K.Nb.O();\n\n                    h Y = new h();\n\n                    K do3 = new K();\n                }\n            }\n\n            class btzHDo {\n                H.K.btzHDo Q = new H.K.btzHDo();\n            }\n\n            class C67 {}\n\n            H.K.btzHDo d = new K.btzHDo();\n        }\n\n        class Ynp {}\n\n        class Rv {}\n\n        class s {\n            H f3FI = new H();\n\n            h OL = new h();\n        }\n\n        H.s SbLv = new s();\n\n        h hA = new h();\n\n        s TQ = new h.H.s();\n\n        h.H CaT = new H();\n\n        h A = new h();\n    }\n\n    static class arek {}\n}", innerClass.toString());
    }

    @Test
    public void test047() {
        Launcher launcher = new Launcher();
        launcher.getEnvironment().setComplianceLevel(17);
        launcher.getEnvironment().setAutoImports(true);
        launcher.getEnvironment().setShouldCompile(true);
        launcher.addInputResource(new VirtualFile("class S {\n  class Tz7 {\n    class x {\n      class a {\n        class L {\n          class gN {\n            class tj1 {\n              class Oy {\n\n                tj1.Oy OeQ = new Tz7.x.a.L.gN.tj1.Oy();\n              }\n              class W {\n\n                S.Tz7.x.a ZK = new Tz7.x.a();\n                Tz7.x.a.L uzWpl = new a.L();\n                x xD = new x();\n              }\n              class pzP{}\n              class p{}\n              \n            }\n            \n          }\n          class vWho{}\n          class o{}\n          class o1D{}\n          L.gN z = new a.L.gN();\n          S.Tz7 f = new Tz7();\n        }\n        class m {\n\n          S pA = new S();\n        }\n        class i {\n\n          S.Tz7.x Ou = new S.Tz7.x();\n          x.a P = new Tz7.x.a();\n        }\n        class xn{}\n        \n      }\n      class g{}\n      class oC {\n\n        Tz7.x.oC Q = new S.Tz7.x.oC();\n        x.oC c = new x.oC();\n        S.Tz7.x n2 = new x();\n        oC SCsc = new Tz7.x.oC();\n      }\n      class s {\n\n        S.Tz7 ZFj = new Tz7();\n      }\n      S R = new S();\n    }\n    class n {\n\n      Tz7 ng = new S.Tz7();\n    }\n    class v {\n\n      S gaZR = new S();\n    }\n    class wdA {\n\n      wdA T = new Tz7.wdA();\n    }\n    \n  }\n  S l = new S();\n  Tz7 Z_p = new Tz7();\n}"));
        CtType<?> innerClass = launcher.buildModel().getAllTypes().iterator().next();
        assertEquals("class S {\n    class Tz7 {\n        class x {\n            class a {\n                class L {\n                    class gN {\n                        class tj1 {\n                            class Oy {\n                                tj1.Oy OeQ = new Tz7.x.a.L.gN.tj1.Oy();\n                            }\n\n                            class W {\n                                S.Tz7.x.a ZK = new Tz7.x.a();\n\n                                Tz7.x.a.L uzWpl = new a.L();\n\n                                x xD = new x();\n                            }\n\n                            class pzP {}\n\n                            class p {}\n                        }\n                    }\n\n                    class vWho {}\n\n                    class o {}\n\n                    class o1D {}\n\n                    L.gN z = new a.L.gN();\n\n                    S.Tz7 f = new Tz7();\n                }\n\n                class m {\n                    S pA = new S();\n                }\n\n                class i {\n                    S.Tz7.x Ou = new S.Tz7.x();\n\n                    x.a P = new Tz7.x.a();\n                }\n\n                class xn {}\n            }\n\n            class g {}\n\n            class oC {\n                Tz7.x.oC Q = new S.Tz7.x.oC();\n\n                x.oC c = new x.oC();\n\n                S.Tz7.x n2 = new x();\n\n                oC SCsc = new Tz7.x.oC();\n            }\n\n            class s {\n                S.Tz7 ZFj = new Tz7();\n            }\n\n            S R = new S();\n        }\n\n        class n {\n            Tz7 ng = new S.Tz7();\n        }\n\n        class v {\n            S gaZR = new S();\n        }\n\n        class wdA {\n            wdA T = new Tz7.wdA();\n        }\n    }\n\n    S l = new S();\n\n    Tz7 Z_p = new Tz7();\n}", innerClass.toString());
    }

    @Test
    public void test048() {
        Launcher launcher = new Launcher();
        launcher.getEnvironment().setComplianceLevel(17);
        launcher.getEnvironment().setAutoImports(true);
        launcher.getEnvironment().setShouldCompile(true);
        launcher.addInputResource(new VirtualFile("class Bk {\n  class lQa {\n    class l {\n      class v {\n        class e {\n          class r {\n            class upJF {\n              class m {\n                class o {\n\n                  Bk.lQa.l.v.e fKh = new lQa.l.v.e();\n                  lQa mw = new Bk.lQa();\n                  l.v.e j = new v.e();\n                }\n                class S {\n\n                  Bk.lQa.l.v.e.r.upJF.m h = new v.e.r.upJF.m();\n                  Bk.lQa.l oi = new lQa.l();\n                }\n                upJF A = new v.e.r.upJF();\n              }\n              class pnL{}\n              class OP{}\n              \n            }\n            class pX{}\n            \n          }\n          class U{}\n          class bb{}\n          Bk.lQa O = new lQa();\n        }\n        static class T{}\n        class a{}\n        lQa.l.v.T WH = new T();\n        l.v lXA = new Bk.lQa.l.v();\n        l.v.e PVA = new v.e();\n      }\n      Bk.lQa.l iG = new l();\n    }\n    \n  }\n  class rg13 {\n\n    Bk Fg = new Bk();\n  }\n  class M7lM {\n\n    Bk.M7lM ys8y = new M7lM();\n  }\n  static class Ube{}\n  \n}"));
        CtType<?> innerClass = launcher.buildModel().getAllTypes().iterator().next();
        assertEquals("class Bk {\n    class lQa {\n        class l {\n            class v {\n                class e {\n                    class r {\n                        class upJF {\n                            class m {\n                                class o {\n                                    Bk.lQa.l.v.e fKh = new lQa.l.v.e();\n\n                                    lQa mw = new Bk.lQa();\n\n                                    l.v.e j = new v.e();\n                                }\n\n                                class S {\n                                    Bk.lQa.l.v.e.r.upJF.m h = new v.e.r.upJF.m();\n\n                                    Bk.lQa.l oi = new lQa.l();\n                                }\n\n                                upJF A = new v.e.r.upJF();\n                            }\n\n                            class pnL {}\n\n                            class OP {}\n                        }\n\n                        class pX {}\n                    }\n\n                    class U {}\n\n                    class bb {}\n\n                    Bk.lQa O = new lQa();\n                }\n\n                static class T {}\n\n                class a {}\n\n                lQa.l.v.T WH = new T();\n\n                l.v lXA = new Bk.lQa.l.v();\n\n                l.v.e PVA = new v.e();\n            }\n\n            Bk.lQa.l iG = new l();\n        }\n    }\n\n    class rg13 {\n        Bk Fg = new Bk();\n    }\n\n    class M7lM {\n        Bk.M7lM ys8y = new M7lM();\n    }\n\n    static class Ube {}\n}", innerClass.toString());
    }

    @Test
    public void test049() {
        Launcher launcher = new Launcher();
        launcher.getEnvironment().setComplianceLevel(17);
        launcher.getEnvironment().setAutoImports(true);
        launcher.getEnvironment().setShouldCompile(true);
        launcher.addInputResource(new VirtualFile("class w {\n  class phN1Ue {\n    class zf {\n      class j {\n        class NEKqy {\n          class G {\n            class E {\n              class M{}\n              NEKqy.G.E f = new G.E();\n            }\n            w J = new w();\n          }\n          class g {\n\n            zf VQ = new w.phN1Ue.zf();\n            w l = new w();\n            j u = new w.phN1Ue.zf.j();\n            g CA = new w.phN1Ue.zf.j.NEKqy.g();\n          }\n          class L{}\n          class b{}\n          \n        }\n        class EO {\n\n          w YT = new w();\n          phN1Ue.zf Cf = new w.phN1Ue.zf();\n        }\n        class T3 {\n\n          w.phN1Ue s88sI_gD = new phN1Ue();\n        }\n        class F {\n\n          j.F Z_ = new phN1Ue.zf.j.F();\n          phN1Ue.zf H1Nsc = new zf();\n        }\n        \n      }\n      class vD {\n\n        w.phN1Ue V = new phN1Ue();\n      }\n      w T = new w();\n      w.phN1Ue.zf.vD EV = new phN1Ue.zf.vD();\n    }\n    class k{}\n    static class v0aF{}\n    phN1Ue.k O = new phN1Ue.k();\n    w Q = new w();\n    w.phN1Ue n = new w.phN1Ue();\n  }\n  static class z7L{}\n  class i {\n\n    w.i o = new w.i();\n    i q = new w.i();\n    w joZ = new w();\n    w.i C = new i();\n    w.i Rii = new i();\n  }\n  class jf{}\n  \n}"));
        CtType<?> innerClass = launcher.buildModel().getAllTypes().iterator().next();
        assertEquals("class w {\n    class phN1Ue {\n        class zf {\n            class j {\n                class NEKqy {\n                    class G {\n                        class E {\n                            class M {}\n\n                            NEKqy.G.E f = new G.E();\n                        }\n\n                        w J = new w();\n                    }\n\n                    class g {\n                        zf VQ = new w.phN1Ue.zf();\n\n                        w l = new w();\n\n                        j u = new w.phN1Ue.zf.j();\n\n                        g CA = new w.phN1Ue.zf.j.NEKqy.g();\n                    }\n\n                    class L {}\n\n                    class b {}\n                }\n\n                class EO {\n                    w YT = new w();\n\n                    phN1Ue.zf Cf = new w.phN1Ue.zf();\n                }\n\n                class T3 {\n                    w.phN1Ue s88sI_gD = new phN1Ue();\n                }\n\n                class F {\n                    j.F Z_ = new phN1Ue.zf.j.F();\n\n                    phN1Ue.zf H1Nsc = new zf();\n                }\n            }\n\n            class vD {\n                w.phN1Ue V = new phN1Ue();\n            }\n\n            w T = new w();\n\n            w.phN1Ue.zf.vD EV = new phN1Ue.zf.vD();\n        }\n\n        class k {}\n\n        static class v0aF {}\n\n        phN1Ue.k O = new phN1Ue.k();\n\n        w Q = new w();\n\n        w.phN1Ue n = new w.phN1Ue();\n    }\n\n    static class z7L {}\n\n    class i {\n        w.i o = new w.i();\n\n        i q = new w.i();\n\n        w joZ = new w();\n\n        w.i C = new i();\n\n        w.i Rii = new i();\n    }\n\n    class jf {}\n}", innerClass.toString());
    }

    @Test
    public void test050() {
        Launcher launcher = new Launcher();
        launcher.getEnvironment().setComplianceLevel(17);
        launcher.getEnvironment().setAutoImports(true);
        launcher.getEnvironment().setShouldCompile(true);
        launcher.addInputResource(new VirtualFile("class G {\n  class QN {\n    class lWB7 {\n      class c {\n        class d {\n          class NzF {\n            class xv {\n              class T {\n                class J989raE {\n\n                  QN.lWB7.c.d.NzF.xv O = new G.QN.lWB7.c.d.NzF.xv();\n                }\n                class LSH4E {\n\n                  G JsL = new G();\n                  G.QN h2U = new G.QN();\n                }\n                QN V = new G.QN();\n                T j = new T();\n              }\n              class qy{}\n              \n            }\n            class bc{}\n            \n          }\n          \n        }\n        class m {\n\n          G Sc = new G();\n          G.QN XVb = new QN();\n        }\n        G.QN.lWB7.c.d w = new c.d();\n        G.QN.lWB7 X = new G.QN.lWB7();\n        QN VZm = new G.QN();\n      }\n      class A0WLvn {\n\n        QN x = new G.QN();\n      }\n      class R {\n\n        QN.lWB7 n = new QN.lWB7();\n      }\n      \n    }\n    class y{}\n    class l {\n\n      QN gKT = new G.QN();\n    }\n    class k{}\n    G.QN.l dxd = new QN.l();\n    G.QN.lWB7 Vv = new QN.lWB7();\n    G k26Nw = new G();\n  }\n  class DQmC {\n\n    G F = new G();\n  }\n  static class Hvy8{}\n  class f {\n\n    G I8p = new G();\n  }\n  G s = new G();\n}"));
        CtType<?> innerClass = launcher.buildModel().getAllTypes().iterator().next();
        assertEquals("class G {\n    class QN {\n        class lWB7 {\n            class c {\n                class d {\n                    class NzF {\n                        class xv {\n                            class T {\n                                class J989raE {\n                                    QN.lWB7.c.d.NzF.xv O = new G.QN.lWB7.c.d.NzF.xv();\n                                }\n\n                                class LSH4E {\n                                    G JsL = new G();\n\n                                    G.QN h2U = new G.QN();\n                                }\n\n                                QN V = new G.QN();\n\n                                T j = new T();\n                            }\n\n                            class qy {}\n                        }\n\n                        class bc {}\n                    }\n                }\n\n                class m {\n                    G Sc = new G();\n\n                    G.QN XVb = new QN();\n                }\n\n                G.QN.lWB7.c.d w = new c.d();\n\n                G.QN.lWB7 X = new G.QN.lWB7();\n\n                QN VZm = new G.QN();\n            }\n\n            class A0WLvn {\n                QN x = new G.QN();\n            }\n\n            class R {\n                QN.lWB7 n = new QN.lWB7();\n            }\n        }\n\n        class y {}\n\n        class l {\n            QN gKT = new G.QN();\n        }\n\n        class k {}\n\n        G.QN.l dxd = new QN.l();\n\n        G.QN.lWB7 Vv = new QN.lWB7();\n\n        G k26Nw = new G();\n    }\n\n    class DQmC {\n        G F = new G();\n    }\n\n    static class Hvy8 {}\n\n    class f {\n        G I8p = new G();\n    }\n\n    G s = new G();\n}", innerClass.toString());
    }

    @Test
    public void test051() {
        Launcher launcher = new Launcher();
        launcher.getEnvironment().setComplianceLevel(17);
        launcher.getEnvironment().setAutoImports(true);
        launcher.getEnvironment().setShouldCompile(true);
        launcher.addInputResource(new VirtualFile("class wR {\n  class U_iLu {\n    class l5ak {\n      class g {\n        class ld {\n          class xnI {\n            class F {\n              class fE_i {\n                class rx8_F {\n\n                  wR.U_iLu.l5ak u = new l5ak();\n                }\n                class C{}\n                g.ld.xnI.F.fE_i sP7E = new wR.U_iLu.l5ak.g.ld.xnI.F.fE_i();\n              }\n              F B = new F();\n            }\n            class a {\n\n              wR hxsW = new wR();\n            }\n            \n          }\n          class H {\n\n            l5ak.g.ld ctc = new g.ld();\n            wR BM = new wR();\n            g.ld t = new wR.U_iLu.l5ak.g.ld();\n          }\n          \n        }\n        static class j4KF{}\n        \n      }\n      class l {\n\n        U_iLu f = new U_iLu();\n      }\n      class w {\n\n        wR BJ1 = new wR();\n      }\n      class A {\n\n        wR.U_iLu Iv = new U_iLu();\n        wR.U_iLu.l5ak.A YR = new l5ak.A();\n      }\n      \n    }\n    class LlEope{}\n    class FJ {\n\n      wR G = new wR();\n      wR.U_iLu nLkKuUj = new U_iLu();\n      wR.U_iLu.FJ iSR = new FJ();\n    }\n    wR O = new wR();\n  }\n  static class RH{}\n  class mBL {\n\n    wR.mBL X = new wR.mBL();\n    wR D = new wR();\n    mBL i = new wR.mBL();\n    mBL j = new mBL();\n    wR LMKx = new wR();\n  }\n  wR Cdo = new wR();\n  mBL Ejn = new mBL();\n  RH wi = new wR.RH();\n}"));
        CtType<?> innerClass = launcher.buildModel().getAllTypes().iterator().next();
        assertEquals("class wR {\n    class U_iLu {\n        class l5ak {\n            class g {\n                class ld {\n                    class xnI {\n                        class F {\n                            class fE_i {\n                                class rx8_F {\n                                    wR.U_iLu.l5ak u = new l5ak();\n                                }\n\n                                class C {}\n\n                                g.ld.xnI.F.fE_i sP7E = new wR.U_iLu.l5ak.g.ld.xnI.F.fE_i();\n                            }\n\n                            F B = new F();\n                        }\n\n                        class a {\n                            wR hxsW = new wR();\n                        }\n                    }\n\n                    class H {\n                        l5ak.g.ld ctc = new g.ld();\n\n                        wR BM = new wR();\n\n                        g.ld t = new wR.U_iLu.l5ak.g.ld();\n                    }\n                }\n\n                static class j4KF {}\n            }\n\n            class l {\n                U_iLu f = new U_iLu();\n            }\n\n            class w {\n                wR BJ1 = new wR();\n            }\n\n            class A {\n                wR.U_iLu Iv = new U_iLu();\n\n                wR.U_iLu.l5ak.A YR = new l5ak.A();\n            }\n        }\n\n        class LlEope {}\n\n        class FJ {\n            wR G = new wR();\n\n            wR.U_iLu nLkKuUj = new U_iLu();\n\n            wR.U_iLu.FJ iSR = new FJ();\n        }\n\n        wR O = new wR();\n    }\n\n    static class RH {}\n\n    class mBL {\n        wR.mBL X = new wR.mBL();\n\n        wR D = new wR();\n\n        mBL i = new wR.mBL();\n\n        mBL j = new mBL();\n\n        wR LMKx = new wR();\n    }\n\n    wR Cdo = new wR();\n\n    mBL Ejn = new mBL();\n\n    RH wi = new wR.RH();\n}", innerClass.toString());
    }

    @Test
    public void test052() {
        Launcher launcher = new Launcher();
        launcher.getEnvironment().setComplianceLevel(17);
        launcher.getEnvironment().setAutoImports(true);
        launcher.getEnvironment().setShouldCompile(true);
        launcher.addInputResource(new VirtualFile("class K5_ {\n  class ABbl {\n    class Vf9p {\n      class v {\n        class N {\n          class p {\n            class Vr {\n              class nx{}\n              class u{}\n              class NYR{}\n              \n            }\n            class fon {\n\n              v.N.p.fon TL = new K5_.ABbl.Vf9p.v.N.p.fon();\n              v.N A = new Vf9p.v.N();\n            }\n            class S{}\n            K5_.ABbl.Vf9p.v.N.p YFp = new ABbl.Vf9p.v.N.p();\n            K5_.ABbl.Vf9p.v SH = new ABbl.Vf9p.v();\n          }\n          class l {\n\n            v.N zcf = new ABbl.Vf9p.v.N();\n            ABbl.Vf9p.v X = new ABbl.Vf9p.v();\n            Vf9p.v.N HGpBK = new N();\n          }\n          class a {\n\n            K5_.ABbl nIs = new ABbl();\n          }\n          K5_.ABbl HR3 = new ABbl();\n          N.a Q = new v.N.a();\n          K5_.ABbl.Vf9p e = new K5_.ABbl.Vf9p();\n        }\n        static class H{}\n        Vf9p.v F = new v();\n      }\n      class E_lY {\n\n        E_lY kL = new Vf9p.E_lY();\n        E_lY LW = new Vf9p.E_lY();\n        K5_ y = new K5_();\n        K5_.ABbl.Vf9p.E_lY K = new Vf9p.E_lY();\n      }\n      class wf_fw{}\n      \n    }\n    static class tW9{}\n    ABbl W = new ABbl();\n    ABbl y9 = new ABbl();\n    ABbl k = new K5_.ABbl();\n    Vf9p g = new Vf9p();\n  }\n  class t {\n\n    K5_ ti = new K5_();\n  }\n  static class ln{}\n  class P {\n\n    K5_ Bs = new K5_();\n    K5_.P JiZG = new P();\n  }\n  \n}"));
        CtType<?> innerClass = launcher.buildModel().getAllTypes().iterator().next();
        assertEquals("class K5_ {\n    class ABbl {\n        class Vf9p {\n            class v {\n                class N {\n                    class p {\n                        class Vr {\n                            class nx {}\n\n                            class u {}\n\n                            class NYR {}\n                        }\n\n                        class fon {\n                            v.N.p.fon TL = new K5_.ABbl.Vf9p.v.N.p.fon();\n\n                            v.N A = new Vf9p.v.N();\n                        }\n\n                        class S {}\n\n                        K5_.ABbl.Vf9p.v.N.p YFp = new ABbl.Vf9p.v.N.p();\n\n                        K5_.ABbl.Vf9p.v SH = new ABbl.Vf9p.v();\n                    }\n\n                    class l {\n                        v.N zcf = new ABbl.Vf9p.v.N();\n\n                        ABbl.Vf9p.v X = new ABbl.Vf9p.v();\n\n                        Vf9p.v.N HGpBK = new N();\n                    }\n\n                    class a {\n                        K5_.ABbl nIs = new ABbl();\n                    }\n\n                    K5_.ABbl HR3 = new ABbl();\n\n                    N.a Q = new v.N.a();\n\n                    K5_.ABbl.Vf9p e = new K5_.ABbl.Vf9p();\n                }\n\n                static class H {}\n\n                Vf9p.v F = new v();\n            }\n\n            class E_lY {\n                E_lY kL = new Vf9p.E_lY();\n\n                E_lY LW = new Vf9p.E_lY();\n\n                K5_ y = new K5_();\n\n                K5_.ABbl.Vf9p.E_lY K = new Vf9p.E_lY();\n            }\n\n            class wf_fw {}\n        }\n\n        static class tW9 {}\n\n        ABbl W = new ABbl();\n\n        ABbl y9 = new ABbl();\n\n        ABbl k = new K5_.ABbl();\n\n        Vf9p g = new Vf9p();\n    }\n\n    class t {\n        K5_ ti = new K5_();\n    }\n\n    static class ln {}\n\n    class P {\n        K5_ Bs = new K5_();\n\n        K5_.P JiZG = new P();\n    }\n}", innerClass.toString());
    }

    @Test
    public void test053() {
        Launcher launcher = new Launcher();
        launcher.getEnvironment().setComplianceLevel(17);
        launcher.getEnvironment().setAutoImports(true);
        launcher.getEnvironment().setShouldCompile(true);
        launcher.addInputResource(new VirtualFile("class A {\n  class C {\n    class Eky {\n      class I {\n        class l {\n          class bIL {\n            class KK {\n              class G {\n\n                l.bIL.KK s = new Eky.I.l.bIL.KK();\n                A.C.Eky j = new A.C.Eky();\n                A.C.Eky.I B = new C.Eky.I();\n                A.C.Eky H = new C.Eky();\n              }\n              class Q7 {\n\n                l.bIL.KK LK = new I.l.bIL.KK();\n                I T = new I();\n              }\n              class x_ {\n\n                bIL.KK.x_ k = new KK.x_();\n              }\n              class y3iyL9{}\n              I MWm = new I();\n            }\n            class HH3 {\n\n              C Q = new C();\n              I R = new Eky.I();\n              A m = new A();\n              A S = new A();\n            }\n            \n          }\n          C ll = new A.C();\n        }\n        class N{}\n        class CJ{}\n        A t = new A();\n        Eky.I.l U = new C.Eky.I.l();\n      }\n      class V {\n\n        A az = new A();\n        A.C.Eky r8 = new Eky();\n      }\n      \n    }\n    static class pkt{}\n    class E {\n\n      A.C I1 = new C();\n    }\n    \n  }\n  static class qG{}\n  class z {\n\n    A ek = new A();\n    A l2 = new A();\n  }\n  static class aD{}\n  A y = new A();\n}"));
        CtType<?> innerClass = launcher.buildModel().getAllTypes().iterator().next();
        assertEquals("class A {\n    class C {\n        class Eky {\n            class I {\n                class l {\n                    class bIL {\n                        class KK {\n                            class G {\n                                l.bIL.KK s = new Eky.I.l.bIL.KK();\n\n                                A.C.Eky j = new A.C.Eky();\n\n                                A.C.Eky.I B = new C.Eky.I();\n\n                                A.C.Eky H = new C.Eky();\n                            }\n\n                            class Q7 {\n                                l.bIL.KK LK = new I.l.bIL.KK();\n\n                                I T = new I();\n                            }\n\n                            class x_ {\n                                bIL.KK.x_ k = new KK.x_();\n                            }\n\n                            class y3iyL9 {}\n\n                            I MWm = new I();\n                        }\n\n                        class HH3 {\n                            C Q = new C();\n\n                            I R = new Eky.I();\n\n                            A m = new A();\n\n                            A S = new A();\n                        }\n                    }\n\n                    C ll = new A.C();\n                }\n\n                class N {}\n\n                class CJ {}\n\n                A t = new A();\n\n                Eky.I.l U = new C.Eky.I.l();\n            }\n\n            class V {\n                A az = new A();\n\n                A.C.Eky r8 = new Eky();\n            }\n        }\n\n        static class pkt {}\n\n        class E {\n            A.C I1 = new C();\n        }\n    }\n\n    static class qG {}\n\n    class z {\n        A ek = new A();\n\n        A l2 = new A();\n    }\n\n    static class aD {}\n\n    A y = new A();\n}", innerClass.toString());
    }

    @Test
    public void test054() {
        Launcher launcher = new Launcher();
        launcher.getEnvironment().setComplianceLevel(17);
        launcher.getEnvironment().setAutoImports(true);
        launcher.getEnvironment().setShouldCompile(true);
        launcher.addInputResource(new VirtualFile("class hY {\n  class C {\n    class O {\n      class n {\n        class gXl {\n          class AL {\n            class y9QI5m{}\n            class x {\n\n              hY.C.O.n.gXl.AL iJe = new O.n.gXl.AL();\n              hY is = new hY();\n              n.gXl.AL.x d = new x();\n            }\n            class C3wt{}\n            \n          }\n          class kK{}\n          class U {\n\n            n.gXl s = new hY.C.O.n.gXl();\n          }\n          C.O.n.gXl.AL NBA = new gXl.AL();\n          gXl.U S = new n.gXl.U();\n          n.gXl bi = new O.n.gXl();\n        }\n        class v{}\n        class g{}\n        hY e6ri = new hY();\n        hY z = new hY();\n      }\n      class wa{}\n      class X {\n\n        hY f = new hY();\n        hY.C uP = new C();\n        hY.C.O W2 = new hY.C.O();\n        C.O T = new hY.C.O();\n        hY.C.O IwP = new O();\n        hY E = new hY();\n        hY.C.O F = new O();\n      }\n      \n    }\n    class PFrs9{}\n    class vN8fHV {\n\n      hY dK = new hY();\n      hY.C oy = new hY.C();\n      hY.C.vN8fHV qu = new vN8fHV();\n      hY q = new hY();\n      hY qGnF = new hY();\n    }\n    class uGP{}\n    \n  }\n  static class iVUl{}\n  static class DY{}\n  hY Or = new hY();\n  hY.iVUl Z = new iVUl();\n}"));
        CtType<?> innerClass = launcher.buildModel().getAllTypes().iterator().next();
        assertEquals("class hY {\n    class C {\n        class O {\n            class n {\n                class gXl {\n                    class AL {\n                        class y9QI5m {}\n\n                        class x {\n                            hY.C.O.n.gXl.AL iJe = new O.n.gXl.AL();\n\n                            hY is = new hY();\n\n                            n.gXl.AL.x d = new x();\n                        }\n\n                        class C3wt {}\n                    }\n\n                    class kK {}\n\n                    class U {\n                        n.gXl s = new hY.C.O.n.gXl();\n                    }\n\n                    C.O.n.gXl.AL NBA = new gXl.AL();\n\n                    gXl.U S = new n.gXl.U();\n\n                    n.gXl bi = new O.n.gXl();\n                }\n\n                class v {}\n\n                class g {}\n\n                hY e6ri = new hY();\n\n                hY z = new hY();\n            }\n\n            class wa {}\n\n            class X {\n                hY f = new hY();\n\n                hY.C uP = new C();\n\n                hY.C.O W2 = new hY.C.O();\n\n                C.O T = new hY.C.O();\n\n                hY.C.O IwP = new O();\n\n                hY E = new hY();\n\n                hY.C.O F = new O();\n            }\n        }\n\n        class PFrs9 {}\n\n        class vN8fHV {\n            hY dK = new hY();\n\n            hY.C oy = new hY.C();\n\n            hY.C.vN8fHV qu = new vN8fHV();\n\n            hY q = new hY();\n\n            hY qGnF = new hY();\n        }\n\n        class uGP {}\n    }\n\n    static class iVUl {}\n\n    static class DY {}\n\n    hY Or = new hY();\n\n    hY.iVUl Z = new iVUl();\n}", innerClass.toString());
    }

    @Test
    public void test055() {
        Launcher launcher = new Launcher();
        launcher.getEnvironment().setComplianceLevel(17);
        launcher.getEnvironment().setAutoImports(true);
        launcher.getEnvironment().setShouldCompile(true);
        launcher.addInputResource(new VirtualFile("class V {\n  class szYhIvE {\n    class U {\n      class z {\n        class g9I {\n          class oj {\n            class R {\n\n              oj YvP3S1 = new szYhIvE.U.z.g9I.oj();\n            }\n            class h{}\n            class EA{}\n            class ld {\n\n              V.szYhIvE.U.z.g9I q = new szYhIvE.U.z.g9I();\n              V c = new V();\n            }\n            \n          }\n          class Kum{}\n          class fLISim {\n\n            z.g9I xB = new szYhIvE.U.z.g9I();\n            szYhIvE W = new V.szYhIvE();\n          }\n          \n        }\n        class qb {\n\n          szYhIvE.U WQ = new szYhIvE.U();\n          U.z.qb wm = new szYhIvE.U.z.qb();\n        }\n        class A{}\n        class j{}\n        U lH = new V.szYhIvE.U();\n        szYhIvE.U.z Q4 = new V.szYhIvE.U.z();\n      }\n      V Ec = new V();\n    }\n    class O {\n\n      V.szYhIvE u = new V.szYhIvE();\n    }\n    class CB {\n\n      CB SL = new V.szYhIvE.CB();\n      V UI = new V();\n      szYhIvE r = new szYhIvE();\n    }\n    class w {\n\n      V.szYhIvE.w m = new V.szYhIvE.w();\n      V Zp = new V();\n    }\n    \n  }\n  class C {\n\n    V Fu_ = new V();\n  }\n  class T {\n\n    T Li = new V.T();\n  }\n  \n}"));
        CtType<?> innerClass = launcher.buildModel().getAllTypes().iterator().next();
        assertEquals("class V {\n    class szYhIvE {\n        class U {\n            class z {\n                class g9I {\n                    class oj {\n                        class R {\n                            oj YvP3S1 = new szYhIvE.U.z.g9I.oj();\n                        }\n\n                        class h {}\n\n                        class EA {}\n\n                        class ld {\n                            V.szYhIvE.U.z.g9I q = new szYhIvE.U.z.g9I();\n\n                            V c = new V();\n                        }\n                    }\n\n                    class Kum {}\n\n                    class fLISim {\n                        z.g9I xB = new szYhIvE.U.z.g9I();\n\n                        szYhIvE W = new V.szYhIvE();\n                    }\n                }\n\n                class qb {\n                    szYhIvE.U WQ = new szYhIvE.U();\n\n                    U.z.qb wm = new szYhIvE.U.z.qb();\n                }\n\n                class A {}\n\n                class j {}\n\n                U lH = new V.szYhIvE.U();\n\n                szYhIvE.U.z Q4 = new V.szYhIvE.U.z();\n            }\n\n            V Ec = new V();\n        }\n\n        class O {\n            V.szYhIvE u = new V.szYhIvE();\n        }\n\n        class CB {\n            CB SL = new V.szYhIvE.CB();\n\n            V UI = new V();\n\n            szYhIvE r = new szYhIvE();\n        }\n\n        class w {\n            V.szYhIvE.w m = new V.szYhIvE.w();\n\n            V Zp = new V();\n        }\n    }\n\n    class C {\n        V Fu_ = new V();\n    }\n\n    class T {\n        T Li = new V.T();\n    }\n}", innerClass.toString());
    }

    @Test
    public void test056() {
        Launcher launcher = new Launcher();
        launcher.getEnvironment().setComplianceLevel(17);
        launcher.getEnvironment().setAutoImports(true);
        launcher.getEnvironment().setShouldCompile(true);
        launcher.addInputResource(new VirtualFile("class jY {\n  class F {\n    class Q {\n      class v8 {\n        class Z {\n          class uU {\n            class U {\n              class h {\n                class Y{}\n                class du {\n\n                  F.Q T = new F.Q();\n                  U.h.du Mlv = new U.h.du();\n                  jY Qj = new jY();\n                }\n                class u{}\n                \n              }\n              \n            }\n            \n          }\n          jY p4 = new jY();\n        }\n        class zwB{}\n        class N {\n\n          jY tzc = new jY();\n        }\n        jY.F.Q.v8 B = new jY.F.Q.v8();\n        F.Q.v8 Y7Qv = new jY.F.Q.v8();\n      }\n      class Pm {\n\n        Pm R = new Q.Pm();\n        jY qX = new jY();\n        jY.F k = new F();\n        jY vC = new jY();\n        jY S = new jY();\n        jY p = new jY();\n      }\n      class G {\n\n        jY.F.Q.G O = new jY.F.Q.G();\n        jY.F.Q FfO = new Q();\n      }\n      class alB {\n\n        jY.F Okd = new jY.F();\n      }\n      jY Te = new jY();\n      Q.v8 iSSh = new F.Q.v8();\n    }\n    class D {\n\n      jY jFB = new jY();\n    }\n    class S4{}\n    class Z8p{}\n    \n  }\n  class r {\n\n    jY gH = new jY();\n  }\n  class H{}\n  r QP = new r();\n}"));
        CtType<?> innerClass = launcher.buildModel().getAllTypes().iterator().next();
        assertEquals("class jY {\n    class F {\n        class Q {\n            class v8 {\n                class Z {\n                    class uU {\n                        class U {\n                            class h {\n                                class Y {}\n\n                                class du {\n                                    F.Q T = new F.Q();\n\n                                    U.h.du Mlv = new U.h.du();\n\n                                    jY Qj = new jY();\n                                }\n\n                                class u {}\n                            }\n                        }\n                    }\n\n                    jY p4 = new jY();\n                }\n\n                class zwB {}\n\n                class N {\n                    jY tzc = new jY();\n                }\n\n                jY.F.Q.v8 B = new jY.F.Q.v8();\n\n                F.Q.v8 Y7Qv = new jY.F.Q.v8();\n            }\n\n            class Pm {\n                Pm R = new Q.Pm();\n\n                jY qX = new jY();\n\n                jY.F k = new F();\n\n                jY vC = new jY();\n\n                jY S = new jY();\n\n                jY p = new jY();\n            }\n\n            class G {\n                jY.F.Q.G O = new jY.F.Q.G();\n\n                jY.F.Q FfO = new Q();\n            }\n\n            class alB {\n                jY.F Okd = new jY.F();\n            }\n\n            jY Te = new jY();\n\n            Q.v8 iSSh = new F.Q.v8();\n        }\n\n        class D {\n            jY jFB = new jY();\n        }\n\n        class S4 {}\n\n        class Z8p {}\n    }\n\n    class r {\n        jY gH = new jY();\n    }\n\n    class H {}\n\n    r QP = new r();\n}", innerClass.toString());
    }

    @Test
    public void test057() {
        Launcher launcher = new Launcher();
        launcher.getEnvironment().setComplianceLevel(17);
        launcher.getEnvironment().setAutoImports(true);
        launcher.getEnvironment().setShouldCompile(true);
        launcher.addInputResource(new VirtualFile("class C {\n  class HTZV3 {\n    class U {\n      class J {\n        class F {\n          class Mu {\n            class d {\n              class e {\n                class I {\n                  class b {\n\n                    J.F.Mu.d Z = new J.F.Mu.d();\n                    U.J.F.Mu.d pXh_rZ = new U.J.F.Mu.d();\n                    d.e n = new C.HTZV3.U.J.F.Mu.d.e();\n                    Mu.d.e.I r = new J.F.Mu.d.e.I();\n                    C.HTZV3.U.J Y = new C.HTZV3.U.J();\n                    HTZV3.U W = new C.HTZV3.U();\n                    J.F N = new J.F();\n                  }\n                  class u{}\n                  class nGGP {\n\n                    C s3u = new C();\n                  }\n                  \n                }\n                HTZV3 or = new HTZV3();\n                HTZV3.U.J zeE7 = new U.J();\n              }\n              class T {\n\n                HTZV3 Mr = new HTZV3();\n              }\n              class Yb{}\n              class q {\n\n                C.HTZV3.U.J.F.Mu.d.q NDWfL = new Mu.d.q();\n                U.J rK = new U.J();\n              }\n              C n6mfW = new C();\n            }\n            class g {\n\n              C Mmy = new C();\n            }\n            class IqZ {\n\n              U.J R9 = new J();\n              HTZV3 APoAfsm = new HTZV3();\n            }\n            HTZV3.U.J.F DHUI = new HTZV3.U.J.F();\n          }\n          J l = new HTZV3.U.J();\n          C.HTZV3.U.J.F.Mu O0 = new Mu();\n          J k = new HTZV3.U.J();\n          HTZV3.U.J v = new C.HTZV3.U.J();\n        }\n        class fHo65 {\n\n          HTZV3.U.J Fs3yD = new HTZV3.U.J();\n        }\n        class xpT{}\n        class DA{}\n        \n      }\n      class eS {\n\n        HTZV3.U.eS ijRstH = new HTZV3.U.eS();\n      }\n      C yB5 = new C();\n    }\n    HTZV3 w = new C.HTZV3();\n    C s = new C();\n    C bb5W = new C();\n    C.HTZV3.U xlhM = new C.HTZV3.U();\n    C Ud = new C();\n    HTZV3 PfgJ = new HTZV3();\n  }\n  C DqKZyAF = new C();\n  HTZV3 ef = new C.HTZV3();\n  C.HTZV3 jMX = new C.HTZV3();\n}"));
        CtType<?> innerClass = launcher.buildModel().getAllTypes().iterator().next();
        assertEquals("class C {\n    class HTZV3 {\n        class U {\n            class J {\n                class F {\n                    class Mu {\n                        class d {\n                            class e {\n                                class I {\n                                    class b {\n                                        J.F.Mu.d Z = new J.F.Mu.d();\n\n                                        U.J.F.Mu.d pXh_rZ = new U.J.F.Mu.d();\n\n                                        d.e n = new C.HTZV3.U.J.F.Mu.d.e();\n\n                                        Mu.d.e.I r = new J.F.Mu.d.e.I();\n\n                                        C.HTZV3.U.J Y = new C.HTZV3.U.J();\n\n                                        HTZV3.U W = new C.HTZV3.U();\n\n                                        J.F N = new J.F();\n                                    }\n\n                                    class u {}\n\n                                    class nGGP {\n                                        C s3u = new C();\n                                    }\n                                }\n\n                                HTZV3 or = new HTZV3();\n\n                                HTZV3.U.J zeE7 = new U.J();\n                            }\n\n                            class T {\n                                HTZV3 Mr = new HTZV3();\n                            }\n\n                            class Yb {}\n\n                            class q {\n                                C.HTZV3.U.J.F.Mu.d.q NDWfL = new Mu.d.q();\n\n                                U.J rK = new U.J();\n                            }\n\n                            C n6mfW = new C();\n                        }\n\n                        class g {\n                            C Mmy = new C();\n                        }\n\n                        class IqZ {\n                            U.J R9 = new J();\n\n                            HTZV3 APoAfsm = new HTZV3();\n                        }\n\n                        HTZV3.U.J.F DHUI = new HTZV3.U.J.F();\n                    }\n\n                    J l = new HTZV3.U.J();\n\n                    C.HTZV3.U.J.F.Mu O0 = new Mu();\n\n                    J k = new HTZV3.U.J();\n\n                    HTZV3.U.J v = new C.HTZV3.U.J();\n                }\n\n                class fHo65 {\n                    HTZV3.U.J Fs3yD = new HTZV3.U.J();\n                }\n\n                class xpT {}\n\n                class DA {}\n            }\n\n            class eS {\n                HTZV3.U.eS ijRstH = new HTZV3.U.eS();\n            }\n\n            C yB5 = new C();\n        }\n\n        HTZV3 w = new C.HTZV3();\n\n        C s = new C();\n\n        C bb5W = new C();\n\n        C.HTZV3.U xlhM = new C.HTZV3.U();\n\n        C Ud = new C();\n\n        HTZV3 PfgJ = new HTZV3();\n    }\n\n    C DqKZyAF = new C();\n\n    HTZV3 ef = new C.HTZV3();\n\n    C.HTZV3 jMX = new C.HTZV3();\n}", innerClass.toString());
    }

    @Test
    public void test058() {
        Launcher launcher = new Launcher();
        launcher.getEnvironment().setComplianceLevel(17);
        launcher.getEnvironment().setAutoImports(true);
        launcher.getEnvironment().setShouldCompile(true);
        launcher.addInputResource(new VirtualFile("class kd {\n  class V {\n    class pj9G {\n      class e {\n        class F {\n          class wG {\n            class xz {\n              class C {\n                class o {\n                  class t {\n                    class m {\n\n                      t b = new C.o.t();\n                      e zw = new e();\n                      pj9G.e.F.wG.xz.C.o n = new wG.xz.C.o();\n                      wG.xz.C.o.t E8zVo = new wG.xz.C.o.t();\n                    }\n                    pj9G.e.F vE = new e.F();\n                  }\n                  class OR{}\n                  \n                }\n                \n              }\n              class u {\n\n                kd.V.pj9G r = new V.pj9G();\n                e.F Kv = new kd.V.pj9G.e.F();\n                kd L = new kd();\n              }\n              class j{}\n              class O {\n\n                e.F S = new e.F();\n              }\n              \n            }\n            class qi{}\n            \n          }\n          kd k4 = new kd();\n        }\n        class D {\n\n          kd.V M = new V();\n        }\n        class ukmro{}\n        class K{}\n        \n      }\n      V.pj9G In = new V.pj9G();\n      V pBB_B = new kd.V();\n    }\n    \n  }\n  class v {\n\n    v zGs = new v();\n  }\n  \n}"));
        CtType<?> innerClass = launcher.buildModel().getAllTypes().iterator().next();
        assertEquals("class kd {\n    class V {\n        class pj9G {\n            class e {\n                class F {\n                    class wG {\n                        class xz {\n                            class C {\n                                class o {\n                                    class t {\n                                        class m {\n                                            t b = new C.o.t();\n\n                                            e zw = new e();\n\n                                            pj9G.e.F.wG.xz.C.o n = new wG.xz.C.o();\n\n                                            wG.xz.C.o.t E8zVo = new wG.xz.C.o.t();\n                                        }\n\n                                        pj9G.e.F vE = new e.F();\n                                    }\n\n                                    class OR {}\n                                }\n                            }\n\n                            class u {\n                                kd.V.pj9G r = new V.pj9G();\n\n                                e.F Kv = new kd.V.pj9G.e.F();\n\n                                kd L = new kd();\n                            }\n\n                            class j {}\n\n                            class O {\n                                e.F S = new e.F();\n                            }\n                        }\n\n                        class qi {}\n                    }\n\n                    kd k4 = new kd();\n                }\n\n                class D {\n                    kd.V M = new V();\n                }\n\n                class ukmro {}\n\n                class K {}\n            }\n\n            V.pj9G In = new V.pj9G();\n\n            V pBB_B = new kd.V();\n        }\n    }\n\n    class v {\n        v zGs = new v();\n    }\n}", innerClass.toString());
    }

    @Test
    public void test059() {
        Launcher launcher = new Launcher();
        launcher.getEnvironment().setComplianceLevel(17);
        launcher.getEnvironment().setAutoImports(true);
        launcher.getEnvironment().setShouldCompile(true);
        launcher.addInputResource(new VirtualFile("class v {\n  class A {\n    class GDmoJ {\n      class Z6 {\n        class C {\n          class Chx {\n            class Kh {\n              class F {\n                class Ang {\n                  class F_ {\n\n                    Z6.C.Chx.Kh.F l = new Z6.C.Chx.Kh.F();\n                  }\n                  class cof{}\n                  class LOFI {\n\n                    v.A.GDmoJ.Z6.C.Chx.Kh.F.Ang t = new Kh.F.Ang();\n                    A s = new A();\n                  }\n                  class gt {\n\n                    Z6.C.Chx AYNV = new Chx();\n                    GDmoJ Sp = new A.GDmoJ();\n                    v.A.GDmoJ.Z6 P = new v.A.GDmoJ.Z6();\n                  }\n                  Z6.C.Chx.Kh.F W = new Chx.Kh.F();\n                  A.GDmoJ.Z6.C.Chx nWcqux = new Chx();\n                  Kh.F.Ang CYz = new Kh.F.Ang();\n                }\n                class E{}\n                class B {\n\n                  A.GDmoJ.Z6.C.Chx TX = new Chx();\n                }\n                class lewC6{}\n                \n              }\n              \n            }\n            class FiCLS{}\n            GDmoJ c = new GDmoJ();\n            A.GDmoJ.Z6 Y = new A.GDmoJ.Z6();\n          }\n          class I {\n\n            v.A sRd = new v.A();\n            Z6.C E4 = new C();\n          }\n          class OIu{}\n          class o {\n\n            v.A.GDmoJ.Z6.C.o j = new C.o();\n          }\n          A f = new A();\n          v.A O = new v.A();\n        }\n        \n      }\n      v gz = new v();\n      v.A.GDmoJ aKW = new A.GDmoJ();\n      v.A.GDmoJ jImWcC = new GDmoJ();\n    }\n    \n  }\n  class R {\n\n    v g = new v();\n    R ckE1 = new v.R();\n  }\n  class EH8s {\n\n    v G = new v();\n    v Jk = new v();\n  }\n  class OS {\n\n    v.OS Zj = new v.OS();\n    OS Gd2 = new v.OS();\n  }\n  \n}"));
        CtType<?> innerClass = launcher.buildModel().getAllTypes().iterator().next();
        assertEquals("class v {\n    class A {\n        class GDmoJ {\n            class Z6 {\n                class C {\n                    class Chx {\n                        class Kh {\n                            class F {\n                                class Ang {\n                                    class F_ {\n                                        Z6.C.Chx.Kh.F l = new Z6.C.Chx.Kh.F();\n                                    }\n\n                                    class cof {}\n\n                                    class LOFI {\n                                        v.A.GDmoJ.Z6.C.Chx.Kh.F.Ang t = new Kh.F.Ang();\n\n                                        A s = new A();\n                                    }\n\n                                    class gt {\n                                        Z6.C.Chx AYNV = new Chx();\n\n                                        GDmoJ Sp = new A.GDmoJ();\n\n                                        v.A.GDmoJ.Z6 P = new v.A.GDmoJ.Z6();\n                                    }\n\n                                    Z6.C.Chx.Kh.F W = new Chx.Kh.F();\n\n                                    A.GDmoJ.Z6.C.Chx nWcqux = new Chx();\n\n                                    Kh.F.Ang CYz = new Kh.F.Ang();\n                                }\n\n                                class E {}\n\n                                class B {\n                                    A.GDmoJ.Z6.C.Chx TX = new Chx();\n                                }\n\n                                class lewC6 {}\n                            }\n                        }\n\n                        class FiCLS {}\n\n                        GDmoJ c = new GDmoJ();\n\n                        A.GDmoJ.Z6 Y = new A.GDmoJ.Z6();\n                    }\n\n                    class I {\n                        v.A sRd = new v.A();\n\n                        Z6.C E4 = new C();\n                    }\n\n                    class OIu {}\n\n                    class o {\n                        v.A.GDmoJ.Z6.C.o j = new C.o();\n                    }\n\n                    A f = new A();\n\n                    v.A O = new v.A();\n                }\n            }\n\n            v gz = new v();\n\n            v.A.GDmoJ aKW = new A.GDmoJ();\n\n            v.A.GDmoJ jImWcC = new GDmoJ();\n        }\n    }\n\n    class R {\n        v g = new v();\n\n        R ckE1 = new v.R();\n    }\n\n    class EH8s {\n        v G = new v();\n\n        v Jk = new v();\n    }\n\n    class OS {\n        v.OS Zj = new v.OS();\n\n        OS Gd2 = new v.OS();\n    }\n}", innerClass.toString());
    }

    @Test
    public void test060() {
        Launcher launcher = new Launcher();
        launcher.getEnvironment().setComplianceLevel(17);
        launcher.getEnvironment().setAutoImports(true);
        launcher.getEnvironment().setShouldCompile(true);
        launcher.addInputResource(new VirtualFile("class d {\n  class j {\n    class T {\n      class S {\n        class G {\n          class x {\n            class fbx {\n              class Gr {\n                class n{}\n                class Ib{}\n                j.T WT = new T();\n                T.S.G.x.fbx cid = new G.x.fbx();\n                d.j JAQ = new d.j();\n                j.T.S ZXGZUyk = new T.S();\n              }\n              fbx b = new T.S.G.x.fbx();\n            }\n            class cpa {\n\n              S.G yT = new j.T.S.G();\n            }\n            class BnKe_M {\n\n              G qu = new T.S.G();\n              T kN6 = new d.j.T();\n            }\n            class qH{}\n            \n          }\n          j y = new d.j();\n        }\n        class u {\n\n          d.j.T.S yo = new S();\n          j z = new j();\n        }\n        class H{}\n        class vr{}\n        j roP2 = new j();\n        d.j s7u = new d.j();\n        d L = new d();\n        j ETPg = new j();\n        T B = new j.T();\n      }\n      class AAe0GH{}\n      class mmqvx {\n\n        d.j XnC = new j();\n        d g = new d();\n      }\n      static class SR{}\n      \n    }\n    static class xgA{}\n    class F {\n\n      j.F P = new j.F();\n    }\n    \n  }\n  \n}"));
        CtType<?> innerClass = launcher.buildModel().getAllTypes().iterator().next();
        assertEquals("class d {\n    class j {\n        class T {\n            class S {\n                class G {\n                    class x {\n                        class fbx {\n                            class Gr {\n                                class n {}\n\n                                class Ib {}\n\n                                j.T WT = new T();\n\n                                T.S.G.x.fbx cid = new G.x.fbx();\n\n                                d.j JAQ = new d.j();\n\n                                j.T.S ZXGZUyk = new T.S();\n                            }\n\n                            fbx b = new T.S.G.x.fbx();\n                        }\n\n                        class cpa {\n                            S.G yT = new j.T.S.G();\n                        }\n\n                        class BnKe_M {\n                            G qu = new T.S.G();\n\n                            T kN6 = new d.j.T();\n                        }\n\n                        class qH {}\n                    }\n\n                    j y = new d.j();\n                }\n\n                class u {\n                    d.j.T.S yo = new S();\n\n                    j z = new j();\n                }\n\n                class H {}\n\n                class vr {}\n\n                j roP2 = new j();\n\n                d.j s7u = new d.j();\n\n                d L = new d();\n\n                j ETPg = new j();\n\n                T B = new j.T();\n            }\n\n            class AAe0GH {}\n\n            class mmqvx {\n                d.j XnC = new j();\n\n                d g = new d();\n            }\n\n            static class SR {}\n        }\n\n        static class xgA {}\n\n        class F {\n            j.F P = new j.F();\n        }\n    }\n}", innerClass.toString());
    }

    @Test
    public void test061() {
        Launcher launcher = new Launcher();
        launcher.getEnvironment().setComplianceLevel(17);
        launcher.getEnvironment().setAutoImports(true);
        launcher.getEnvironment().setShouldCompile(true);
        launcher.addInputResource(new VirtualFile("class N {\n  class UyU {\n    class R {\n      class d {\n        class C {\n          class b {\n            class SbK {\n              class Nkf {\n\n                b.SbK Y21 = new SbK();\n              }\n              class W{}\n              class yU{}\n              class hgr5gm {\n\n                R.d.C GQ24 = new R.d.C();\n              }\n              \n            }\n            class k {\n\n              b.k D = new d.C.b.k();\n              UyU.R.d.C.b Z = new N.UyU.R.d.C.b();\n            }\n            class Yo0 {\n\n              UyU p8vM = new UyU();\n              N.UyU.R.d i = new d();\n            }\n            class qVbk {\n\n              R g = new UyU.R();\n              UyU.R.d.C WzjqkAegq = new N.UyU.R.d.C();\n              N.UyU.R G = new R();\n            }\n            \n          }\n          class y4e {\n\n            N.UyU M = new UyU();\n          }\n          \n        }\n        class A{}\n        \n      }\n      class e {\n\n        R NqzHP = new UyU.R();\n      }\n      N t_ = new N();\n      N.UyU Y = new N.UyU();\n      e q = new R.e();\n      N.UyU.R c = new UyU.R();\n    }\n    N ezs = new N();\n  }\n  static class utj1s8y{}\n  class zCU {\n\n    N r = new N();\n  }\n  class a {\n\n    a K = new a();\n  }\n  N oAy = new N();\n  N jq = new N();\n  N n = new N();\n}"));
        CtType<?> innerClass = launcher.buildModel().getAllTypes().iterator().next();
        assertEquals("class N {\n    class UyU {\n        class R {\n            class d {\n                class C {\n                    class b {\n                        class SbK {\n                            class Nkf {\n                                b.SbK Y21 = new SbK();\n                            }\n\n                            class W {}\n\n                            class yU {}\n\n                            class hgr5gm {\n                                R.d.C GQ24 = new R.d.C();\n                            }\n                        }\n\n                        class k {\n                            b.k D = new d.C.b.k();\n\n                            UyU.R.d.C.b Z = new N.UyU.R.d.C.b();\n                        }\n\n                        class Yo0 {\n                            UyU p8vM = new UyU();\n\n                            N.UyU.R.d i = new d();\n                        }\n\n                        class qVbk {\n                            R g = new UyU.R();\n\n                            UyU.R.d.C WzjqkAegq = new N.UyU.R.d.C();\n\n                            N.UyU.R G = new R();\n                        }\n                    }\n\n                    class y4e {\n                        N.UyU M = new UyU();\n                    }\n                }\n\n                class A {}\n            }\n\n            class e {\n                R NqzHP = new UyU.R();\n            }\n\n            N t_ = new N();\n\n            N.UyU Y = new N.UyU();\n\n            e q = new R.e();\n\n            N.UyU.R c = new UyU.R();\n        }\n\n        N ezs = new N();\n    }\n\n    static class utj1s8y {}\n\n    class zCU {\n        N r = new N();\n    }\n\n    class a {\n        a K = new a();\n    }\n\n    N oAy = new N();\n\n    N jq = new N();\n\n    N n = new N();\n}", innerClass.toString());
    }

    @Test
    public void test062() {
        Launcher launcher = new Launcher();
        launcher.getEnvironment().setComplianceLevel(17);
        launcher.getEnvironment().setAutoImports(true);
        launcher.getEnvironment().setShouldCompile(true);
        launcher.addInputResource(new VirtualFile("class o {\n  class L {\n    class G {\n      class b {\n        class A {\n          class ar {\n            class h {\n              class N{}\n              class rZf {\n\n                o.L ZF = new L();\n              }\n              o.L.G.b.A eDMATD = new G.b.A();\n              L.G X = new G();\n              o U = new o();\n            }\n            class R{}\n            class V5My {\n\n              L O = new o.L();\n              b xp = new b();\n              ar CMB = new L.G.b.A.ar();\n            }\n            \n          }\n          class q{}\n          class MU{}\n          class z {\n\n            o F = new o();\n            L.G rhs = new o.L.G();\n          }\n          \n        }\n        class J{}\n        L.G.b ly1Qu2_L = new G.b();\n      }\n      class V {\n\n        G wJ = new G();\n        V ERxO = new L.G.V();\n        o G0 = new o();\n        o Y = new o();\n        o.L hD = new L();\n        G wT = new L.G();\n      }\n      class T{}\n      class kajP{}\n      \n    }\n    class S{}\n    class AZ{}\n    class y6 {\n\n      y6 eJV = new o.L.y6();\n      L p = new o.L();\n    }\n    \n  }\n  o.L t8 = new L();\n}"));
        CtType<?> innerClass = launcher.buildModel().getAllTypes().iterator().next();
        assertEquals("class o {\n    class L {\n        class G {\n            class b {\n                class A {\n                    class ar {\n                        class h {\n                            class N {}\n\n                            class rZf {\n                                o.L ZF = new L();\n                            }\n\n                            o.L.G.b.A eDMATD = new G.b.A();\n\n                            L.G X = new G();\n\n                            o U = new o();\n                        }\n\n                        class R {}\n\n                        class V5My {\n                            L O = new o.L();\n\n                            b xp = new b();\n\n                            ar CMB = new L.G.b.A.ar();\n                        }\n                    }\n\n                    class q {}\n\n                    class MU {}\n\n                    class z {\n                        o F = new o();\n\n                        L.G rhs = new o.L.G();\n                    }\n                }\n\n                class J {}\n\n                L.G.b ly1Qu2_L = new G.b();\n            }\n\n            class V {\n                G wJ = new G();\n\n                V ERxO = new L.G.V();\n\n                o G0 = new o();\n\n                o Y = new o();\n\n                o.L hD = new L();\n\n                G wT = new L.G();\n            }\n\n            class T {}\n\n            class kajP {}\n        }\n\n        class S {}\n\n        class AZ {}\n\n        class y6 {\n            y6 eJV = new o.L.y6();\n\n            L p = new o.L();\n        }\n    }\n\n    o.L t8 = new L();\n}", innerClass.toString());
    }

    @Test
    public void test063() {
        Launcher launcher = new Launcher();
        launcher.getEnvironment().setComplianceLevel(17);
        launcher.getEnvironment().setAutoImports(true);
        launcher.getEnvironment().setShouldCompile(true);
        launcher.addInputResource(new VirtualFile("class V {\n  class A {\n    class h {\n      class n2gE {\n        class Nh {\n          class H {\n            class L {\n              class cQa {\n\n                V o1 = new V();\n                V.A.h.n2gE.Nh Z = new h.n2gE.Nh();\n              }\n              class Ni{}\n              class N {\n\n                A W = new V.A();\n                Nh q = new V.A.h.n2gE.Nh();\n              }\n              class D {\n\n                L QFs = new n2gE.Nh.H.L();\n              }\n              V k6 = new V();\n            }\n            h.n2gE ZBU9 = new n2gE();\n            A.h.n2gE.Nh.H f2v = new h.n2gE.Nh.H();\n          }\n          class pwa {\n\n            V hWaFwS_ = new V();\n            A kz = new A();\n          }\n          class P4{}\n          class s {\n\n            h.n2gE G = new n2gE();\n            V.A p = new A();\n          }\n          A j = new A();\n        }\n        class lEb {\n\n          A x = new V.A();\n        }\n        V.A pcV = new V.A();\n        V.A ZG = new A();\n        Nh i = new h.n2gE.Nh();\n        h w = new A.h();\n      }\n      class g{}\n      class m{}\n      class u{}\n      \n    }\n    class Bk64z{}\n    class UY {\n\n      V.A Y9z = new V.A();\n      V oC = new V();\n      A.UY E = new A.UY();\n      A LE = new A();\n    }\n    class JZZ {\n\n      V Z5 = new V();\n    }\n    V.A.h bcOhG = new h();\n  }\n  static class M0r{}\n  \n}"));
        CtType<?> innerClass = launcher.buildModel().getAllTypes().iterator().next();
        assertEquals("class V {\n    class A {\n        class h {\n            class n2gE {\n                class Nh {\n                    class H {\n                        class L {\n                            class cQa {\n                                V o1 = new V();\n\n                                V.A.h.n2gE.Nh Z = new h.n2gE.Nh();\n                            }\n\n                            class Ni {}\n\n                            class N {\n                                A W = new V.A();\n\n                                Nh q = new V.A.h.n2gE.Nh();\n                            }\n\n                            class D {\n                                L QFs = new n2gE.Nh.H.L();\n                            }\n\n                            V k6 = new V();\n                        }\n\n                        h.n2gE ZBU9 = new n2gE();\n\n                        A.h.n2gE.Nh.H f2v = new h.n2gE.Nh.H();\n                    }\n\n                    class pwa {\n                        V hWaFwS_ = new V();\n\n                        A kz = new A();\n                    }\n\n                    class P4 {}\n\n                    class s {\n                        h.n2gE G = new n2gE();\n\n                        V.A p = new A();\n                    }\n\n                    A j = new A();\n                }\n\n                class lEb {\n                    A x = new V.A();\n                }\n\n                V.A pcV = new V.A();\n\n                V.A ZG = new A();\n\n                Nh i = new h.n2gE.Nh();\n\n                h w = new A.h();\n            }\n\n            class g {}\n\n            class m {}\n\n            class u {}\n        }\n\n        class Bk64z {}\n\n        class UY {\n            V.A Y9z = new V.A();\n\n            V oC = new V();\n\n            A.UY E = new A.UY();\n\n            A LE = new A();\n        }\n\n        class JZZ {\n            V Z5 = new V();\n        }\n\n        V.A.h bcOhG = new h();\n    }\n\n    static class M0r {}\n}", innerClass.toString());
    }

    @Test
    public void test064() {
        Launcher launcher = new Launcher();
        launcher.getEnvironment().setComplianceLevel(17);
        launcher.getEnvironment().setAutoImports(true);
        launcher.getEnvironment().setShouldCompile(true);
        launcher.addInputResource(new VirtualFile("class Bf {\n  class XxM {\n    class J {\n      class bx {\n        class jP {\n          class g4zx7 {\n            class f9 {\n              class Zs {\n                class i{}\n                class h {\n\n                  J.bx zIhG = new bx();\n                  g4zx7.f9 Tw = new Bf.XxM.J.bx.jP.g4zx7.f9();\n                }\n                class SPl{}\n                class GO{}\n                \n              }\n              class e {\n\n                Bf QA = new Bf();\n              }\n              class Okxob{}\n              class N{}\n              \n            }\n            XxM.J.bx.jP.g4zx7.f9 QG76O = new J.bx.jP.g4zx7.f9();\n            g4zx7.f9 mM = new jP.g4zx7.f9();\n            XxM u = new Bf.XxM();\n          }\n          class Yl6 {\n\n            Bf.XxM chw = new Bf.XxM();\n          }\n          class I{}\n          bx TPt = new Bf.XxM.J.bx();\n        }\n        J.bx.jP yrG = new bx.jP();\n        Bf W = new Bf();\n        Bf.XxM PT = new Bf.XxM();\n        XxM BhVDN = new Bf.XxM();\n      }\n      class p {\n\n        Bf awNz = new Bf();\n      }\n      class RdA {\n\n        Bf o = new Bf();\n      }\n      class TS1 {\n\n        Bf lL = new Bf();\n      }\n      \n    }\n    class F {\n\n      Bf.XxM n92 = new XxM();\n      Bf w = new Bf();\n    }\n    XxM rS = new Bf.XxM();\n    Bf Z1FcY7 = new Bf();\n    Bf c = new Bf();\n  }\n  XxM n = new Bf.XxM();\n}"));
        CtType<?> innerClass = launcher.buildModel().getAllTypes().iterator().next();
        assertEquals("class Bf {\n    class XxM {\n        class J {\n            class bx {\n                class jP {\n                    class g4zx7 {\n                        class f9 {\n                            class Zs {\n                                class i {}\n\n                                class h {\n                                    J.bx zIhG = new bx();\n\n                                    g4zx7.f9 Tw = new Bf.XxM.J.bx.jP.g4zx7.f9();\n                                }\n\n                                class SPl {}\n\n                                class GO {}\n                            }\n\n                            class e {\n                                Bf QA = new Bf();\n                            }\n\n                            class Okxob {}\n\n                            class N {}\n                        }\n\n                        XxM.J.bx.jP.g4zx7.f9 QG76O = new J.bx.jP.g4zx7.f9();\n\n                        g4zx7.f9 mM = new jP.g4zx7.f9();\n\n                        XxM u = new Bf.XxM();\n                    }\n\n                    class Yl6 {\n                        Bf.XxM chw = new Bf.XxM();\n                    }\n\n                    class I {}\n\n                    bx TPt = new Bf.XxM.J.bx();\n                }\n\n                J.bx.jP yrG = new bx.jP();\n\n                Bf W = new Bf();\n\n                Bf.XxM PT = new Bf.XxM();\n\n                XxM BhVDN = new Bf.XxM();\n            }\n\n            class p {\n                Bf awNz = new Bf();\n            }\n\n            class RdA {\n                Bf o = new Bf();\n            }\n\n            class TS1 {\n                Bf lL = new Bf();\n            }\n        }\n\n        class F {\n            Bf.XxM n92 = new XxM();\n\n            Bf w = new Bf();\n        }\n\n        XxM rS = new Bf.XxM();\n\n        Bf Z1FcY7 = new Bf();\n\n        Bf c = new Bf();\n    }\n\n    XxM n = new Bf.XxM();\n}", innerClass.toString());
    }

    @Test
    public void test065() {
        Launcher launcher = new Launcher();
        launcher.getEnvironment().setComplianceLevel(17);
        launcher.getEnvironment().setAutoImports(true);
        launcher.getEnvironment().setShouldCompile(true);
        launcher.addInputResource(new VirtualFile("class E {\n  class v {\n    class SMF {\n      class fHQV {\n        class l {\n          class qT {\n            class z {\n              class m {\n                class Q {\n                  class V{}\n                  class T{}\n                  class p {\n\n                    l.qT.z.m.Q zbctYw05 = new SMF.fHQV.l.qT.z.m.Q();\n                  }\n                  class QRG{}\n                  E.v.SMF.fHQV.l X = new SMF.fHQV.l();\n                }\n                class kbOOT{}\n                class B {\n\n                  E PVB = new E();\n                }\n                class y {\n\n                  l.qT.z.m K = new l.qT.z.m();\n                }\n                v.SMF J = new SMF();\n              }\n              E.v.SMF hN = new SMF();\n              SMF.fHQV.l.qT Ae8v = new E.v.SMF.fHQV.l.qT();\n              E.v.SMF.fHQV vD = new fHQV();\n              fHQV.l.qT.z Zk7f = new fHQV.l.qT.z();\n              qT i = new v.SMF.fHQV.l.qT();\n            }\n            \n          }\n          class t {\n\n            E.v.SMF.fHQV.l.t s = new SMF.fHQV.l.t();\n          }\n          class oO{}\n          class G {\n\n            E Rw = new E();\n          }\n          SMF.fHQV.l J1 = new E.v.SMF.fHQV.l();\n        }\n        class Oz{}\n        \n      }\n      class x {\n\n        x R = new x();\n        x U = new x();\n        v.SMF.x q = new E.v.SMF.x();\n      }\n      E fp9N = new E();\n      v.SMF iAR = new E.v.SMF();\n    }\n    \n  }\n  class GK{}\n  class W {\n\n    E D8 = new E();\n    E Z = new E();\n  }\n  E.v i0kV = new v();\n  GK o = new E.GK();\n}"));
        CtType<?> innerClass = launcher.buildModel().getAllTypes().iterator().next();
        assertEquals("class E {\n    class v {\n        class SMF {\n            class fHQV {\n                class l {\n                    class qT {\n                        class z {\n                            class m {\n                                class Q {\n                                    class V {}\n\n                                    class T {}\n\n                                    class p {\n                                        l.qT.z.m.Q zbctYw05 = new SMF.fHQV.l.qT.z.m.Q();\n                                    }\n\n                                    class QRG {}\n\n                                    E.v.SMF.fHQV.l X = new SMF.fHQV.l();\n                                }\n\n                                class kbOOT {}\n\n                                class B {\n                                    E PVB = new E();\n                                }\n\n                                class y {\n                                    l.qT.z.m K = new l.qT.z.m();\n                                }\n\n                                v.SMF J = new SMF();\n                            }\n\n                            E.v.SMF hN = new SMF();\n\n                            SMF.fHQV.l.qT Ae8v = new E.v.SMF.fHQV.l.qT();\n\n                            E.v.SMF.fHQV vD = new fHQV();\n\n                            fHQV.l.qT.z Zk7f = new fHQV.l.qT.z();\n\n                            qT i = new v.SMF.fHQV.l.qT();\n                        }\n                    }\n\n                    class t {\n                        E.v.SMF.fHQV.l.t s = new SMF.fHQV.l.t();\n                    }\n\n                    class oO {}\n\n                    class G {\n                        E Rw = new E();\n                    }\n\n                    SMF.fHQV.l J1 = new E.v.SMF.fHQV.l();\n                }\n\n                class Oz {}\n            }\n\n            class x {\n                x R = new x();\n\n                x U = new x();\n\n                v.SMF.x q = new E.v.SMF.x();\n            }\n\n            E fp9N = new E();\n\n            v.SMF iAR = new E.v.SMF();\n        }\n    }\n\n    class GK {}\n\n    class W {\n        E D8 = new E();\n\n        E Z = new E();\n    }\n\n    E.v i0kV = new v();\n\n    GK o = new E.GK();\n}", innerClass.toString());
    }

    @Test
    public void test066() {
        Launcher launcher = new Launcher();
        launcher.getEnvironment().setComplianceLevel(17);
        launcher.getEnvironment().setAutoImports(true);
        launcher.getEnvironment().setShouldCompile(true);
        launcher.addInputResource(new VirtualFile("class c {\n  class m4IT {\n    class IQ {\n      class rFfJ {\n        class Wy {\n          class t {\n            class vQA15w {\n              class OX{}\n              class ie {\n\n                t p = new m4IT.IQ.rFfJ.Wy.t();\n                m4IT.IQ.rFfJ.Wy.t.vQA15w YRs = new Wy.t.vQA15w();\n                c.m4IT Z = new c.m4IT();\n                rFfJ zyc = new c.m4IT.IQ.rFfJ();\n              }\n              \n            }\n            class AO {\n\n              m4IT Q = new m4IT();\n              c O = new c();\n              t.AO by = new IQ.rFfJ.Wy.t.AO();\n              m4IT y5 = new m4IT();\n              Wy.t.AO IX = new m4IT.IQ.rFfJ.Wy.t.AO();\n              c.m4IT.IQ W = new c.m4IT.IQ();\n              rFfJ M = new m4IT.IQ.rFfJ();\n            }\n            class N {\n\n              m4IT S = new c.m4IT();\n            }\n            \n          }\n          class F0p {\n\n            m4IT.IQ.rFfJ IW7q = new rFfJ();\n          }\n          \n        }\n        class ek{}\n        class cg9{}\n        \n      }\n      class L{}\n      \n    }\n    class H{}\n    class w {\n\n      c.m4IT Vzz = new m4IT();\n      m4IT.w j = new w();\n      c v = new c();\n      m4IT cP = new c.m4IT();\n      m4IT.w h = new m4IT.w();\n    }\n    c LVeLm = new c();\n    m4IT.H Zk = new m4IT.H();\n    m4IT.IQ RAJda = new IQ();\n  }\n  static class Y{}\n  static class a{}\n  class f {\n\n    c.f K = new f();\n  }\n  \n}"));
        CtType<?> innerClass = launcher.buildModel().getAllTypes().iterator().next();
        assertEquals("class c {\n    class m4IT {\n        class IQ {\n            class rFfJ {\n                class Wy {\n                    class t {\n                        class vQA15w {\n                            class OX {}\n\n                            class ie {\n                                t p = new m4IT.IQ.rFfJ.Wy.t();\n\n                                m4IT.IQ.rFfJ.Wy.t.vQA15w YRs = new Wy.t.vQA15w();\n\n                                c.m4IT Z = new c.m4IT();\n\n                                rFfJ zyc = new c.m4IT.IQ.rFfJ();\n                            }\n                        }\n\n                        class AO {\n                            m4IT Q = new m4IT();\n\n                            c O = new c();\n\n                            t.AO by = new IQ.rFfJ.Wy.t.AO();\n\n                            m4IT y5 = new m4IT();\n\n                            Wy.t.AO IX = new m4IT.IQ.rFfJ.Wy.t.AO();\n\n                            c.m4IT.IQ W = new c.m4IT.IQ();\n\n                            rFfJ M = new m4IT.IQ.rFfJ();\n                        }\n\n                        class N {\n                            m4IT S = new c.m4IT();\n                        }\n                    }\n\n                    class F0p {\n                        m4IT.IQ.rFfJ IW7q = new rFfJ();\n                    }\n                }\n\n                class ek {}\n\n                class cg9 {}\n            }\n\n            class L {}\n        }\n\n        class H {}\n\n        class w {\n            c.m4IT Vzz = new m4IT();\n\n            m4IT.w j = new w();\n\n            c v = new c();\n\n            m4IT cP = new c.m4IT();\n\n            m4IT.w h = new m4IT.w();\n        }\n\n        c LVeLm = new c();\n\n        m4IT.H Zk = new m4IT.H();\n\n        m4IT.IQ RAJda = new IQ();\n    }\n\n    static class Y {}\n\n    static class a {}\n\n    class f {\n        c.f K = new f();\n    }\n}", innerClass.toString());
    }

    @Test
    public void test067() {
        Launcher launcher = new Launcher();
        launcher.getEnvironment().setComplianceLevel(17);
        launcher.getEnvironment().setAutoImports(true);
        launcher.getEnvironment().setShouldCompile(true);
        launcher.addInputResource(new VirtualFile("class MYiW {\n  class FM {\n    class u {\n      class y {\n        class UkP {\n          class M {\n            class JY{}\n            class v{}\n            static class BY{}\n            static class x{}\n            \n          }\n          static class TK{}\n          static class df{}\n          class ET {\n\n            MYiW Y = new MYiW();\n          }\n          \n        }\n        class GYe4{}\n        class xQgYF{}\n        \n      }\n      static class q9{}\n      u k = new u();\n    }\n    static class A{}\n    \n  }\n  static class AD{}\n  class gB {\n\n    MYiW.gB a = new gB();\n    gB W = new MYiW.gB();\n    MYiW.gB q = new MYiW.gB();\n  }\n  class JD{}\n  \n}"));
        CtType<?> innerClass = launcher.buildModel().getAllTypes().iterator().next();
        assertEquals("class MYiW {\n    class FM {\n        class u {\n            class y {\n                class UkP {\n                    class M {\n                        class JY {}\n\n                        class v {}\n\n                        static class BY {}\n\n                        static class x {}\n                    }\n\n                    static class TK {}\n\n                    static class df {}\n\n                    class ET {\n                        MYiW Y = new MYiW();\n                    }\n                }\n\n                class GYe4 {}\n\n                class xQgYF {}\n            }\n\n            static class q9 {}\n\n            u k = new u();\n        }\n\n        static class A {}\n    }\n\n    static class AD {}\n\n    class gB {\n        MYiW.gB a = new gB();\n\n        gB W = new MYiW.gB();\n\n        MYiW.gB q = new MYiW.gB();\n    }\n\n    class JD {}\n}", innerClass.toString());
    }

    @Test
    public void test068() {
        Launcher launcher = new Launcher();
        launcher.getEnvironment().setComplianceLevel(17);
        launcher.getEnvironment().setAutoImports(true);
        launcher.getEnvironment().setShouldCompile(true);
        launcher.addInputResource(new VirtualFile("class ugJ {\n  class rb {\n    class RIn_ {\n      class u {\n        class ja {\n          class Q {\n            class Zd {\n              class WxV8 {\n\n                ugJ.rb Og = new rb();\n                ugJ.rb eu = new ugJ.rb();\n                ugJ h = new ugJ();\n              }\n              class JZ {\n\n                u.ja K = new ja();\n              }\n              \n            }\n            class Gb{}\n            RIn_.u.ja I = new rb.RIn_.u.ja();\n            ugJ.rb.RIn_ KZZ = new rb.RIn_();\n          }\n          class U {\n\n            rb.RIn_.u ym = new rb.RIn_.u();\n            rb.RIn_ nY = new ugJ.rb.RIn_();\n            ugJ.rb.RIn_ aB9 = new RIn_();\n            rb.RIn_.u j = new RIn_.u();\n          }\n          class I7{}\n          \n        }\n        class pIlIN{}\n        class t{}\n        \n      }\n      class A9{}\n      class ed {\n\n        ugJ Y = new ugJ();\n      }\n      ugJ.rb EH = new ugJ.rb();\n      ugJ P = new ugJ();\n      ugJ Z1hx7De = new ugJ();\n    }\n    class R {\n\n      ugJ c = new ugJ();\n      ugJ ZhO = new ugJ();\n    }\n    class p{}\n    class D{}\n    ugJ.rb a1B = new ugJ.rb();\n  }\n  class O{}\n  class UoX {\n\n    ugJ te6 = new ugJ();\n  }\n  rb EvyqS = new ugJ.rb();\n}"));
        CtType<?> innerClass = launcher.buildModel().getAllTypes().iterator().next();
        assertEquals("class ugJ {\n    class rb {\n        class RIn_ {\n            class u {\n                class ja {\n                    class Q {\n                        class Zd {\n                            class WxV8 {\n                                ugJ.rb Og = new rb();\n\n                                ugJ.rb eu = new ugJ.rb();\n\n                                ugJ h = new ugJ();\n                            }\n\n                            class JZ {\n                                u.ja K = new ja();\n                            }\n                        }\n\n                        class Gb {}\n\n                        RIn_.u.ja I = new rb.RIn_.u.ja();\n\n                        ugJ.rb.RIn_ KZZ = new rb.RIn_();\n                    }\n\n                    class U {\n                        rb.RIn_.u ym = new rb.RIn_.u();\n\n                        rb.RIn_ nY = new ugJ.rb.RIn_();\n\n                        ugJ.rb.RIn_ aB9 = new RIn_();\n\n                        rb.RIn_.u j = new RIn_.u();\n                    }\n\n                    class I7 {}\n                }\n\n                class pIlIN {}\n\n                class t {}\n            }\n\n            class A9 {}\n\n            class ed {\n                ugJ Y = new ugJ();\n            }\n\n            ugJ.rb EH = new ugJ.rb();\n\n            ugJ P = new ugJ();\n\n            ugJ Z1hx7De = new ugJ();\n        }\n\n        class R {\n            ugJ c = new ugJ();\n\n            ugJ ZhO = new ugJ();\n        }\n\n        class p {}\n\n        class D {}\n\n        ugJ.rb a1B = new ugJ.rb();\n    }\n\n    class O {}\n\n    class UoX {\n        ugJ te6 = new ugJ();\n    }\n\n    rb EvyqS = new ugJ.rb();\n}", innerClass.toString());
    }

    @Test
    public void test069() {
        Launcher launcher = new Launcher();
        launcher.getEnvironment().setComplianceLevel(17);
        launcher.getEnvironment().setAutoImports(true);
        launcher.getEnvironment().setShouldCompile(true);
        launcher.addInputResource(new VirtualFile("class Py {\n  class Bj8_ng {\n    class g {\n      class ceNd {\n        class p {\n          class Vd {\n            class W {\n              class kSH {\n                class a {\n                  class D{}\n                  class tW3J {\n\n                    Py V = new Py();\n                  }\n                  class ws{}\n                  class T7w {\n\n                    W.kSH Bo = new Bj8_ng.g.ceNd.p.Vd.W.kSH();\n                  }\n                  Vd.W.kSH hM = new Py.Bj8_ng.g.ceNd.p.Vd.W.kSH();\n                  Vd.W.kSH J0qt = new Vd.W.kSH();\n                }\n                p.Vd nW = new g.ceNd.p.Vd();\n                Py o = new Py();\n                p.Vd.W.kSH Ug = new Py.Bj8_ng.g.ceNd.p.Vd.W.kSH();\n              }\n              class JT {\n\n                g.ceNd q = new g.ceNd();\n                Bj8_ng iH = new Bj8_ng();\n                Bj8_ng oN = new Bj8_ng();\n              }\n              class P {\n\n                Py w = new Py();\n              }\n              \n            }\n            class Jvqg {\n\n              Py.Bj8_ng.g.ceNd b14C = new Py.Bj8_ng.g.ceNd();\n              p YDX = new Bj8_ng.g.ceNd.p();\n            }\n            Bj8_ng.g J = new Py.Bj8_ng.g();\n          }\n          class Vn4_ {\n\n            Py bS = new Py();\n            g.ceNd.p U = new ceNd.p();\n            g.ceNd zK = new g.ceNd();\n            Py.Bj8_ng.g G = new g();\n            Py.Bj8_ng.g.ceNd er = new Bj8_ng.g.ceNd();\n          }\n          class PT{}\n          \n        }\n        Py.Bj8_ng.g xy = new Py.Bj8_ng.g();\n        Py O8g0r = new Py();\n        ceNd.p u = new g.ceNd.p();\n      }\n      \n    }\n    static class f{}\n    \n  }\n  class F0 {\n\n    Py.F0 uo_ = new Py.F0();\n    Py.F0 Z2 = new F0();\n  }\n  \n}"));
        CtType<?> innerClass = launcher.buildModel().getAllTypes().iterator().next();
        assertEquals("class Py {\n    class Bj8_ng {\n        class g {\n            class ceNd {\n                class p {\n                    class Vd {\n                        class W {\n                            class kSH {\n                                class a {\n                                    class D {}\n\n                                    class tW3J {\n                                        Py V = new Py();\n                                    }\n\n                                    class ws {}\n\n                                    class T7w {\n                                        W.kSH Bo = new Bj8_ng.g.ceNd.p.Vd.W.kSH();\n                                    }\n\n                                    Vd.W.kSH hM = new Py.Bj8_ng.g.ceNd.p.Vd.W.kSH();\n\n                                    Vd.W.kSH J0qt = new Vd.W.kSH();\n                                }\n\n                                p.Vd nW = new g.ceNd.p.Vd();\n\n                                Py o = new Py();\n\n                                p.Vd.W.kSH Ug = new Py.Bj8_ng.g.ceNd.p.Vd.W.kSH();\n                            }\n\n                            class JT {\n                                g.ceNd q = new g.ceNd();\n\n                                Bj8_ng iH = new Bj8_ng();\n\n                                Bj8_ng oN = new Bj8_ng();\n                            }\n\n                            class P {\n                                Py w = new Py();\n                            }\n                        }\n\n                        class Jvqg {\n                            Py.Bj8_ng.g.ceNd b14C = new Py.Bj8_ng.g.ceNd();\n\n                            p YDX = new Bj8_ng.g.ceNd.p();\n                        }\n\n                        Bj8_ng.g J = new Py.Bj8_ng.g();\n                    }\n\n                    class Vn4_ {\n                        Py bS = new Py();\n\n                        g.ceNd.p U = new ceNd.p();\n\n                        g.ceNd zK = new g.ceNd();\n\n                        Py.Bj8_ng.g G = new g();\n\n                        Py.Bj8_ng.g.ceNd er = new Bj8_ng.g.ceNd();\n                    }\n\n                    class PT {}\n                }\n\n                Py.Bj8_ng.g xy = new Py.Bj8_ng.g();\n\n                Py O8g0r = new Py();\n\n                ceNd.p u = new g.ceNd.p();\n            }\n        }\n\n        static class f {}\n    }\n\n    class F0 {\n        Py.F0 uo_ = new Py.F0();\n\n        Py.F0 Z2 = new F0();\n    }\n}", innerClass.toString());
    }

    @Test
    public void test070() {
        Launcher launcher = new Launcher();
        launcher.getEnvironment().setComplianceLevel(17);
        launcher.getEnvironment().setAutoImports(true);
        launcher.getEnvironment().setShouldCompile(true);
        launcher.addInputResource(new VirtualFile("class LD {\n  class o65 {\n    class ar {\n      class pw {\n        class vt {\n          class Z {\n            class iw {\n              class l {\n                class ma {\n                  class I {\n\n                    o65.ar v = new o65.ar();\n                    Z kwMq8P = new pw.vt.Z();\n                  }\n                  class yD {\n\n                    ar f = new ar();\n                    vt W = new vt();\n                  }\n                  class RTI2 {\n\n                    ar.pw wa = new ar.pw();\n                    l TJ7cN = new Z.iw.l();\n                  }\n                  ma.RTI2 vlj = new iw.l.ma.RTI2();\n                  LD g = new LD();\n                }\n                class VNG{}\n                class y {\n\n                  pw.vt.Z.iw.l.y d = new pw.vt.Z.iw.l.y();\n                }\n                \n              }\n              \n            }\n            o65.ar.pw.vt.Z a = new pw.vt.Z();\n            LD CBLmk = new LD();\n          }\n          class Bq {\n\n            o65 j_E8 = new LD.o65();\n          }\n          class b {\n\n            LD F9Sj2PI = new LD();\n            LD.o65.ar.pw.vt.b hV1 = new o65.ar.pw.vt.b();\n          }\n          b K = new LD.o65.ar.pw.vt.b();\n        }\n        class h {\n\n          LD.o65 rV = new o65();\n        }\n        class NI {\n\n          LD k = new LD();\n          ar L = new ar();\n        }\n        \n      }\n      \n    }\n    \n  }\n  class zKgkOJV {\n\n    LD O = new LD();\n  }\n  class M9 {\n\n    M9 r = new M9();\n    LD tR = new LD();\n  }\n  static class J{}\n  LD.zKgkOJV X0jFj = new LD.zKgkOJV();\n  LD j = new LD();\n}"));
        CtType<?> innerClass = launcher.buildModel().getAllTypes().iterator().next();
        assertEquals("class LD {\n    class o65 {\n        class ar {\n            class pw {\n                class vt {\n                    class Z {\n                        class iw {\n                            class l {\n                                class ma {\n                                    class I {\n                                        o65.ar v = new o65.ar();\n\n                                        Z kwMq8P = new pw.vt.Z();\n                                    }\n\n                                    class yD {\n                                        ar f = new ar();\n\n                                        vt W = new vt();\n                                    }\n\n                                    class RTI2 {\n                                        ar.pw wa = new ar.pw();\n\n                                        l TJ7cN = new Z.iw.l();\n                                    }\n\n                                    ma.RTI2 vlj = new iw.l.ma.RTI2();\n\n                                    LD g = new LD();\n                                }\n\n                                class VNG {}\n\n                                class y {\n                                    pw.vt.Z.iw.l.y d = new pw.vt.Z.iw.l.y();\n                                }\n                            }\n                        }\n\n                        o65.ar.pw.vt.Z a = new pw.vt.Z();\n\n                        LD CBLmk = new LD();\n                    }\n\n                    class Bq {\n                        o65 j_E8 = new LD.o65();\n                    }\n\n                    class b {\n                        LD F9Sj2PI = new LD();\n\n                        LD.o65.ar.pw.vt.b hV1 = new o65.ar.pw.vt.b();\n                    }\n\n                    b K = new LD.o65.ar.pw.vt.b();\n                }\n\n                class h {\n                    LD.o65 rV = new o65();\n                }\n\n                class NI {\n                    LD k = new LD();\n\n                    ar L = new ar();\n                }\n            }\n        }\n    }\n\n    class zKgkOJV {\n        LD O = new LD();\n    }\n\n    class M9 {\n        M9 r = new M9();\n\n        LD tR = new LD();\n    }\n\n    static class J {}\n\n    LD.zKgkOJV X0jFj = new LD.zKgkOJV();\n\n    LD j = new LD();\n}", innerClass.toString());
    }

    @Test
    public void test071() {
        Launcher launcher = new Launcher();
        launcher.getEnvironment().setComplianceLevel(17);
        launcher.getEnvironment().setAutoImports(true);
        launcher.getEnvironment().setShouldCompile(true);
        launcher.addInputResource(new VirtualFile("class h4 {\n  class vX {\n    class n {\n      class x {\n        class u {\n          class JeV5 {\n            class Gr {\n              class iSoy{}\n              class W {\n\n                h4 lqD = new h4();\n              }\n              class N{}\n              \n            }\n            class I {\n\n              x.u.JeV5.I s = new vX.n.x.u.JeV5.I();\n              u zv = new vX.n.x.u();\n            }\n            class X{}\n            \n          }\n          \n        }\n        class i{}\n        n.x Z = new h4.vX.n.x();\n      }\n      class nR8Ij {\n\n        vX.n.nR8Ij e = new nR8Ij();\n      }\n      class m{}\n      class Hq{}\n      h4 Ns = new h4();\n    }\n    class hfF{}\n    class B{}\n    \n  }\n  class RP{}\n  class p{}\n  h4 JFz1PyG = new h4();\n  h4.p ox = new p();\n  h4.vX f = new h4.vX();\n}"));
        CtType<?> innerClass = launcher.buildModel().getAllTypes().iterator().next();
        assertEquals("class h4 {\n    class vX {\n        class n {\n            class x {\n                class u {\n                    class JeV5 {\n                        class Gr {\n                            class iSoy {}\n\n                            class W {\n                                h4 lqD = new h4();\n                            }\n\n                            class N {}\n                        }\n\n                        class I {\n                            x.u.JeV5.I s = new vX.n.x.u.JeV5.I();\n\n                            u zv = new vX.n.x.u();\n                        }\n\n                        class X {}\n                    }\n                }\n\n                class i {}\n\n                n.x Z = new h4.vX.n.x();\n            }\n\n            class nR8Ij {\n                vX.n.nR8Ij e = new nR8Ij();\n            }\n\n            class m {}\n\n            class Hq {}\n\n            h4 Ns = new h4();\n        }\n\n        class hfF {}\n\n        class B {}\n    }\n\n    class RP {}\n\n    class p {}\n\n    h4 JFz1PyG = new h4();\n\n    h4.p ox = new p();\n\n    h4.vX f = new h4.vX();\n}", innerClass.toString());
    }

    @Test
    public void test072() {
        Launcher launcher = new Launcher();
        launcher.getEnvironment().setComplianceLevel(17);
        launcher.getEnvironment().setAutoImports(true);
        launcher.getEnvironment().setShouldCompile(true);
        launcher.addInputResource(new VirtualFile("class o {\n  class I {\n    class BD {\n      class C {\n        class p {\n          class i {\n            class gw {\n              class k {\n\n                i.gw.k S = new o.I.BD.C.p.i.gw.k();\n              }\n              class Xr{}\n              class h{}\n              class qE85m65E {\n\n                i u = new p.i();\n                C.p MIkKRWr = new p();\n              }\n              o.I m = new I();\n              BD.C.p.i G = new p.i();\n            }\n            class eV {\n\n              BD.C o7 = new I.BD.C();\n              o.I Fp = new o.I();\n              o.I.BD.C MLfy = new I.BD.C();\n              C.p pUBU = new o.I.BD.C.p();\n              p E6l = new I.BD.C.p();\n              o.I n = new I();\n            }\n            o.I B = new o.I();\n            o.I Ms = new I();\n            BD.C a = new I.BD.C();\n          }\n          BD ca = new I.BD();\n        }\n        class c{}\n        class A {\n\n          o.I.BD.C.A Pb = new I.BD.C.A();\n        }\n        o.I.BD.C.c X = new o.I.BD.C.c();\n        o.I.BD.C D2Ag = new C();\n      }\n      class Z{}\n      o.I Aw = new o.I();\n      o.I H = new I();\n      I cF = new I();\n      BD.Z Id = new I.BD.Z();\n      o j = new o();\n    }\n    class PH {\n\n      o.I z = new o.I();\n      I fh = new o.I();\n      o Ff = new o();\n    }\n    class RS{}\n    class qg{}\n    \n  }\n  static class e{}\n  class BL{}\n  \n}"));
        CtType<?> innerClass = launcher.buildModel().getAllTypes().iterator().next();
        assertEquals("class o {\n    class I {\n        class BD {\n            class C {\n                class p {\n                    class i {\n                        class gw {\n                            class k {\n                                i.gw.k S = new o.I.BD.C.p.i.gw.k();\n                            }\n\n                            class Xr {}\n\n                            class h {}\n\n                            class qE85m65E {\n                                i u = new p.i();\n\n                                C.p MIkKRWr = new p();\n                            }\n\n                            o.I m = new I();\n\n                            BD.C.p.i G = new p.i();\n                        }\n\n                        class eV {\n                            BD.C o7 = new I.BD.C();\n\n                            o.I Fp = new o.I();\n\n                            o.I.BD.C MLfy = new I.BD.C();\n\n                            C.p pUBU = new o.I.BD.C.p();\n\n                            p E6l = new I.BD.C.p();\n\n                            o.I n = new I();\n                        }\n\n                        o.I B = new o.I();\n\n                        o.I Ms = new I();\n\n                        BD.C a = new I.BD.C();\n                    }\n\n                    BD ca = new I.BD();\n                }\n\n                class c {}\n\n                class A {\n                    o.I.BD.C.A Pb = new I.BD.C.A();\n                }\n\n                o.I.BD.C.c X = new o.I.BD.C.c();\n\n                o.I.BD.C D2Ag = new C();\n            }\n\n            class Z {}\n\n            o.I Aw = new o.I();\n\n            o.I H = new I();\n\n            I cF = new I();\n\n            BD.Z Id = new I.BD.Z();\n\n            o j = new o();\n        }\n\n        class PH {\n            o.I z = new o.I();\n\n            I fh = new o.I();\n\n            o Ff = new o();\n        }\n\n        class RS {}\n\n        class qg {}\n    }\n\n    static class e {}\n\n    class BL {}\n}", innerClass.toString());
    }

    @Test
    public void test073() {
        Launcher launcher = new Launcher();
        launcher.getEnvironment().setComplianceLevel(17);
        launcher.getEnvironment().setAutoImports(true);
        launcher.getEnvironment().setShouldCompile(true);
        launcher.addInputResource(new VirtualFile("class f {\n  class W {\n    class v {\n      class keL {\n        class u {\n          class knv {\n            class eyg{}\n            class D{}\n            class M{}\n            class i {\n\n              f.W P = new f.W();\n            }\n            f.W.v.keL.u J = new u();\n            M B = new knv.M();\n            keL.u.knv.M qi = new M();\n            f.W.v w = new W.v();\n            u.knv K = new u.knv();\n            W G = new W();\n            u.knv H = new W.v.keL.u.knv();\n            f.W t = new f.W();\n          }\n          class jO{}\n          class oo4{}\n          class o{}\n          keL O = new keL();\n        }\n        class U_{}\n        class F{}\n        class x{}\n        \n      }\n      class Pc{}\n      class Dy {\n\n        f p0 = new f();\n      }\n      \n    }\n    \n  }\n  class jBCN{}\n  static class T{}\n  \n}"));
        CtType<?> innerClass = launcher.buildModel().getAllTypes().iterator().next();
        assertEquals("class f {\n    class W {\n        class v {\n            class keL {\n                class u {\n                    class knv {\n                        class eyg {}\n\n                        class D {}\n\n                        class M {}\n\n                        class i {\n                            f.W P = new f.W();\n                        }\n\n                        f.W.v.keL.u J = new u();\n\n                        M B = new knv.M();\n\n                        keL.u.knv.M qi = new M();\n\n                        f.W.v w = new W.v();\n\n                        u.knv K = new u.knv();\n\n                        W G = new W();\n\n                        u.knv H = new W.v.keL.u.knv();\n\n                        f.W t = new f.W();\n                    }\n\n                    class jO {}\n\n                    class oo4 {}\n\n                    class o {}\n\n                    keL O = new keL();\n                }\n\n                class U_ {}\n\n                class F {}\n\n                class x {}\n            }\n\n            class Pc {}\n\n            class Dy {\n                f p0 = new f();\n            }\n        }\n    }\n\n    class jBCN {}\n\n    static class T {}\n}", innerClass.toString());
    }

    @Test
    public void test074() {
        Launcher launcher = new Launcher();
        launcher.getEnvironment().setComplianceLevel(17);
        launcher.getEnvironment().setAutoImports(true);
        launcher.getEnvironment().setShouldCompile(true);
        launcher.addInputResource(new VirtualFile("class GjS {\n  class Om {\n    class j {\n      class rNR {\n        class NCBQzf {\n          class eT_ {\n\n            GjS.Om E = new GjS.Om();\n            GjS.Om.j V = new Om.j();\n          }\n          class zY{}\n          class k{}\n          \n        }\n        class xw {\n\n          GjS D = new GjS();\n          rNR XllU6E = new GjS.Om.j.rNR();\n        }\n        class W{}\n        class ArUDJf3 {\n\n          ArUDJf3 t1x = new GjS.Om.j.rNR.ArUDJf3();\n          GjS.Om y = new Om();\n          Om es = new GjS.Om();\n        }\n        Om.j l7p = new GjS.Om.j();\n        Om xe_F = new GjS.Om();\n        j n = new GjS.Om.j();\n        GjS.Om.j.rNR.xw l = new j.rNR.xw();\n        j.rNR O = new Om.j.rNR();\n      }\n      class G {\n\n        j.G Bd = new Om.j.G();\n        j e = new Om.j();\n      }\n      class L {\n\n        GjS.Om r = new GjS.Om();\n      }\n      class M{}\n      GjS x = new GjS();\n    }\n    class jVZ{}\n    class OF {\n\n      GjS.Om.OF NA = new Om.OF();\n      GjS.Om.OF t = new GjS.Om.OF();\n      Om.OF B = new Om.OF();\n    }\n    class i{}\n    \n  }\n  static class a4{}\n  class Z{}\n  static class msR{}\n  \n}"));
        CtType<?> innerClass = launcher.buildModel().getAllTypes().iterator().next();
        assertEquals("class GjS {\n    class Om {\n        class j {\n            class rNR {\n                class NCBQzf {\n                    class eT_ {\n                        GjS.Om E = new GjS.Om();\n\n                        GjS.Om.j V = new Om.j();\n                    }\n\n                    class zY {}\n\n                    class k {}\n                }\n\n                class xw {\n                    GjS D = new GjS();\n\n                    rNR XllU6E = new GjS.Om.j.rNR();\n                }\n\n                class W {}\n\n                class ArUDJf3 {\n                    ArUDJf3 t1x = new GjS.Om.j.rNR.ArUDJf3();\n\n                    GjS.Om y = new Om();\n\n                    Om es = new GjS.Om();\n                }\n\n                Om.j l7p = new GjS.Om.j();\n\n                Om xe_F = new GjS.Om();\n\n                j n = new GjS.Om.j();\n\n                GjS.Om.j.rNR.xw l = new j.rNR.xw();\n\n                j.rNR O = new Om.j.rNR();\n            }\n\n            class G {\n                j.G Bd = new Om.j.G();\n\n                j e = new Om.j();\n            }\n\n            class L {\n                GjS.Om r = new GjS.Om();\n            }\n\n            class M {}\n\n            GjS x = new GjS();\n        }\n\n        class jVZ {}\n\n        class OF {\n            GjS.Om.OF NA = new Om.OF();\n\n            GjS.Om.OF t = new GjS.Om.OF();\n\n            Om.OF B = new Om.OF();\n        }\n\n        class i {}\n    }\n\n    static class a4 {}\n\n    class Z {}\n\n    static class msR {}\n}", innerClass.toString());
    }

    @Test
    public void test075() {
        Launcher launcher = new Launcher();
        launcher.getEnvironment().setComplianceLevel(17);
        launcher.getEnvironment().setAutoImports(true);
        launcher.getEnvironment().setShouldCompile(true);
        launcher.addInputResource(new VirtualFile("class Memn {\n  class in {\n    class B {\n      class x {\n        class I {\n          class S {\n            class SM {\n              class P {\n                class ZB {\n                  class d {\n\n                    SM.P.ZB.d r = new SM.P.ZB.d();\n                  }\n                  Memn.in.B.x Yl = new Memn.in.B.x();\n                }\n                class Uc {\n\n                  in.B.x.I.S.SM.P iDIBS6 = new P();\n                }\n                class GT{}\n                x WK = new in.B.x();\n                P e = new I.S.SM.P();\n              }\n              \n            }\n            I.S PzqKI = new I.S();\n          }\n          class qx {\n\n            Memn z = new Memn();\n            Memn.in.B nK = new B();\n          }\n          class zI{}\n          class KT0{}\n          \n        }\n        I IK = new I();\n        Memn.in shC = new in();\n        I Lez = new in.B.x.I();\n      }\n      class kh{}\n      \n    }\n    class Ry {\n\n      Ry c = new Memn.in.Ry();\n    }\n    class w {\n\n      Memn.in.w l = new in.w();\n    }\n    class j {\n\n      Memn.in gcS = new in();\n      j bZ = new Memn.in.j();\n    }\n    Memn k = new Memn();\n    in eNl = new Memn.in();\n    Memn.in Yfaf = new in();\n    in q2 = new in();\n  }\n  class o {\n\n    Memn H = new Memn();\n  }\n  Memn.in GI = new in();\n}"));
        CtType<?> innerClass = launcher.buildModel().getAllTypes().iterator().next();
        assertEquals("class Memn {\n    class in {\n        class B {\n            class x {\n                class I {\n                    class S {\n                        class SM {\n                            class P {\n                                class ZB {\n                                    class d {\n                                        SM.P.ZB.d r = new SM.P.ZB.d();\n                                    }\n\n                                    Memn.in.B.x Yl = new Memn.in.B.x();\n                                }\n\n                                class Uc {\n                                    in.B.x.I.S.SM.P iDIBS6 = new P();\n                                }\n\n                                class GT {}\n\n                                x WK = new in.B.x();\n\n                                P e = new I.S.SM.P();\n                            }\n                        }\n\n                        I.S PzqKI = new I.S();\n                    }\n\n                    class qx {\n                        Memn z = new Memn();\n\n                        Memn.in.B nK = new B();\n                    }\n\n                    class zI {}\n\n                    class KT0 {}\n                }\n\n                I IK = new I();\n\n                Memn.in shC = new in();\n\n                I Lez = new in.B.x.I();\n            }\n\n            class kh {}\n        }\n\n        class Ry {\n            Ry c = new Memn.in.Ry();\n        }\n\n        class w {\n            Memn.in.w l = new in.w();\n        }\n\n        class j {\n            Memn.in gcS = new in();\n\n            j bZ = new Memn.in.j();\n        }\n\n        Memn k = new Memn();\n\n        in eNl = new Memn.in();\n\n        Memn.in Yfaf = new in();\n\n        in q2 = new in();\n    }\n\n    class o {\n        Memn H = new Memn();\n    }\n\n    Memn.in GI = new in();\n}", innerClass.toString());
    }

    @Test
    public void test076() {
        Launcher launcher = new Launcher();
        launcher.getEnvironment().setComplianceLevel(17);
        launcher.getEnvironment().setAutoImports(true);
        launcher.getEnvironment().setShouldCompile(true);
        launcher.addInputResource(new VirtualFile("class m_p {\n  class Ln {\n    class lJu3 {\n      class k {\n        class OGywk {\n          class Tk {\n            class v {\n              class L {\n                class j {\n                  class u{}\n                  class NJp {\n\n                    k.OGywk.Tk.v.L JxiDG = new L();\n                  }\n                  class l {\n\n                    Tk.v.L.j.l PLG = new lJu3.k.OGywk.Tk.v.L.j.l();\n                    lJu3.k JW5EkG = new m_p.Ln.lJu3.k();\n                    m_p.Ln QF = new m_p.Ln();\n                  }\n                  \n                }\n                class W{}\n                \n              }\n              class yUnadINOiM{}\n              \n            }\n            class a {\n\n              lJu3 qx3nI = new Ln.lJu3();\n              m_p.Ln E4 = new Ln();\n            }\n            class y {\n\n              m_p.Ln.lJu3.k.OGywk.Tk.y qK7Y = new Ln.lJu3.k.OGywk.Tk.y();\n              lJu3.k ip = new Ln.lJu3.k();\n              Ln Q = new Ln();\n              m_p.Ln.lJu3.k X = new m_p.Ln.lJu3.k();\n            }\n            class DU {\n\n              lJu3.k.OGywk J = new Ln.lJu3.k.OGywk();\n            }\n            \n          }\n          Ln B = new Ln();\n          m_p.Ln.lJu3 j7B = new Ln.lJu3();\n          m_p p7gaRp = new m_p();\n        }\n        \n      }\n      class w{}\n      class S {\n\n        m_p Gg = new m_p();\n        Ln.lJu3 bRY = new m_p.Ln.lJu3();\n      }\n      w SzH = new lJu3.w();\n      m_p p = new m_p();\n      Ln I = new m_p.Ln();\n      lJu3.w X6SG = new Ln.lJu3.w();\n      m_p.Ln.lJu3 CP = new lJu3();\n      m_p.Ln.lJu3 M = new Ln.lJu3();\n      m_p BfB_ = new m_p();\n    }\n    static class oi{}\n    class c {\n\n      m_p zJC8 = new m_p();\n      m_p tH = new m_p();\n      m_p F = new m_p();\n    }\n    class n5{}\n    Ln.oi R_ = new Ln.oi();\n  }\n  \n}"));
        CtType<?> innerClass = launcher.buildModel().getAllTypes().iterator().next();
        assertEquals("class m_p {\n    class Ln {\n        class lJu3 {\n            class k {\n                class OGywk {\n                    class Tk {\n                        class v {\n                            class L {\n                                class j {\n                                    class u {}\n\n                                    class NJp {\n                                        k.OGywk.Tk.v.L JxiDG = new L();\n                                    }\n\n                                    class l {\n                                        Tk.v.L.j.l PLG = new lJu3.k.OGywk.Tk.v.L.j.l();\n\n                                        lJu3.k JW5EkG = new m_p.Ln.lJu3.k();\n\n                                        m_p.Ln QF = new m_p.Ln();\n                                    }\n                                }\n\n                                class W {}\n                            }\n\n                            class yUnadINOiM {}\n                        }\n\n                        class a {\n                            lJu3 qx3nI = new Ln.lJu3();\n\n                            m_p.Ln E4 = new Ln();\n                        }\n\n                        class y {\n                            m_p.Ln.lJu3.k.OGywk.Tk.y qK7Y = new Ln.lJu3.k.OGywk.Tk.y();\n\n                            lJu3.k ip = new Ln.lJu3.k();\n\n                            Ln Q = new Ln();\n\n                            m_p.Ln.lJu3.k X = new m_p.Ln.lJu3.k();\n                        }\n\n                        class DU {\n                            lJu3.k.OGywk J = new Ln.lJu3.k.OGywk();\n                        }\n                    }\n\n                    Ln B = new Ln();\n\n                    m_p.Ln.lJu3 j7B = new Ln.lJu3();\n\n                    m_p p7gaRp = new m_p();\n                }\n            }\n\n            class w {}\n\n            class S {\n                m_p Gg = new m_p();\n\n                Ln.lJu3 bRY = new m_p.Ln.lJu3();\n            }\n\n            w SzH = new lJu3.w();\n\n            m_p p = new m_p();\n\n            Ln I = new m_p.Ln();\n\n            lJu3.w X6SG = new Ln.lJu3.w();\n\n            m_p.Ln.lJu3 CP = new lJu3();\n\n            m_p.Ln.lJu3 M = new Ln.lJu3();\n\n            m_p BfB_ = new m_p();\n        }\n\n        static class oi {}\n\n        class c {\n            m_p zJC8 = new m_p();\n\n            m_p tH = new m_p();\n\n            m_p F = new m_p();\n        }\n\n        class n5 {}\n\n        Ln.oi R_ = new Ln.oi();\n    }\n}", innerClass.toString());
    }

    @Test
    public void test077() {
        Launcher launcher = new Launcher();
        launcher.getEnvironment().setComplianceLevel(17);
        launcher.getEnvironment().setAutoImports(true);
        launcher.getEnvironment().setShouldCompile(true);
        launcher.addInputResource(new VirtualFile("class ys {\n  class EE {\n    class pPNL {\n      class A {\n        class u {\n          class Jv {\n            class ZzeU {\n              class Llu{}\n              class fV{}\n              class y {\n\n                EE h = new ys.EE();\n              }\n              pPNL.A.u.Jv dd = new u.Jv();\n            }\n            class K{}\n            class J{}\n            \n          }\n          class W {\n\n            EE.pPNL jyN = new pPNL();\n            pPNL.A q = new EE.pPNL.A();\n            ys.EE.pPNL.A.u.W Z = new pPNL.A.u.W();\n          }\n          class O{}\n          static class t{}\n          \n        }\n        class I {\n\n          ys.EE.pPNL.A C = new ys.EE.pPNL.A();\n          EE.pPNL uy = new ys.EE.pPNL();\n        }\n        static class G{}\n        A MXs = new EE.pPNL.A();\n      }\n      \n    }\n    class b8 {\n\n      EE.b8 H = new b8();\n      ys zCr = new ys();\n    }\n    class Xv {\n\n      ys.EE ux4ICEIm = new EE();\n    }\n    \n  }\n  class eRNLb {\n\n    ys vL = new ys();\n  }\n  \n}"));
        CtType<?> innerClass = launcher.buildModel().getAllTypes().iterator().next();
        assertEquals("class ys {\n    class EE {\n        class pPNL {\n            class A {\n                class u {\n                    class Jv {\n                        class ZzeU {\n                            class Llu {}\n\n                            class fV {}\n\n                            class y {\n                                EE h = new ys.EE();\n                            }\n\n                            pPNL.A.u.Jv dd = new u.Jv();\n                        }\n\n                        class K {}\n\n                        class J {}\n                    }\n\n                    class W {\n                        EE.pPNL jyN = new pPNL();\n\n                        pPNL.A q = new EE.pPNL.A();\n\n                        ys.EE.pPNL.A.u.W Z = new pPNL.A.u.W();\n                    }\n\n                    class O {}\n\n                    static class t {}\n                }\n\n                class I {\n                    ys.EE.pPNL.A C = new ys.EE.pPNL.A();\n\n                    EE.pPNL uy = new ys.EE.pPNL();\n                }\n\n                static class G {}\n\n                A MXs = new EE.pPNL.A();\n            }\n        }\n\n        class b8 {\n            EE.b8 H = new b8();\n\n            ys zCr = new ys();\n        }\n\n        class Xv {\n            ys.EE ux4ICEIm = new EE();\n        }\n    }\n\n    class eRNLb {\n        ys vL = new ys();\n    }\n}", innerClass.toString());
    }

    @Test
    public void test078() {
        Launcher launcher = new Launcher();
        launcher.getEnvironment().setComplianceLevel(17);
        launcher.getEnvironment().setAutoImports(true);
        launcher.getEnvironment().setShouldCompile(true);
        launcher.addInputResource(new VirtualFile("class U {\n  class zS {\n    class y {\n      class He {\n        class AV {\n          class l {\n            class uIq {\n\n              U.zS cD = new U.zS();\n              U x4l = new U();\n            }\n            class P{}\n            \n          }\n          class xK{}\n          class V {\n\n            U.zS.y h_ = new U.zS.y();\n          }\n          class BfC{}\n          \n        }\n        class i {\n\n          U.zS.y.He.i b = new i();\n        }\n        class R6MHO {\n\n          U.zS.y.He.R6MHO s = new R6MHO();\n          zS.y.He.R6MHO J = new zS.y.He.R6MHO();\n        }\n        \n      }\n      static class NZ{}\n      class d {\n\n        U c = new U();\n      }\n      class G{}\n      U.zS i8 = new U.zS();\n      U z = new U();\n      U L = new U();\n      U.zS.y.G WCz = new zS.y.G();\n    }\n    static class X3_{}\n    class O {\n\n      zS.O bpL = new O();\n      U.zS.O g = new O();\n      U K = new U();\n    }\n    static class BT{}\n    U S = new U();\n    zS v2 = new U.zS();\n    zS T = new zS();\n    U.zS n = new zS();\n    BT Ar = new U.zS.BT();\n  }\n  static class a{}\n  U.zS XI = new zS();\n}"));
        CtType<?> innerClass = launcher.buildModel().getAllTypes().iterator().next();
        assertEquals("class U {\n    class zS {\n        class y {\n            class He {\n                class AV {\n                    class l {\n                        class uIq {\n                            U.zS cD = new U.zS();\n\n                            U x4l = new U();\n                        }\n\n                        class P {}\n                    }\n\n                    class xK {}\n\n                    class V {\n                        U.zS.y h_ = new U.zS.y();\n                    }\n\n                    class BfC {}\n                }\n\n                class i {\n                    U.zS.y.He.i b = new i();\n                }\n\n                class R6MHO {\n                    U.zS.y.He.R6MHO s = new R6MHO();\n\n                    zS.y.He.R6MHO J = new zS.y.He.R6MHO();\n                }\n            }\n\n            static class NZ {}\n\n            class d {\n                U c = new U();\n            }\n\n            class G {}\n\n            U.zS i8 = new U.zS();\n\n            U z = new U();\n\n            U L = new U();\n\n            U.zS.y.G WCz = new zS.y.G();\n        }\n\n        static class X3_ {}\n\n        class O {\n            zS.O bpL = new O();\n\n            U.zS.O g = new O();\n\n            U K = new U();\n        }\n\n        static class BT {}\n\n        U S = new U();\n\n        zS v2 = new U.zS();\n\n        zS T = new zS();\n\n        U.zS n = new zS();\n\n        BT Ar = new U.zS.BT();\n    }\n\n    static class a {}\n\n    U.zS XI = new zS();\n}", innerClass.toString());
    }

    @Test
    public void test079() {
        Launcher launcher = new Launcher();
        launcher.getEnvironment().setComplianceLevel(17);
        launcher.getEnvironment().setAutoImports(true);
        launcher.getEnvironment().setShouldCompile(true);
        launcher.addInputResource(new VirtualFile("class Wel {\n  class y {\n    class g {\n      class M {\n        class T7l {\n          class SA {\n            class r {\n              class lj7 {\n                class h {\n                  class n {\n\n                    M.T7l THm4R = new M.T7l();\n                  }\n                  class oU{}\n                  r.lj7.h Y = new h();\n                  Wel W = new Wel();\n                }\n                class P{}\n                \n              }\n              class p{}\n              class r2cq {\n\n                M.T7l.SA zjy = new SA();\n              }\n              class VI{}\n              \n            }\n            class V{}\n            \n          }\n          class yD05l {\n\n            Wel yr = new Wel();\n          }\n          static class qn{}\n          \n        }\n        y.g u = new y.g();\n      }\n      \n    }\n    y Ii = new Wel.y();\n  }\n  class MMT {\n\n    Wel.MMT j = new MMT();\n    Wel AR = new Wel();\n    Wel Wb = new Wel();\n    Wel X = new Wel();\n    Wel O = new Wel();\n  }\n  class E {\n\n    Wel dv = new Wel();\n  }\n  Wel j_ = new Wel();\n}"));
        CtType<?> innerClass = launcher.buildModel().getAllTypes().iterator().next();
        assertEquals("class Wel {\n    class y {\n        class g {\n            class M {\n                class T7l {\n                    class SA {\n                        class r {\n                            class lj7 {\n                                class h {\n                                    class n {\n                                        M.T7l THm4R = new M.T7l();\n                                    }\n\n                                    class oU {}\n\n                                    r.lj7.h Y = new h();\n\n                                    Wel W = new Wel();\n                                }\n\n                                class P {}\n                            }\n\n                            class p {}\n\n                            class r2cq {\n                                M.T7l.SA zjy = new SA();\n                            }\n\n                            class VI {}\n                        }\n\n                        class V {}\n                    }\n\n                    class yD05l {\n                        Wel yr = new Wel();\n                    }\n\n                    static class qn {}\n                }\n\n                y.g u = new y.g();\n            }\n        }\n\n        y Ii = new Wel.y();\n    }\n\n    class MMT {\n        Wel.MMT j = new MMT();\n\n        Wel AR = new Wel();\n\n        Wel Wb = new Wel();\n\n        Wel X = new Wel();\n\n        Wel O = new Wel();\n    }\n\n    class E {\n        Wel dv = new Wel();\n    }\n\n    Wel j_ = new Wel();\n}", innerClass.toString());
    }

    @Test
    public void test080() {
        Launcher launcher = new Launcher();
        launcher.getEnvironment().setComplianceLevel(17);
        launcher.getEnvironment().setAutoImports(true);
        launcher.getEnvironment().setShouldCompile(true);
        launcher.addInputResource(new VirtualFile("class G {\n  class dvI {\n    class p {\n      class r3 {\n        class hDhR5eUi {\n          class jqcR0B {\n            class feZ {\n              class yeGS {\n                class k {\n                  class d {\n\n                    dvI.p.r3.hDhR5eUi t = new p.r3.hDhR5eUi();\n                  }\n                  \n                }\n                class maK {\n\n                  G.dvI a = new G.dvI();\n                }\n                class WgG{}\n                \n              }\n              hDhR5eUi e = new r3.hDhR5eUi();\n            }\n            class R{}\n            class OFY{}\n            \n          }\n          class V {\n\n            G hv = new G();\n            dvI.p.r3.hDhR5eUi i6 = new r3.hDhR5eUi();\n            dvI.p P = new dvI.p();\n          }\n          class FA1 {\n\n            dvI.p.r3 Sj = new r3();\n          }\n          class a7 {\n\n            r3 w4m = new p.r3();\n            p.r3.hDhR5eUi.a7 c = new dvI.p.r3.hDhR5eUi.a7();\n            p.r3 n = new G.dvI.p.r3();\n            p.r3.hDhR5eUi qG = new p.r3.hDhR5eUi();\n            hDhR5eUi O = new G.dvI.p.r3.hDhR5eUi();\n            dvI.p.r3 uK = new dvI.p.r3();\n          }\n          p lR = new dvI.p();\n        }\n        class x {\n\n          G.dvI.p.r3 T1 = new p.r3();\n          p.r3.x pt = new r3.x();\n        }\n        G f = new G();\n      }\n      p q = new dvI.p();\n    }\n    class U {\n\n      dvI.U wQier = new dvI.U();\n      dvI.U g = new G.dvI.U();\n    }\n    \n  }\n  class o{}\n  \n}"));
        CtType<?> innerClass = launcher.buildModel().getAllTypes().iterator().next();
        assertEquals("class G {\n    class dvI {\n        class p {\n            class r3 {\n                class hDhR5eUi {\n                    class jqcR0B {\n                        class feZ {\n                            class yeGS {\n                                class k {\n                                    class d {\n                                        dvI.p.r3.hDhR5eUi t = new p.r3.hDhR5eUi();\n                                    }\n                                }\n\n                                class maK {\n                                    G.dvI a = new G.dvI();\n                                }\n\n                                class WgG {}\n                            }\n\n                            hDhR5eUi e = new r3.hDhR5eUi();\n                        }\n\n                        class R {}\n\n                        class OFY {}\n                    }\n\n                    class V {\n                        G hv = new G();\n\n                        dvI.p.r3.hDhR5eUi i6 = new r3.hDhR5eUi();\n\n                        dvI.p P = new dvI.p();\n                    }\n\n                    class FA1 {\n                        dvI.p.r3 Sj = new r3();\n                    }\n\n                    class a7 {\n                        r3 w4m = new p.r3();\n\n                        p.r3.hDhR5eUi.a7 c = new dvI.p.r3.hDhR5eUi.a7();\n\n                        p.r3 n = new G.dvI.p.r3();\n\n                        p.r3.hDhR5eUi qG = new p.r3.hDhR5eUi();\n\n                        hDhR5eUi O = new G.dvI.p.r3.hDhR5eUi();\n\n                        dvI.p.r3 uK = new dvI.p.r3();\n                    }\n\n                    p lR = new dvI.p();\n                }\n\n                class x {\n                    G.dvI.p.r3 T1 = new p.r3();\n\n                    p.r3.x pt = new r3.x();\n                }\n\n                G f = new G();\n            }\n\n            p q = new dvI.p();\n        }\n\n        class U {\n            dvI.U wQier = new dvI.U();\n\n            dvI.U g = new G.dvI.U();\n        }\n    }\n\n    class o {}\n}", innerClass.toString());
    }

    @Test
    public void test081() {
        Launcher launcher = new Launcher();
        launcher.getEnvironment().setComplianceLevel(17);
        launcher.getEnvironment().setAutoImports(true);
        launcher.getEnvironment().setShouldCompile(true);
        launcher.addInputResource(new VirtualFile("class wq {\n  class w {\n    class pf {\n      class P {\n        class zs3rDO {\n          class Z {\n            class O {\n              class v47jw {\n                class c {\n\n                  wq Fkj3vm = new wq();\n                  Z.O o = new zs3rDO.Z.O();\n                  wq.w.pf ETVw = new wq.w.pf();\n                  zs3rDO zkh = new wq.w.pf.P.zs3rDO();\n                }\n                class MU{}\n                class NSCh{}\n                \n              }\n              class X{}\n              wq.w.pf.P.zs3rDO.Z.O.v47jw a = new P.zs3rDO.Z.O.v47jw();\n            }\n            class b{}\n            class D{}\n            \n          }\n          \n        }\n        class n {\n\n          pf r = new wq.w.pf();\n          wq L = new wq();\n        }\n        class VJr {\n\n          wq Pb5T = new wq();\n        }\n        \n      }\n      pf T7 = new wq.w.pf();\n    }\n    class G5 {\n\n      w.G5 hO = new wq.w.G5();\n    }\n    G5 x = new w.G5();\n    w.pf mm = new wq.w.pf();\n  }\n  class N {\n\n    wq A = new wq();\n    wq AZ = new wq();\n    N pCAA5o = new wq.N();\n    wq.N OPQua = new N();\n  }\n  class t {\n\n    t Ia = new t();\n    t J = new wq.t();\n    wq V = new wq();\n    wq.t U = new t();\n    t PT = new wq.t();\n    wq.t yd = new wq.t();\n  }\n  class RR3 {\n\n    RR3 M = new wq.RR3();\n    wq h_s = new wq();\n  }\n  \n}"));
        CtType<?> innerClass = launcher.buildModel().getAllTypes().iterator().next();
        assertEquals("class wq {\n    class w {\n        class pf {\n            class P {\n                class zs3rDO {\n                    class Z {\n                        class O {\n                            class v47jw {\n                                class c {\n                                    wq Fkj3vm = new wq();\n\n                                    Z.O o = new zs3rDO.Z.O();\n\n                                    wq.w.pf ETVw = new wq.w.pf();\n\n                                    zs3rDO zkh = new wq.w.pf.P.zs3rDO();\n                                }\n\n                                class MU {}\n\n                                class NSCh {}\n                            }\n\n                            class X {}\n\n                            wq.w.pf.P.zs3rDO.Z.O.v47jw a = new P.zs3rDO.Z.O.v47jw();\n                        }\n\n                        class b {}\n\n                        class D {}\n                    }\n                }\n\n                class n {\n                    pf r = new wq.w.pf();\n\n                    wq L = new wq();\n                }\n\n                class VJr {\n                    wq Pb5T = new wq();\n                }\n            }\n\n            pf T7 = new wq.w.pf();\n        }\n\n        class G5 {\n            w.G5 hO = new wq.w.G5();\n        }\n\n        G5 x = new w.G5();\n\n        w.pf mm = new wq.w.pf();\n    }\n\n    class N {\n        wq A = new wq();\n\n        wq AZ = new wq();\n\n        N pCAA5o = new wq.N();\n\n        wq.N OPQua = new N();\n    }\n\n    class t {\n        t Ia = new t();\n\n        t J = new wq.t();\n\n        wq V = new wq();\n\n        wq.t U = new t();\n\n        t PT = new wq.t();\n\n        wq.t yd = new wq.t();\n    }\n\n    class RR3 {\n        RR3 M = new wq.RR3();\n\n        wq h_s = new wq();\n    }\n}", innerClass.toString());
    }

    @Test
    public void test082() {
        Launcher launcher = new Launcher();
        launcher.getEnvironment().setComplianceLevel(17);
        launcher.getEnvironment().setAutoImports(true);
        launcher.getEnvironment().setShouldCompile(true);
        launcher.addInputResource(new VirtualFile("class G {\n  class X {\n    class ev {\n      class K {\n        class Z {\n          class q {\n            class hzgNN {\n\n              G.X.ev.K.Z.q.hzgNN UgO = new Z.q.hzgNN();\n              G.X.ev ot = new ev();\n              Z P = new Z();\n              G.X vy = new X();\n              ev GQC = new ev();\n              G KrR = new G();\n            }\n            class Vu{}\n            \n          }\n          class s3 {\n\n            X.ev.K.Z C = new G.X.ev.K.Z();\n          }\n          class fq{}\n          class h {\n\n            G dXD = new G();\n          }\n          G.X N = new X();\n          X on = new G.X();\n          X.ev.K S = new G.X.ev.K();\n        }\n        class O {\n\n          X LpJ = new X();\n        }\n        G.X.ev.K.Z wnT = new X.ev.K.Z();\n        G.X.ev.K z = new X.ev.K();\n        X.ev lF = new X.ev();\n        G.X R = new X();\n        K.O r = new X.ev.K.O();\n      }\n      class y {\n\n        G.X k = new G.X();\n      }\n      class LV{}\n      class Y{}\n      \n    }\n    class o{}\n    class mM{}\n    G j = new G();\n    ev W1Egw = new G.X.ev();\n  }\n  static class W{}\n  static class ymHWOs{}\n  static class WLItuf{}\n  \n}"));
        CtType<?> innerClass = launcher.buildModel().getAllTypes().iterator().next();
        assertEquals("class G {\n    class X {\n        class ev {\n            class K {\n                class Z {\n                    class q {\n                        class hzgNN {\n                            G.X.ev.K.Z.q.hzgNN UgO = new Z.q.hzgNN();\n\n                            G.X.ev ot = new ev();\n\n                            Z P = new Z();\n\n                            G.X vy = new X();\n\n                            ev GQC = new ev();\n\n                            G KrR = new G();\n                        }\n\n                        class Vu {}\n                    }\n\n                    class s3 {\n                        X.ev.K.Z C = new G.X.ev.K.Z();\n                    }\n\n                    class fq {}\n\n                    class h {\n                        G dXD = new G();\n                    }\n\n                    G.X N = new X();\n\n                    X on = new G.X();\n\n                    X.ev.K S = new G.X.ev.K();\n                }\n\n                class O {\n                    X LpJ = new X();\n                }\n\n                G.X.ev.K.Z wnT = new X.ev.K.Z();\n\n                G.X.ev.K z = new X.ev.K();\n\n                X.ev lF = new X.ev();\n\n                G.X R = new X();\n\n                K.O r = new X.ev.K.O();\n            }\n\n            class y {\n                G.X k = new G.X();\n            }\n\n            class LV {}\n\n            class Y {}\n        }\n\n        class o {}\n\n        class mM {}\n\n        G j = new G();\n\n        ev W1Egw = new G.X.ev();\n    }\n\n    static class W {}\n\n    static class ymHWOs {}\n\n    static class WLItuf {}\n}", innerClass.toString());
    }

    @Test
    public void test083() {
        Launcher launcher = new Launcher();
        launcher.getEnvironment().setComplianceLevel(17);
        launcher.getEnvironment().setAutoImports(true);
        launcher.getEnvironment().setShouldCompile(true);
        launcher.addInputResource(new VirtualFile("class e {\n  class cm {\n    class r4 {\n      class i {\n        class u {\n          class LG {\n            class C0 {\n              class nL {\n                class Z{}\n                \n              }\n              class g {\n\n                g xUH = new u.LG.C0.g();\n                cm Hhb = new cm();\n              }\n              r4 Jc = new cm.r4();\n              e.cm ln5 = new cm();\n            }\n            r4.i D = new cm.r4.i();\n            i.u J0 = new r4.i.u();\n            i.u G = new r4.i.u();\n            e s4r = new e();\n          }\n          class O {\n\n            e.cm oqb = new cm();\n            e U = new e();\n          }\n          e.cm.r4.i.u.O KVvGo88 = new O();\n        }\n        class ka{}\n        class DDsjKOk{}\n        class AG{}\n        \n      }\n      class N{}\n      class xT {\n\n        e.cm.r4 QwA = new e.cm.r4();\n      }\n      class lBg{}\n      r4 Ac = new e.cm.r4();\n    }\n    \n  }\n  class YL {\n\n    e UX = new e();\n  }\n  class J{}\n  class n{}\n  e.cm P70 = new cm();\n}"));
        CtType<?> innerClass = launcher.buildModel().getAllTypes().iterator().next();
        assertEquals("class e {\n    class cm {\n        class r4 {\n            class i {\n                class u {\n                    class LG {\n                        class C0 {\n                            class nL {\n                                class Z {}\n                            }\n\n                            class g {\n                                g xUH = new u.LG.C0.g();\n\n                                cm Hhb = new cm();\n                            }\n\n                            r4 Jc = new cm.r4();\n\n                            e.cm ln5 = new cm();\n                        }\n\n                        r4.i D = new cm.r4.i();\n\n                        i.u J0 = new r4.i.u();\n\n                        i.u G = new r4.i.u();\n\n                        e s4r = new e();\n                    }\n\n                    class O {\n                        e.cm oqb = new cm();\n\n                        e U = new e();\n                    }\n\n                    e.cm.r4.i.u.O KVvGo88 = new O();\n                }\n\n                class ka {}\n\n                class DDsjKOk {}\n\n                class AG {}\n            }\n\n            class N {}\n\n            class xT {\n                e.cm.r4 QwA = new e.cm.r4();\n            }\n\n            class lBg {}\n\n            r4 Ac = new e.cm.r4();\n        }\n    }\n\n    class YL {\n        e UX = new e();\n    }\n\n    class J {}\n\n    class n {}\n\n    e.cm P70 = new cm();\n}", innerClass.toString());
    }

    @Test
    public void test084() {
        Launcher launcher = new Launcher();
        launcher.getEnvironment().setComplianceLevel(17);
        launcher.getEnvironment().setAutoImports(true);
        launcher.getEnvironment().setShouldCompile(true);
        launcher.addInputResource(new VirtualFile("class S {\n  class N {\n    class c {\n      class A {\n        class q6B {\n          class e {\n            class GQ {\n              class o8 {\n                class M2ol {\n\n                  GQ G_ = new c.A.q6B.e.GQ();\n                }\n                c.A.q6B N0 = new S.N.c.A.q6B();\n                q6B.e.GQ.o8 BZ = new S.N.c.A.q6B.e.GQ.o8();\n              }\n              class d{}\n              class qq {\n\n                c.A.q6B e3jURN = new A.q6B();\n              }\n              class GJf {\n\n                c.A.q6B.e x = new S.N.c.A.q6B.e();\n                S.N.c z = new N.c();\n              }\n              \n            }\n            class tpU{}\n            class KA {\n\n              S.N.c.A.q6B.e EX = new c.A.q6B.e();\n              S.N.c.A jG = new N.c.A();\n              c.A.q6B v_Kvc = new N.c.A.q6B();\n              c.A.q6B x8 = new S.N.c.A.q6B();\n              S.N n = new N();\n            }\n            class r{}\n            c.A Up = new c.A();\n            S ag7dkx = new S();\n            e syl = new S.N.c.A.q6B.e();\n          }\n          class Q{}\n          class I {\n\n            S.N.c v0a = new N.c();\n          }\n          class k {\n\n            S.N.c.A J = new N.c.A();\n          }\n          N hz = new N();\n          c.A y = new S.N.c.A();\n        }\n        \n      }\n      class C{}\n      class K{}\n      \n    }\n    N.c H = new N.c();\n  }\n  S.N M = new S.N();\n}"));
        CtType<?> innerClass = launcher.buildModel().getAllTypes().iterator().next();
        assertEquals("class S {\n    class N {\n        class c {\n            class A {\n                class q6B {\n                    class e {\n                        class GQ {\n                            class o8 {\n                                class M2ol {\n                                    GQ G_ = new c.A.q6B.e.GQ();\n                                }\n\n                                c.A.q6B N0 = new S.N.c.A.q6B();\n\n                                q6B.e.GQ.o8 BZ = new S.N.c.A.q6B.e.GQ.o8();\n                            }\n\n                            class d {}\n\n                            class qq {\n                                c.A.q6B e3jURN = new A.q6B();\n                            }\n\n                            class GJf {\n                                c.A.q6B.e x = new S.N.c.A.q6B.e();\n\n                                S.N.c z = new N.c();\n                            }\n                        }\n\n                        class tpU {}\n\n                        class KA {\n                            S.N.c.A.q6B.e EX = new c.A.q6B.e();\n\n                            S.N.c.A jG = new N.c.A();\n\n                            c.A.q6B v_Kvc = new N.c.A.q6B();\n\n                            c.A.q6B x8 = new S.N.c.A.q6B();\n\n                            S.N n = new N();\n                        }\n\n                        class r {}\n\n                        c.A Up = new c.A();\n\n                        S ag7dkx = new S();\n\n                        e syl = new S.N.c.A.q6B.e();\n                    }\n\n                    class Q {}\n\n                    class I {\n                        S.N.c v0a = new N.c();\n                    }\n\n                    class k {\n                        S.N.c.A J = new N.c.A();\n                    }\n\n                    N hz = new N();\n\n                    c.A y = new S.N.c.A();\n                }\n            }\n\n            class C {}\n\n            class K {}\n        }\n\n        N.c H = new N.c();\n    }\n\n    S.N M = new S.N();\n}", innerClass.toString());
    }

    @Test
    public void test085() {
        Launcher launcher = new Launcher();
        launcher.getEnvironment().setComplianceLevel(17);
        launcher.getEnvironment().setAutoImports(true);
        launcher.getEnvironment().setShouldCompile(true);
        launcher.addInputResource(new VirtualFile("class z9QuiE {\n  class Ya3 {\n    class HpF {\n      class C {\n        class K6QB {\n          class g {\n            class uc {\n              class i {\n                class ad {\n                  class miyS {\n\n                    i.ad B_ = new ad();\n                  }\n                  class X {\n\n                    uc.i cu = new i();\n                  }\n                  class LsI{}\n                  Ya3.HpF.C.K6QB.g.uc.i PJl = new HpF.C.K6QB.g.uc.i();\n                }\n                g.uc.i cj = new i();\n                Ya3.HpF.C A = new C();\n                z9QuiE.Ya3.HpF.C.K6QB.g.uc lN = new Ya3.HpF.C.K6QB.g.uc();\n              }\n              class M{}\n              class c {\n\n                HpF.C.K6QB W = new z9QuiE.Ya3.HpF.C.K6QB();\n              }\n              class XwFn{}\n              \n            }\n            class n {\n\n              z9QuiE.Ya3.HpF.C.K6QB Mz = new HpF.C.K6QB();\n            }\n            class FA {\n\n              Ya3.HpF.C f = new HpF.C();\n            }\n            g s = new HpF.C.K6QB.g();\n            z9QuiE PfDJ = new z9QuiE();\n            Ya3 G = new z9QuiE.Ya3();\n            z9QuiE xv = new z9QuiE();\n          }\n          z9QuiE.Ya3.HpF.C S6l = new z9QuiE.Ya3.HpF.C();\n          z9QuiE.Ya3 eLU = new Ya3();\n          z9QuiE WpX = new z9QuiE();\n          z9QuiE.Ya3 Tg = new Ya3();\n        }\n        class L{}\n        HpF.C R = new C();\n      }\n      \n    }\n    class h1F {\n\n      z9QuiE.Ya3.h1F t = new Ya3.h1F();\n      Ya3.h1F Ao = new Ya3.h1F();\n    }\n    class l{}\n    \n  }\n  class pcQ2 {\n\n    z9QuiE UeFY = new z9QuiE();\n    z9QuiE e = new z9QuiE();\n    z9QuiE Ws = new z9QuiE();\n    z9QuiE.pcQ2 Z = new pcQ2();\n  }\n  Ya3 elL = new z9QuiE.Ya3();\n  z9QuiE fFo = new z9QuiE();\n  pcQ2 p5 = new z9QuiE.pcQ2();\n  z9QuiE.Ya3 dSb = new Ya3();\n}"));
        CtType<?> innerClass = launcher.buildModel().getAllTypes().iterator().next();
        assertEquals("class z9QuiE {\n    class Ya3 {\n        class HpF {\n            class C {\n                class K6QB {\n                    class g {\n                        class uc {\n                            class i {\n                                class ad {\n                                    class miyS {\n                                        i.ad B_ = new ad();\n                                    }\n\n                                    class X {\n                                        uc.i cu = new i();\n                                    }\n\n                                    class LsI {}\n\n                                    Ya3.HpF.C.K6QB.g.uc.i PJl = new HpF.C.K6QB.g.uc.i();\n                                }\n\n                                g.uc.i cj = new i();\n\n                                Ya3.HpF.C A = new C();\n\n                                z9QuiE.Ya3.HpF.C.K6QB.g.uc lN = new Ya3.HpF.C.K6QB.g.uc();\n                            }\n\n                            class M {}\n\n                            class c {\n                                HpF.C.K6QB W = new z9QuiE.Ya3.HpF.C.K6QB();\n                            }\n\n                            class XwFn {}\n                        }\n\n                        class n {\n                            z9QuiE.Ya3.HpF.C.K6QB Mz = new HpF.C.K6QB();\n                        }\n\n                        class FA {\n                            Ya3.HpF.C f = new HpF.C();\n                        }\n\n                        g s = new HpF.C.K6QB.g();\n\n                        z9QuiE PfDJ = new z9QuiE();\n\n                        Ya3 G = new z9QuiE.Ya3();\n\n                        z9QuiE xv = new z9QuiE();\n                    }\n\n                    z9QuiE.Ya3.HpF.C S6l = new z9QuiE.Ya3.HpF.C();\n\n                    z9QuiE.Ya3 eLU = new Ya3();\n\n                    z9QuiE WpX = new z9QuiE();\n\n                    z9QuiE.Ya3 Tg = new Ya3();\n                }\n\n                class L {}\n\n                HpF.C R = new C();\n            }\n        }\n\n        class h1F {\n            z9QuiE.Ya3.h1F t = new Ya3.h1F();\n\n            Ya3.h1F Ao = new Ya3.h1F();\n        }\n\n        class l {}\n    }\n\n    class pcQ2 {\n        z9QuiE UeFY = new z9QuiE();\n\n        z9QuiE e = new z9QuiE();\n\n        z9QuiE Ws = new z9QuiE();\n\n        z9QuiE.pcQ2 Z = new pcQ2();\n    }\n\n    Ya3 elL = new z9QuiE.Ya3();\n\n    z9QuiE fFo = new z9QuiE();\n\n    pcQ2 p5 = new z9QuiE.pcQ2();\n\n    z9QuiE.Ya3 dSb = new Ya3();\n}", innerClass.toString());
    }

    @Test
    public void test086() {
        Launcher launcher = new Launcher();
        launcher.getEnvironment().setComplianceLevel(17);
        launcher.getEnvironment().setAutoImports(true);
        launcher.getEnvironment().setShouldCompile(true);
        launcher.addInputResource(new VirtualFile("class JaN {\n  class dKcV {\n    class rY {\n      class l {\n        class S {\n          class X {\n            class QWo {\n              class FtR {\n                class s{}\n                class Q{}\n                class x {\n\n                  dKcV.rY.l.S bb = new JaN.dKcV.rY.l.S();\n                  dKcV.rY.l.S.X.QWo pji = new rY.l.S.X.QWo();\n                }\n                \n              }\n              \n            }\n            class SC {\n\n              X p6XkHZx = new rY.l.S.X();\n            }\n            class U{}\n            rY.l.S.X.U X6 = new rY.l.S.X.U();\n            JaN ZY = new JaN();\n          }\n          class W8{}\n          class Di{}\n          JaN.dKcV.rY r = new rY();\n        }\n        class E{}\n        class j{}\n        \n      }\n      class z {\n\n        JaN Z = new JaN();\n      }\n      class x8pF {\n\n        dKcV.rY vkwGCp = new dKcV.rY();\n        JaN L0 = new JaN();\n      }\n      JaN GQp = new JaN();\n    }\n    class R {\n\n      JaN LC = new JaN();\n      JaN nF = new JaN();\n    }\n    \n  }\n  class EJcWl {\n\n    JaN.EJcWl d = new JaN.EJcWl();\n    JaN v = new JaN();\n    JaN MmIdEha = new JaN();\n  }\n  class o {\n\n    JaN Gz = new JaN();\n    JaN.o V = new o();\n  }\n  \n}"));
        CtType<?> innerClass = launcher.buildModel().getAllTypes().iterator().next();
        assertEquals("class JaN {\n    class dKcV {\n        class rY {\n            class l {\n                class S {\n                    class X {\n                        class QWo {\n                            class FtR {\n                                class s {}\n\n                                class Q {}\n\n                                class x {\n                                    dKcV.rY.l.S bb = new JaN.dKcV.rY.l.S();\n\n                                    dKcV.rY.l.S.X.QWo pji = new rY.l.S.X.QWo();\n                                }\n                            }\n                        }\n\n                        class SC {\n                            X p6XkHZx = new rY.l.S.X();\n                        }\n\n                        class U {}\n\n                        rY.l.S.X.U X6 = new rY.l.S.X.U();\n\n                        JaN ZY = new JaN();\n                    }\n\n                    class W8 {}\n\n                    class Di {}\n\n                    JaN.dKcV.rY r = new rY();\n                }\n\n                class E {}\n\n                class j {}\n            }\n\n            class z {\n                JaN Z = new JaN();\n            }\n\n            class x8pF {\n                dKcV.rY vkwGCp = new dKcV.rY();\n\n                JaN L0 = new JaN();\n            }\n\n            JaN GQp = new JaN();\n        }\n\n        class R {\n            JaN LC = new JaN();\n\n            JaN nF = new JaN();\n        }\n    }\n\n    class EJcWl {\n        JaN.EJcWl d = new JaN.EJcWl();\n\n        JaN v = new JaN();\n\n        JaN MmIdEha = new JaN();\n    }\n\n    class o {\n        JaN Gz = new JaN();\n\n        JaN.o V = new o();\n    }\n}", innerClass.toString());
    }

    @Test
    public void test087() {
        Launcher launcher = new Launcher();
        launcher.getEnvironment().setComplianceLevel(17);
        launcher.getEnvironment().setAutoImports(true);
        launcher.getEnvironment().setShouldCompile(true);
        launcher.addInputResource(new VirtualFile("class Zmf {\n  class Uw {\n    class PpM {\n      class d {\n        class vJB {\n          class f {\n            class E {\n              class W {\n                class kQ{}\n                class j{}\n                class o {\n\n                  Zmf.Uw.PpM yz = new PpM();\n                  Uw YQ = new Zmf.Uw();\n                }\n                class s{}\n                \n              }\n              \n            }\n            class MjqdjI{}\n            \n          }\n          class M {\n\n            Zmf uZQj1 = new Zmf();\n            Zmf.Uw uR = new Zmf.Uw();\n          }\n          class gv{}\n          Uw.PpM.d.vJB.M U = new Uw.PpM.d.vJB.M();\n          d.vJB.gv Fw = new Uw.PpM.d.vJB.gv();\n        }\n        class Q{}\n        class qv {\n\n          Uw.PpM G = new Uw.PpM();\n          Uw.PpM.d.qv OE = new Uw.PpM.d.qv();\n          Uw YL = new Zmf.Uw();\n        }\n        \n      }\n      class fI{}\n      class V {\n\n        Zmf i = new Zmf();\n        Zmf h = new Zmf();\n      }\n      Zmf.Uw.PpM v = new Zmf.Uw.PpM();\n    }\n    Zmf.Uw VR = new Uw();\n  }\n  static class Xx{}\n  class H {\n\n    Zmf.H p = new H();\n  }\n  static class qk{}\n  Zmf fLoA5 = new Zmf();\n}"));
        CtType<?> innerClass = launcher.buildModel().getAllTypes().iterator().next();
        assertEquals("class Zmf {\n    class Uw {\n        class PpM {\n            class d {\n                class vJB {\n                    class f {\n                        class E {\n                            class W {\n                                class kQ {}\n\n                                class j {}\n\n                                class o {\n                                    Zmf.Uw.PpM yz = new PpM();\n\n                                    Uw YQ = new Zmf.Uw();\n                                }\n\n                                class s {}\n                            }\n                        }\n\n                        class MjqdjI {}\n                    }\n\n                    class M {\n                        Zmf uZQj1 = new Zmf();\n\n                        Zmf.Uw uR = new Zmf.Uw();\n                    }\n\n                    class gv {}\n\n                    Uw.PpM.d.vJB.M U = new Uw.PpM.d.vJB.M();\n\n                    d.vJB.gv Fw = new Uw.PpM.d.vJB.gv();\n                }\n\n                class Q {}\n\n                class qv {\n                    Uw.PpM G = new Uw.PpM();\n\n                    Uw.PpM.d.qv OE = new Uw.PpM.d.qv();\n\n                    Uw YL = new Zmf.Uw();\n                }\n            }\n\n            class fI {}\n\n            class V {\n                Zmf i = new Zmf();\n\n                Zmf h = new Zmf();\n            }\n\n            Zmf.Uw.PpM v = new Zmf.Uw.PpM();\n        }\n\n        Zmf.Uw VR = new Uw();\n    }\n\n    static class Xx {}\n\n    class H {\n        Zmf.H p = new H();\n    }\n\n    static class qk {}\n\n    Zmf fLoA5 = new Zmf();\n}", innerClass.toString());
    }

    @Test
    public void test088() {
        Launcher launcher = new Launcher();
        launcher.getEnvironment().setComplianceLevel(17);
        launcher.getEnvironment().setAutoImports(true);
        launcher.getEnvironment().setShouldCompile(true);
        launcher.addInputResource(new VirtualFile("class B {\n  class L {\n    class M34 {\n      class b {\n        class Mu9 {\n          class J {\n            class ru8 {\n              class i {\n                class F {\n\n                  B.L.M34 Ux = new B.L.M34();\n                }\n                class tMcQ{}\n                class S{}\n                \n              }\n              class EJGrY {\n\n                ru8 B9 = new b.Mu9.J.ru8();\n                L.M34.b v6 = new B.L.M34.b();\n                Mu9.J z = new Mu9.J();\n                Mu9.J Y = new B.L.M34.b.Mu9.J();\n                M34 cT = new B.L.M34();\n                L.M34 u = new L.M34();\n              }\n              class a {\n\n                B.L.M34 VIK = new M34();\n                M34 hp2 = new L.M34();\n                Mu9.J MW = new M34.b.Mu9.J();\n                b.Mu9 Mnn = new Mu9();\n                B.L.M34 JFJ = new B.L.M34();\n                L SP = new B.L();\n                M34.b.Mu9.J.ru8 y = new B.L.M34.b.Mu9.J.ru8();\n                ru8.a U = new ru8.a();\n                b q = new b();\n                B.L.M34.b.Mu9.J.ru8.a w = new ru8.a();\n                B.L.M34 U0kOzQ6CYe = new B.L.M34();\n                B.L.M34.b pVI = new b();\n                L.M34 yd = new L.M34();\n                B.L spGsO = new B.L();\n              }\n              L m = new B.L();\n            }\n            b.Mu9 HE = new M34.b.Mu9();\n          }\n          M34.b sVsI = new M34.b();\n        }\n        \n      }\n      class E {\n\n        B.L.M34 fH = new L.M34();\n        B.L.M34 q7 = new B.L.M34();\n      }\n      class K {\n\n        M34.K PM_ = new M34.K();\n        B.L.M34.K FW = new B.L.M34.K();\n      }\n      B.L Ls = new B.L();\n      B.L wg = new L();\n    }\n    static class c{}\n    class lhi {\n\n      B.L.lhi Ix = new L.lhi();\n    }\n    B v = new B();\n    c f = new B.L.c();\n  }\n  class t {\n\n    t L0_L = new t();\n    t MZ = new B.t();\n  }\n  static class V{}\n  class Ekf {\n\n    B LG = new B();\n  }\n  B Sv = new B();\n}"));
        CtType<?> innerClass = launcher.buildModel().getAllTypes().iterator().next();
        assertEquals("class B {\n    class L {\n        class M34 {\n            class b {\n                class Mu9 {\n                    class J {\n                        class ru8 {\n                            class i {\n                                class F {\n                                    B.L.M34 Ux = new B.L.M34();\n                                }\n\n                                class tMcQ {}\n\n                                class S {}\n                            }\n\n                            class EJGrY {\n                                ru8 B9 = new b.Mu9.J.ru8();\n\n                                L.M34.b v6 = new B.L.M34.b();\n\n                                Mu9.J z = new Mu9.J();\n\n                                Mu9.J Y = new B.L.M34.b.Mu9.J();\n\n                                M34 cT = new B.L.M34();\n\n                                L.M34 u = new L.M34();\n                            }\n\n                            class a {\n                                B.L.M34 VIK = new M34();\n\n                                M34 hp2 = new L.M34();\n\n                                Mu9.J MW = new M34.b.Mu9.J();\n\n                                b.Mu9 Mnn = new Mu9();\n\n                                B.L.M34 JFJ = new B.L.M34();\n\n                                L SP = new B.L();\n\n                                M34.b.Mu9.J.ru8 y = new B.L.M34.b.Mu9.J.ru8();\n\n                                ru8.a U = new ru8.a();\n\n                                b q = new b();\n\n                                B.L.M34.b.Mu9.J.ru8.a w = new ru8.a();\n\n                                B.L.M34 U0kOzQ6CYe = new B.L.M34();\n\n                                B.L.M34.b pVI = new b();\n\n                                L.M34 yd = new L.M34();\n\n                                B.L spGsO = new B.L();\n                            }\n\n                            L m = new B.L();\n                        }\n\n                        b.Mu9 HE = new M34.b.Mu9();\n                    }\n\n                    M34.b sVsI = new M34.b();\n                }\n            }\n\n            class E {\n                B.L.M34 fH = new L.M34();\n\n                B.L.M34 q7 = new B.L.M34();\n            }\n\n            class K {\n                M34.K PM_ = new M34.K();\n\n                B.L.M34.K FW = new B.L.M34.K();\n            }\n\n            B.L Ls = new B.L();\n\n            B.L wg = new L();\n        }\n\n        static class c {}\n\n        class lhi {\n            B.L.lhi Ix = new L.lhi();\n        }\n\n        B v = new B();\n\n        c f = new B.L.c();\n    }\n\n    class t {\n        t L0_L = new t();\n\n        t MZ = new B.t();\n    }\n\n    static class V {}\n\n    class Ekf {\n        B LG = new B();\n    }\n\n    B Sv = new B();\n}", innerClass.toString());
    }

    @Test
    public void test089() {
        Launcher launcher = new Launcher();
        launcher.getEnvironment().setComplianceLevel(17);
        launcher.getEnvironment().setAutoImports(true);
        launcher.getEnvironment().setShouldCompile(true);
        launcher.addInputResource(new VirtualFile("class l4w2 {\n  class rOEj3w {\n    class Iu8 {\n      class Xj1 {\n        class x {\n          class w {\n            class M {\n              class p{}\n              class EP{}\n              class Um{}\n              l4w2.rOEj3w g3U = new rOEj3w();\n            }\n            class Mz{}\n            class LOd{}\n            Iu8 U4s = new Iu8();\n          }\n          l4w2 jJ = new l4w2();\n          rOEj3w I = new rOEj3w();\n          Iu8.Xj1.x.w q = new x.w();\n        }\n        class E {\n\n          E t4e = new l4w2.rOEj3w.Iu8.Xj1.E();\n        }\n        class U{}\n        rOEj3w s = new l4w2.rOEj3w();\n      }\n      class HHt8 {\n\n        rOEj3w ZU7 = new l4w2.rOEj3w();\n        Iu8 r4 = new Iu8();\n      }\n      class n{}\n      \n    }\n    class j{}\n    class g{}\n    l4w2 G = new l4w2();\n  }\n  static class D{}\n  static class k{}\n  class X {\n\n    l4w2 QcFWJ = new l4w2();\n  }\n  \n}"));
        CtType<?> innerClass = launcher.buildModel().getAllTypes().iterator().next();
        assertEquals("class l4w2 {\n    class rOEj3w {\n        class Iu8 {\n            class Xj1 {\n                class x {\n                    class w {\n                        class M {\n                            class p {}\n\n                            class EP {}\n\n                            class Um {}\n\n                            l4w2.rOEj3w g3U = new rOEj3w();\n                        }\n\n                        class Mz {}\n\n                        class LOd {}\n\n                        Iu8 U4s = new Iu8();\n                    }\n\n                    l4w2 jJ = new l4w2();\n\n                    rOEj3w I = new rOEj3w();\n\n                    Iu8.Xj1.x.w q = new x.w();\n                }\n\n                class E {\n                    E t4e = new l4w2.rOEj3w.Iu8.Xj1.E();\n                }\n\n                class U {}\n\n                rOEj3w s = new l4w2.rOEj3w();\n            }\n\n            class HHt8 {\n                rOEj3w ZU7 = new l4w2.rOEj3w();\n\n                Iu8 r4 = new Iu8();\n            }\n\n            class n {}\n        }\n\n        class j {}\n\n        class g {}\n\n        l4w2 G = new l4w2();\n    }\n\n    static class D {}\n\n    static class k {}\n\n    class X {\n        l4w2 QcFWJ = new l4w2();\n    }\n}", innerClass.toString());
    }

    @Test
    public void test090() {
        Launcher launcher = new Launcher();
        launcher.getEnvironment().setComplianceLevel(17);
        launcher.getEnvironment().setAutoImports(true);
        launcher.getEnvironment().setShouldCompile(true);
        launcher.addInputResource(new VirtualFile("class D {\n  class Y {\n    class u {\n      class X {\n        class q {\n          class c {\n            class qo0d {\n              class lS {\n                class R{}\n                class aH {\n\n                  u.X vdt2 = new D.Y.u.X();\n                }\n                class Iq {\n\n                  q.c.qo0d G = new q.c.qo0d();\n                }\n                class A {\n\n                  q n = new X.q();\n                  X.q S = new Y.u.X.q();\n                }\n                Y.u.X.q.c rl = new q.c();\n              }\n              class o5 {\n\n                D.Y DrJVqXq = new D.Y();\n                D.Y.u.X.q.c.qo0d v = new D.Y.u.X.q.c.qo0d();\n              }\n              class ss5{}\n              class k {\n\n                D.Y.u.X.q.c.qo0d.k x = new c.qo0d.k();\n                u.X tch0eA4mH = new Y.u.X();\n              }\n              D.Y w = new Y();\n              c Sowb = new X.q.c();\n            }\n            class a0UBG {\n\n              u.X.q.c J = new X.q.c();\n              X Atlwi = new X();\n            }\n            class B {\n\n              X.q.c.B T = new B();\n            }\n            \n          }\n          class M {\n\n            u.X nm = new Y.u.X();\n          }\n          class L{}\n          \n        }\n        \n      }\n      \n    }\n    class e {\n\n      D qi = new D();\n      Y K = new D.Y();\n    }\n    class y {\n\n      D w0 = new D();\n    }\n    class UU {\n\n      D YQ = new D();\n      Y tYw = new Y();\n    }\n    \n  }\n  \n}"));
        CtType<?> innerClass = launcher.buildModel().getAllTypes().iterator().next();
        assertEquals("class D {\n    class Y {\n        class u {\n            class X {\n                class q {\n                    class c {\n                        class qo0d {\n                            class lS {\n                                class R {}\n\n                                class aH {\n                                    u.X vdt2 = new D.Y.u.X();\n                                }\n\n                                class Iq {\n                                    q.c.qo0d G = new q.c.qo0d();\n                                }\n\n                                class A {\n                                    q n = new X.q();\n\n                                    X.q S = new Y.u.X.q();\n                                }\n\n                                Y.u.X.q.c rl = new q.c();\n                            }\n\n                            class o5 {\n                                D.Y DrJVqXq = new D.Y();\n\n                                D.Y.u.X.q.c.qo0d v = new D.Y.u.X.q.c.qo0d();\n                            }\n\n                            class ss5 {}\n\n                            class k {\n                                D.Y.u.X.q.c.qo0d.k x = new c.qo0d.k();\n\n                                u.X tch0eA4mH = new Y.u.X();\n                            }\n\n                            D.Y w = new Y();\n\n                            c Sowb = new X.q.c();\n                        }\n\n                        class a0UBG {\n                            u.X.q.c J = new X.q.c();\n\n                            X Atlwi = new X();\n                        }\n\n                        class B {\n                            X.q.c.B T = new B();\n                        }\n                    }\n\n                    class M {\n                        u.X nm = new Y.u.X();\n                    }\n\n                    class L {}\n                }\n            }\n        }\n\n        class e {\n            D qi = new D();\n\n            Y K = new D.Y();\n        }\n\n        class y {\n            D w0 = new D();\n        }\n\n        class UU {\n            D YQ = new D();\n\n            Y tYw = new Y();\n        }\n    }\n}", innerClass.toString());
    }

    @Test
    public void test091() {
        Launcher launcher = new Launcher();
        launcher.getEnvironment().setComplianceLevel(17);
        launcher.getEnvironment().setAutoImports(true);
        launcher.getEnvironment().setShouldCompile(true);
        launcher.addInputResource(new VirtualFile("class Q {\n  class z0 {\n    class s {\n      class I {\n        class x {\n          class q {\n            class D {\n              class VC0HW2E3 {\n                class E {\n\n                  I.x xs = new s.I.x();\n                  s.I.x.q.D.VC0HW2E3.E Xh = new z0.s.I.x.q.D.VC0HW2E3.E();\n                }\n                class u{}\n                class map{}\n                \n              }\n              class H{}\n              s.I.x.q.D.H ar = new x.q.D.H();\n            }\n            class Rh91x{}\n            s.I.x.q fi = new z0.s.I.x.q();\n          }\n          \n        }\n        class G{}\n        class Tnn8 {\n\n          z0.s bc = new Q.z0.s();\n        }\n        \n      }\n      class iQO{}\n      class hTVq {\n\n        Q.z0.s.hTVq N = new s.hTVq();\n      }\n      static class a{}\n      \n    }\n    static class Itm{}\n    static class U{}\n    z0.Itm p = new z0.Itm();\n  }\n  static class e{}\n  class R {\n\n    Q JFEqXO = new Q();\n    R oI = new Q.R();\n    R X = new R();\n  }\n  z0 NBxRqv = new Q.z0();\n  Q WY = new Q();\n  R h = new R();\n  Q B = new Q();\n}"));
        CtType<?> innerClass = launcher.buildModel().getAllTypes().iterator().next();
        assertEquals("class Q {\n    class z0 {\n        class s {\n            class I {\n                class x {\n                    class q {\n                        class D {\n                            class VC0HW2E3 {\n                                class E {\n                                    I.x xs = new s.I.x();\n\n                                    s.I.x.q.D.VC0HW2E3.E Xh = new z0.s.I.x.q.D.VC0HW2E3.E();\n                                }\n\n                                class u {}\n\n                                class map {}\n                            }\n\n                            class H {}\n\n                            s.I.x.q.D.H ar = new x.q.D.H();\n                        }\n\n                        class Rh91x {}\n\n                        s.I.x.q fi = new z0.s.I.x.q();\n                    }\n                }\n\n                class G {}\n\n                class Tnn8 {\n                    z0.s bc = new Q.z0.s();\n                }\n            }\n\n            class iQO {}\n\n            class hTVq {\n                Q.z0.s.hTVq N = new s.hTVq();\n            }\n\n            static class a {}\n        }\n\n        static class Itm {}\n\n        static class U {}\n\n        z0.Itm p = new z0.Itm();\n    }\n\n    static class e {}\n\n    class R {\n        Q JFEqXO = new Q();\n\n        R oI = new Q.R();\n\n        R X = new R();\n    }\n\n    z0 NBxRqv = new Q.z0();\n\n    Q WY = new Q();\n\n    R h = new R();\n\n    Q B = new Q();\n}", innerClass.toString());
    }

    @Test
    public void test092() {
        Launcher launcher = new Launcher();
        launcher.getEnvironment().setComplianceLevel(17);
        launcher.getEnvironment().setAutoImports(true);
        launcher.getEnvironment().setShouldCompile(true);
        launcher.addInputResource(new VirtualFile("class uF5 {\n  class LTn {\n    class W_ {\n      class fq8 {\n        class fdtX {\n          class BW {\n            class Q {\n              class O {\n\n                W_ mmS = new LTn.W_();\n              }\n              class IdZs{}\n              class nQy{}\n              class StD{}\n              uF5.LTn.W_.fq8.fdtX.BW.Q.IdZs k = new BW.Q.IdZs();\n              uF5 E = new uF5();\n            }\n            \n          }\n          static class a{}\n          class y {\n\n            uF5.LTn.W_.fq8.fdtX.y lA = new W_.fq8.fdtX.y();\n            LTn.W_.fq8 kJ3 = new fq8();\n          }\n          static class yy{}\n          LTn.W_.fq8.fdtX UOJ = new LTn.W_.fq8.fdtX();\n          uF5.LTn h = new uF5.LTn();\n        }\n        static class NB{}\n        LTn.W_ M7r = new uF5.LTn.W_();\n        uF5.LTn S = new LTn();\n        uF5 syk = new uF5();\n      }\n      \n    }\n    class u2zAk{}\n    static class K{}\n    class Y {\n\n      uF5.LTn v = new uF5.LTn();\n    }\n    \n  }\n  static class L{}\n  static class AU{}\n  static class b{}\n  \n}"));
        CtType<?> innerClass = launcher.buildModel().getAllTypes().iterator().next();
        assertEquals("class uF5 {\n    class LTn {\n        class W_ {\n            class fq8 {\n                class fdtX {\n                    class BW {\n                        class Q {\n                            class O {\n                                W_ mmS = new LTn.W_();\n                            }\n\n                            class IdZs {}\n\n                            class nQy {}\n\n                            class StD {}\n\n                            uF5.LTn.W_.fq8.fdtX.BW.Q.IdZs k = new BW.Q.IdZs();\n\n                            uF5 E = new uF5();\n                        }\n                    }\n\n                    static class a {}\n\n                    class y {\n                        uF5.LTn.W_.fq8.fdtX.y lA = new W_.fq8.fdtX.y();\n\n                        LTn.W_.fq8 kJ3 = new fq8();\n                    }\n\n                    static class yy {}\n\n                    LTn.W_.fq8.fdtX UOJ = new LTn.W_.fq8.fdtX();\n\n                    uF5.LTn h = new uF5.LTn();\n                }\n\n                static class NB {}\n\n                LTn.W_ M7r = new uF5.LTn.W_();\n\n                uF5.LTn S = new LTn();\n\n                uF5 syk = new uF5();\n            }\n        }\n\n        class u2zAk {}\n\n        static class K {}\n\n        class Y {\n            uF5.LTn v = new uF5.LTn();\n        }\n    }\n\n    static class L {}\n\n    static class AU {}\n\n    static class b {}\n}", innerClass.toString());
    }

    @Test
    public void test093() {
        Launcher launcher = new Launcher();
        launcher.getEnvironment().setComplianceLevel(17);
        launcher.getEnvironment().setAutoImports(true);
        launcher.getEnvironment().setShouldCompile(true);
        launcher.addInputResource(new VirtualFile("class ci {\n  class R {\n    class tD {\n      class xu9aHlL4 {\n        class T6 {\n          class r {\n            class MbF {\n              class Ye {\n                class slzr {\n                  class X {\n                    class g {\n\n                      ci.R.tD.xu9aHlL4.T6.r.MbF.Ye.slzr.X V = new Ye.slzr.X();\n                    }\n                    class mn{}\n                    \n                  }\n                  class L8y {\n\n                    tD.xu9aHlL4.T6.r Gv = new ci.R.tD.xu9aHlL4.T6.r();\n                  }\n                  \n                }\n                R i = new ci.R();\n              }\n              class P {\n\n                ci.R.tD.xu9aHlL4 C = new ci.R.tD.xu9aHlL4();\n                ci.R.tD.xu9aHlL4.T6.r.MbF N = new r.MbF();\n                R.tD.xu9aHlL4 o_ = new ci.R.tD.xu9aHlL4();\n              }\n              T6 S = new R.tD.xu9aHlL4.T6();\n              ci n41 = new ci();\n              R l = new R();\n            }\n            class e{}\n            \n          }\n          class Ja {\n\n            xu9aHlL4.T6.Ja nP = new xu9aHlL4.T6.Ja();\n            ci F = new ci();\n          }\n          \n        }\n        class N_3mt8{}\n        class J2 {\n\n          ci.R.tD.xu9aHlL4 c7 = new ci.R.tD.xu9aHlL4();\n        }\n        class w8 {\n\n          ci dBn = new ci();\n          tD.xu9aHlL4.w8 L = new R.tD.xu9aHlL4.w8();\n          xu9aHlL4.w8 mDP = new w8();\n          ci.R OL = new R();\n        }\n        ci.R Y = new ci.R();\n        ci.R.tD.xu9aHlL4 h = new ci.R.tD.xu9aHlL4();\n        ci n_ = new ci();\n      }\n      class zb{}\n      class M {\n\n        tD PLB1 = new R.tD();\n      }\n      \n    }\n    ci b1 = new ci();\n  }\n  \n}"));
        CtType<?> innerClass = launcher.buildModel().getAllTypes().iterator().next();
        assertEquals("class ci {\n    class R {\n        class tD {\n            class xu9aHlL4 {\n                class T6 {\n                    class r {\n                        class MbF {\n                            class Ye {\n                                class slzr {\n                                    class X {\n                                        class g {\n                                            ci.R.tD.xu9aHlL4.T6.r.MbF.Ye.slzr.X V = new Ye.slzr.X();\n                                        }\n\n                                        class mn {}\n                                    }\n\n                                    class L8y {\n                                        tD.xu9aHlL4.T6.r Gv = new ci.R.tD.xu9aHlL4.T6.r();\n                                    }\n                                }\n\n                                R i = new ci.R();\n                            }\n\n                            class P {\n                                ci.R.tD.xu9aHlL4 C = new ci.R.tD.xu9aHlL4();\n\n                                ci.R.tD.xu9aHlL4.T6.r.MbF N = new r.MbF();\n\n                                R.tD.xu9aHlL4 o_ = new ci.R.tD.xu9aHlL4();\n                            }\n\n                            T6 S = new R.tD.xu9aHlL4.T6();\n\n                            ci n41 = new ci();\n\n                            R l = new R();\n                        }\n\n                        class e {}\n                    }\n\n                    class Ja {\n                        xu9aHlL4.T6.Ja nP = new xu9aHlL4.T6.Ja();\n\n                        ci F = new ci();\n                    }\n                }\n\n                class N_3mt8 {}\n\n                class J2 {\n                    ci.R.tD.xu9aHlL4 c7 = new ci.R.tD.xu9aHlL4();\n                }\n\n                class w8 {\n                    ci dBn = new ci();\n\n                    tD.xu9aHlL4.w8 L = new R.tD.xu9aHlL4.w8();\n\n                    xu9aHlL4.w8 mDP = new w8();\n\n                    ci.R OL = new R();\n                }\n\n                ci.R Y = new ci.R();\n\n                ci.R.tD.xu9aHlL4 h = new ci.R.tD.xu9aHlL4();\n\n                ci n_ = new ci();\n            }\n\n            class zb {}\n\n            class M {\n                tD PLB1 = new R.tD();\n            }\n        }\n\n        ci b1 = new ci();\n    }\n}", innerClass.toString());
    }

    @Test
    public void test094() {
        Launcher launcher = new Launcher();
        launcher.getEnvironment().setComplianceLevel(17);
        launcher.getEnvironment().setAutoImports(true);
        launcher.getEnvironment().setShouldCompile(true);
        launcher.addInputResource(new VirtualFile("class g {\n  class Y {\n    class JD {\n      class D {\n        class q {\n          class H {\n            class ZKb {\n              class gpPs {\n                class x0 {\n                  class i {\n\n                    g.Y.JD.D.q.H.ZKb gB = new JD.D.q.H.ZKb();\n                  }\n                  class cb9Ja{}\n                  H.ZKb.gpPs ZubIF = new q.H.ZKb.gpPs();\n                  Y.JD.D.q.H.ZKb.gpPs.x0 v = new H.ZKb.gpPs.x0();\n                }\n                class se53Ye {\n\n                  JD n = new Y.JD();\n                }\n                \n              }\n              \n            }\n            class gb {\n\n              g.Y.JD.D ML = new D();\n            }\n            \n          }\n          class r {\n\n            g pQb = new g();\n            D.q Vy = new Y.JD.D.q();\n          }\n          class R {\n\n            Y Yw = new g.Y();\n            g.Y EOogWSoc = new Y();\n          }\n          \n        }\n        \n      }\n      class KE {\n\n        JD IBZOF = new Y.JD();\n        Y.JD p8q = new g.Y.JD();\n      }\n      class vHa{}\n      \n    }\n    class Ka {\n\n      g.Y a = new Y();\n    }\n    class S9Cnl{}\n    class ym {\n\n      g.Y.ym H_DQv = new g.Y.ym();\n    }\n    \n  }\n  class K {\n\n    K M1 = new K();\n    g X7k = new g();\n    g wj = new g();\n  }\n  \n}"));
        CtType<?> innerClass = launcher.buildModel().getAllTypes().iterator().next();
        assertEquals("class g {\n    class Y {\n        class JD {\n            class D {\n                class q {\n                    class H {\n                        class ZKb {\n                            class gpPs {\n                                class x0 {\n                                    class i {\n                                        g.Y.JD.D.q.H.ZKb gB = new JD.D.q.H.ZKb();\n                                    }\n\n                                    class cb9Ja {}\n\n                                    H.ZKb.gpPs ZubIF = new q.H.ZKb.gpPs();\n\n                                    Y.JD.D.q.H.ZKb.gpPs.x0 v = new H.ZKb.gpPs.x0();\n                                }\n\n                                class se53Ye {\n                                    JD n = new Y.JD();\n                                }\n                            }\n                        }\n\n                        class gb {\n                            g.Y.JD.D ML = new D();\n                        }\n                    }\n\n                    class r {\n                        g pQb = new g();\n\n                        D.q Vy = new Y.JD.D.q();\n                    }\n\n                    class R {\n                        Y Yw = new g.Y();\n\n                        g.Y EOogWSoc = new Y();\n                    }\n                }\n            }\n\n            class KE {\n                JD IBZOF = new Y.JD();\n\n                Y.JD p8q = new g.Y.JD();\n            }\n\n            class vHa {}\n        }\n\n        class Ka {\n            g.Y a = new Y();\n        }\n\n        class S9Cnl {}\n\n        class ym {\n            g.Y.ym H_DQv = new g.Y.ym();\n        }\n    }\n\n    class K {\n        K M1 = new K();\n\n        g X7k = new g();\n\n        g wj = new g();\n    }\n}", innerClass.toString());
    }

    @Test
    public void test095() {
        Launcher launcher = new Launcher();
        launcher.getEnvironment().setComplianceLevel(17);
        launcher.getEnvironment().setAutoImports(true);
        launcher.getEnvironment().setShouldCompile(true);
        launcher.addInputResource(new VirtualFile("class xQ {\n  class p {\n    class u {\n      class c {\n        class y {\n          class h_ {\n            class PI {\n              class o {\n                class a__ {\n                  class KfOV {\n                    class q{}\n                    class U{}\n                    \n                  }\n                  class MV {\n\n                    PI yIz = new u.c.y.h_.PI();\n                    xQ.p.u N2 = new p.u();\n                    y.h_.PI.o.a__ K = new u.c.y.h_.PI.o.a__();\n                    u.c xbRTk = new xQ.p.u.c();\n                  }\n                  u.c.y.h_.PI L = new PI();\n                  c.y.h_.PI.o t = new PI.o();\n                }\n                h_ k = new u.c.y.h_();\n              }\n              class A {\n\n                c g = new xQ.p.u.c();\n                p.u.c.y.h_ I = new xQ.p.u.c.y.h_();\n              }\n              class Xc {\n\n                p.u F = new u();\n              }\n              \n            }\n            \n          }\n          static class VHj{}\n          \n        }\n        class AM3{}\n        class BempS{}\n        static class FmD7b{}\n        p.u.c.BempS v = new u.c.BempS();\n        xQ.p sK = new xQ.p();\n        xQ.p f = new xQ.p();\n        c m = new u.c();\n        xQ.p.u.c w = new xQ.p.u.c();\n        p.u J = new u();\n        xQ.p.u.c.FmD7b NKhH = new xQ.p.u.c.FmD7b();\n        xQ kOyLfdgv = new xQ();\n        xQ Sl = new xQ();\n      }\n      class Q {\n\n        p RFI = new xQ.p();\n        xQ.p.u Ga = new xQ.p.u();\n      }\n      \n    }\n    \n  }\n  \n}"));
        CtType<?> innerClass = launcher.buildModel().getAllTypes().iterator().next();
        assertEquals("class xQ {\n    class p {\n        class u {\n            class c {\n                class y {\n                    class h_ {\n                        class PI {\n                            class o {\n                                class a__ {\n                                    class KfOV {\n                                        class q {}\n\n                                        class U {}\n                                    }\n\n                                    class MV {\n                                        PI yIz = new u.c.y.h_.PI();\n\n                                        xQ.p.u N2 = new p.u();\n\n                                        y.h_.PI.o.a__ K = new u.c.y.h_.PI.o.a__();\n\n                                        u.c xbRTk = new xQ.p.u.c();\n                                    }\n\n                                    u.c.y.h_.PI L = new PI();\n\n                                    c.y.h_.PI.o t = new PI.o();\n                                }\n\n                                h_ k = new u.c.y.h_();\n                            }\n\n                            class A {\n                                c g = new xQ.p.u.c();\n\n                                p.u.c.y.h_ I = new xQ.p.u.c.y.h_();\n                            }\n\n                            class Xc {\n                                p.u F = new u();\n                            }\n                        }\n                    }\n\n                    static class VHj {}\n                }\n\n                class AM3 {}\n\n                class BempS {}\n\n                static class FmD7b {}\n\n                p.u.c.BempS v = new u.c.BempS();\n\n                xQ.p sK = new xQ.p();\n\n                xQ.p f = new xQ.p();\n\n                c m = new u.c();\n\n                xQ.p.u.c w = new xQ.p.u.c();\n\n                p.u J = new u();\n\n                xQ.p.u.c.FmD7b NKhH = new xQ.p.u.c.FmD7b();\n\n                xQ kOyLfdgv = new xQ();\n\n                xQ Sl = new xQ();\n            }\n\n            class Q {\n                p RFI = new xQ.p();\n\n                xQ.p.u Ga = new xQ.p.u();\n            }\n        }\n    }\n}", innerClass.toString());
    }

    @Test
    public void test096() {
        Launcher launcher = new Launcher();
        launcher.getEnvironment().setComplianceLevel(17);
        launcher.getEnvironment().setAutoImports(true);
        launcher.getEnvironment().setShouldCompile(true);
        launcher.addInputResource(new VirtualFile("class nL {\n  class Z8ycF {\n    class m {\n      class JUE {\n        class qtT {\n          class lvAi {\n            class s3W {\n              class RQ {\n                class t {\n                  class kh {\n\n                    lvAi.s3W.RQ.t NUN = new s3W.RQ.t();\n                  }\n                  class u {\n\n                    nL v = new nL();\n                  }\n                  class O {\n\n                    qtT.lvAi T = new JUE.qtT.lvAi();\n                  }\n                  \n                }\n                class OD{}\n                class Qyx8_U3aus {\n\n                  m.JUE IQR5 = new Z8ycF.m.JUE();\n                  JUE.qtT.lvAi.s3W.RQ.Qyx8_U3aus h = new Qyx8_U3aus();\n                  qtT.lvAi.s3W.RQ If = new RQ();\n                }\n                nL N0 = new nL();\n              }\n              \n            }\n            class NEokVAo{}\n            class D {\n\n              nL.Z8ycF.m.JUE.qtT.lvAi X9dQ = new qtT.lvAi();\n              Z8ycF.m.JUE.qtT t4_ = new m.JUE.qtT();\n              nL M = new nL();\n            }\n            class BFN{}\n            Z8ycF.m.JUE.qtT xP3rI0e = new Z8ycF.m.JUE.qtT();\n          }\n          \n        }\n        class Tyys4F {\n\n          JUE.Tyys4F RCU = new m.JUE.Tyys4F();\n          nL.Z8ycF.m C = new m();\n        }\n        \n      }\n      class g {\n\n        Z8ycF.m.g N = new g();\n        m kX = new nL.Z8ycF.m();\n      }\n      class lV{}\n      class F {\n\n        Z8ycF.m.F d = new nL.Z8ycF.m.F();\n        Z8ycF yQsnE = new Z8ycF();\n        m.F V = new nL.Z8ycF.m.F();\n        nL.Z8ycF R = new nL.Z8ycF();\n        nL s = new nL();\n        nL.Z8ycF p = new nL.Z8ycF();\n      }\n      \n    }\n    \n  }\n  \n}"));
        CtType<?> innerClass = launcher.buildModel().getAllTypes().iterator().next();
        assertEquals("class nL {\n    class Z8ycF {\n        class m {\n            class JUE {\n                class qtT {\n                    class lvAi {\n                        class s3W {\n                            class RQ {\n                                class t {\n                                    class kh {\n                                        lvAi.s3W.RQ.t NUN = new s3W.RQ.t();\n                                    }\n\n                                    class u {\n                                        nL v = new nL();\n                                    }\n\n                                    class O {\n                                        qtT.lvAi T = new JUE.qtT.lvAi();\n                                    }\n                                }\n\n                                class OD {}\n\n                                class Qyx8_U3aus {\n                                    m.JUE IQR5 = new Z8ycF.m.JUE();\n\n                                    JUE.qtT.lvAi.s3W.RQ.Qyx8_U3aus h = new Qyx8_U3aus();\n\n                                    qtT.lvAi.s3W.RQ If = new RQ();\n                                }\n\n                                nL N0 = new nL();\n                            }\n                        }\n\n                        class NEokVAo {}\n\n                        class D {\n                            nL.Z8ycF.m.JUE.qtT.lvAi X9dQ = new qtT.lvAi();\n\n                            Z8ycF.m.JUE.qtT t4_ = new m.JUE.qtT();\n\n                            nL M = new nL();\n                        }\n\n                        class BFN {}\n\n                        Z8ycF.m.JUE.qtT xP3rI0e = new Z8ycF.m.JUE.qtT();\n                    }\n                }\n\n                class Tyys4F {\n                    JUE.Tyys4F RCU = new m.JUE.Tyys4F();\n\n                    nL.Z8ycF.m C = new m();\n                }\n            }\n\n            class g {\n                Z8ycF.m.g N = new g();\n\n                m kX = new nL.Z8ycF.m();\n            }\n\n            class lV {}\n\n            class F {\n                Z8ycF.m.F d = new nL.Z8ycF.m.F();\n\n                Z8ycF yQsnE = new Z8ycF();\n\n                m.F V = new nL.Z8ycF.m.F();\n\n                nL.Z8ycF R = new nL.Z8ycF();\n\n                nL s = new nL();\n\n                nL.Z8ycF p = new nL.Z8ycF();\n            }\n        }\n    }\n}", innerClass.toString());
    }

    @Test
    public void test097() {
        Launcher launcher = new Launcher();
        launcher.getEnvironment().setComplianceLevel(17);
        launcher.getEnvironment().setAutoImports(true);
        launcher.getEnvironment().setShouldCompile(true);
        launcher.addInputResource(new VirtualFile("class h {\n  class G {\n    class p {\n      class u50 {\n        class Jh {\n          class ixO6tYtl8 {\n            class I {\n              class Lnr {\n                class W {\n                  class D {\n\n                    p.u50.Jh.ixO6tYtl8 t = new h.G.p.u50.Jh.ixO6tYtl8();\n                    G.p.u50 R = new G.p.u50();\n                  }\n                  class bI4zV6 {\n\n                    p.u50.Jh.ixO6tYtl8.I.Lnr.W Vi = new u50.Jh.ixO6tYtl8.I.Lnr.W();\n                  }\n                  class Qz{}\n                  class u5 {\n\n                    Jh.ixO6tYtl8.I.Lnr.W F = new W();\n                  }\n                  \n                }\n                class O{}\n                class yZaym{}\n                ixO6tYtl8.I.Lnr L_C = new Jh.ixO6tYtl8.I.Lnr();\n              }\n              class c {\n\n                h.G rs = new h.G();\n              }\n              \n            }\n            p.u50 l = new u50();\n          }\n          class NyD3 {\n\n            G.p OP = new G.p();\n            h e = new h();\n          }\n          class lD {\n\n            h OA = new h();\n            h.G.p.u50.Jh r = new p.u50.Jh();\n          }\n          \n        }\n        class A {\n\n          p.u50 N70Q9 = new h.G.p.u50();\n          u50.A aLc = new A();\n          h UDhau = new h();\n          h Go = new h();\n          G.p Nq = new p();\n        }\n        \n      }\n      \n    }\n    class L {\n\n      L T = new L();\n    }\n    \n  }\n  class ieN {\n\n    h.ieN xI = new h.ieN();\n  }\n  class bJ {\n\n    h Su = new h();\n    h.bJ s = new bJ();\n    bJ o = new h.bJ();\n    h kt = new h();\n    h Y = new h();\n  }\n  \n}"));
        CtType<?> innerClass = launcher.buildModel().getAllTypes().iterator().next();
        assertEquals("class h {\n    class G {\n        class p {\n            class u50 {\n                class Jh {\n                    class ixO6tYtl8 {\n                        class I {\n                            class Lnr {\n                                class W {\n                                    class D {\n                                        p.u50.Jh.ixO6tYtl8 t = new h.G.p.u50.Jh.ixO6tYtl8();\n\n                                        G.p.u50 R = new G.p.u50();\n                                    }\n\n                                    class bI4zV6 {\n                                        p.u50.Jh.ixO6tYtl8.I.Lnr.W Vi = new u50.Jh.ixO6tYtl8.I.Lnr.W();\n                                    }\n\n                                    class Qz {}\n\n                                    class u5 {\n                                        Jh.ixO6tYtl8.I.Lnr.W F = new W();\n                                    }\n                                }\n\n                                class O {}\n\n                                class yZaym {}\n\n                                ixO6tYtl8.I.Lnr L_C = new Jh.ixO6tYtl8.I.Lnr();\n                            }\n\n                            class c {\n                                h.G rs = new h.G();\n                            }\n                        }\n\n                        p.u50 l = new u50();\n                    }\n\n                    class NyD3 {\n                        G.p OP = new G.p();\n\n                        h e = new h();\n                    }\n\n                    class lD {\n                        h OA = new h();\n\n                        h.G.p.u50.Jh r = new p.u50.Jh();\n                    }\n                }\n\n                class A {\n                    p.u50 N70Q9 = new h.G.p.u50();\n\n                    u50.A aLc = new A();\n\n                    h UDhau = new h();\n\n                    h Go = new h();\n\n                    G.p Nq = new p();\n                }\n            }\n        }\n\n        class L {\n            L T = new L();\n        }\n    }\n\n    class ieN {\n        h.ieN xI = new h.ieN();\n    }\n\n    class bJ {\n        h Su = new h();\n\n        h.bJ s = new bJ();\n\n        bJ o = new h.bJ();\n\n        h kt = new h();\n\n        h Y = new h();\n    }\n}", innerClass.toString());
    }

    @Test
    public void test098() {
        Launcher launcher = new Launcher();
        launcher.getEnvironment().setComplianceLevel(17);
        launcher.getEnvironment().setAutoImports(true);
        launcher.getEnvironment().setShouldCompile(true);
        launcher.addInputResource(new VirtualFile("class WSD {\n  class Pw1w {\n    class UQ6Qq {\n      class V {\n        class HVUe {\n          class m {\n            class dZzu {\n              class Mj {\n                class Ar {\n                  class o {\n                    class h{}\n                    class P{}\n                    \n                  }\n                  HVUe.m.dZzu.Mj cR = new WSD.Pw1w.UQ6Qq.V.HVUe.m.dZzu.Mj();\n                }\n                class mf {\n\n                  m F = new m();\n                  V u3t = new UQ6Qq.V();\n                }\n                class MqiMT{}\n                \n              }\n              \n            }\n            class p{}\n            class iGR{}\n            WSD D = new WSD();\n            Pw1w.UQ6Qq yIoK = new WSD.Pw1w.UQ6Qq();\n            UQ6Qq.V BwT = new Pw1w.UQ6Qq.V();\n          }\n          class ju6S {\n\n            V.HVUe o3 = new UQ6Qq.V.HVUe();\n            WSD.Pw1w.UQ6Qq N7 = new WSD.Pw1w.UQ6Qq();\n            WSD.Pw1w.UQ6Qq.V.HVUe w4 = new HVUe();\n            WSD.Pw1w LrP4Z = new WSD.Pw1w();\n          }\n          UQ6Qq.V q = new WSD.Pw1w.UQ6Qq.V();\n        }\n        class n{}\n        Pw1w.UQ6Qq ccOgL = new Pw1w.UQ6Qq();\n        Pw1w pw = new Pw1w();\n      }\n      class iT {\n\n        UQ6Qq A8O = new WSD.Pw1w.UQ6Qq();\n        WSD M = new WSD();\n        WSD.Pw1w.UQ6Qq XJ2am_I5 = new Pw1w.UQ6Qq();\n        WSD.Pw1w.UQ6Qq b = new Pw1w.UQ6Qq();\n      }\n      class B {\n\n        WSD E = new WSD();\n        UQ6Qq BvZw = new Pw1w.UQ6Qq();\n      }\n      \n    }\n    class x {\n\n      x H = new x();\n    }\n    \n  }\n  WSD N5Ow = new WSD();\n  Pw1w JA2 = new WSD.Pw1w();\n  WSD Y = new WSD();\n  WSD iFi = new WSD();\n}"));
        CtType<?> innerClass = launcher.buildModel().getAllTypes().iterator().next();
        assertEquals("class WSD {\n    class Pw1w {\n        class UQ6Qq {\n            class V {\n                class HVUe {\n                    class m {\n                        class dZzu {\n                            class Mj {\n                                class Ar {\n                                    class o {\n                                        class h {}\n\n                                        class P {}\n                                    }\n\n                                    HVUe.m.dZzu.Mj cR = new WSD.Pw1w.UQ6Qq.V.HVUe.m.dZzu.Mj();\n                                }\n\n                                class mf {\n                                    m F = new m();\n\n                                    V u3t = new UQ6Qq.V();\n                                }\n\n                                class MqiMT {}\n                            }\n                        }\n\n                        class p {}\n\n                        class iGR {}\n\n                        WSD D = new WSD();\n\n                        Pw1w.UQ6Qq yIoK = new WSD.Pw1w.UQ6Qq();\n\n                        UQ6Qq.V BwT = new Pw1w.UQ6Qq.V();\n                    }\n\n                    class ju6S {\n                        V.HVUe o3 = new UQ6Qq.V.HVUe();\n\n                        WSD.Pw1w.UQ6Qq N7 = new WSD.Pw1w.UQ6Qq();\n\n                        WSD.Pw1w.UQ6Qq.V.HVUe w4 = new HVUe();\n\n                        WSD.Pw1w LrP4Z = new WSD.Pw1w();\n                    }\n\n                    UQ6Qq.V q = new WSD.Pw1w.UQ6Qq.V();\n                }\n\n                class n {}\n\n                Pw1w.UQ6Qq ccOgL = new Pw1w.UQ6Qq();\n\n                Pw1w pw = new Pw1w();\n            }\n\n            class iT {\n                UQ6Qq A8O = new WSD.Pw1w.UQ6Qq();\n\n                WSD M = new WSD();\n\n                WSD.Pw1w.UQ6Qq XJ2am_I5 = new Pw1w.UQ6Qq();\n\n                WSD.Pw1w.UQ6Qq b = new Pw1w.UQ6Qq();\n            }\n\n            class B {\n                WSD E = new WSD();\n\n                UQ6Qq BvZw = new Pw1w.UQ6Qq();\n            }\n        }\n\n        class x {\n            x H = new x();\n        }\n    }\n\n    WSD N5Ow = new WSD();\n\n    Pw1w JA2 = new WSD.Pw1w();\n\n    WSD Y = new WSD();\n\n    WSD iFi = new WSD();\n}", innerClass.toString());
    }

    @Test
    public void test099() {
        Launcher launcher = new Launcher();
        launcher.getEnvironment().setComplianceLevel(17);
        launcher.getEnvironment().setAutoImports(true);
        launcher.getEnvironment().setShouldCompile(true);
        launcher.addInputResource(new VirtualFile("class z {\n  class R {\n    class OBx9 {\n      class ph {\n        class u {\n          class m {\n            class hq {\n              class H {\n                class G {\n                  class I{}\n                  class ar {\n\n                    z.R v = new z.R();\n                  }\n                  z.R.OBx9.ph.u.m.hq.H w = new H();\n                  u.m OgyG = new m();\n                }\n                OBx9.ph o = new OBx9.ph();\n              }\n              class zB {\n\n                m.hq.zB g = new z.R.OBx9.ph.u.m.hq.zB();\n                OBx9 LZw = new OBx9();\n              }\n              z.R L = new R();\n              hq.H O4b = new u.m.hq.H();\n              hq JUQK = new R.OBx9.ph.u.m.hq();\n              z.R.OBx9.ph.u.m c2D2 = new z.R.OBx9.ph.u.m();\n            }\n            static class rno{}\n            rno n = new R.OBx9.ph.u.m.rno();\n          }\n          class eTf {\n\n            R.OBx9.ph zGtkz = new z.R.OBx9.ph();\n            u A = new ph.u();\n          }\n          class rSoOZDy{}\n          class Z {\n\n            z.R.OBx9.ph.u uyE = new ph.u();\n            Z e = new Z();\n          }\n          \n        }\n        class y {\n\n          R.OBx9 N = new R.OBx9();\n          R ZP = new R();\n          z QU = new z();\n          z.R VL = new z.R();\n          OBx9 Fd = new z.R.OBx9();\n        }\n        \n      }\n      OBx9.ph sWz = new OBx9.ph();\n      R.OBx9.ph Vm = new ph();\n      z.R.OBx9 d = new OBx9();\n    }\n    class V{}\n    static class C{}\n    \n  }\n  class kx {\n\n    z.kx IP = new z.kx();\n  }\n  static class cR{}\n  \n}"));
        CtType<?> innerClass = launcher.buildModel().getAllTypes().iterator().next();
        assertEquals("class z {\n    class R {\n        class OBx9 {\n            class ph {\n                class u {\n                    class m {\n                        class hq {\n                            class H {\n                                class G {\n                                    class I {}\n\n                                    class ar {\n                                        z.R v = new z.R();\n                                    }\n\n                                    z.R.OBx9.ph.u.m.hq.H w = new H();\n\n                                    u.m OgyG = new m();\n                                }\n\n                                OBx9.ph o = new OBx9.ph();\n                            }\n\n                            class zB {\n                                m.hq.zB g = new z.R.OBx9.ph.u.m.hq.zB();\n\n                                OBx9 LZw = new OBx9();\n                            }\n\n                            z.R L = new R();\n\n                            hq.H O4b = new u.m.hq.H();\n\n                            hq JUQK = new R.OBx9.ph.u.m.hq();\n\n                            z.R.OBx9.ph.u.m c2D2 = new z.R.OBx9.ph.u.m();\n                        }\n\n                        static class rno {}\n\n                        rno n = new R.OBx9.ph.u.m.rno();\n                    }\n\n                    class eTf {\n                        R.OBx9.ph zGtkz = new z.R.OBx9.ph();\n\n                        u A = new ph.u();\n                    }\n\n                    class rSoOZDy {}\n\n                    class Z {\n                        z.R.OBx9.ph.u uyE = new ph.u();\n\n                        Z e = new Z();\n                    }\n                }\n\n                class y {\n                    R.OBx9 N = new R.OBx9();\n\n                    R ZP = new R();\n\n                    z QU = new z();\n\n                    z.R VL = new z.R();\n\n                    OBx9 Fd = new z.R.OBx9();\n                }\n            }\n\n            OBx9.ph sWz = new OBx9.ph();\n\n            R.OBx9.ph Vm = new ph();\n\n            z.R.OBx9 d = new OBx9();\n        }\n\n        class V {}\n\n        static class C {}\n    }\n\n    class kx {\n        z.kx IP = new z.kx();\n    }\n\n    static class cR {}\n}", innerClass.toString());
    }
}

