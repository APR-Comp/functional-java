/*
 * This file was automatically generated by EvoSuite
 * Sat Nov 25 03:37:11 GMT 2023
 */

package org.apache.commons.compress.archivers.tar;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.BufferedInputStream;
import java.io.ByteArrayInputStream;
import java.io.DataInputStream;
import java.io.FileDescriptor;
import java.io.FileNotFoundException;
import java.io.FilterInputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.io.PushbackInputStream;
import java.io.SequenceInputStream;
import java.io.SyncFailedException;
import java.time.ZoneId;
import java.util.Enumeration;
import java.util.HashMap;
import java.util.LinkedList;
import java.util.List;
import java.util.Map;
import org.apache.commons.compress.archivers.tar.TarArchiveStructSparse;
import org.apache.commons.compress.archivers.tar.TarUtils;
import org.apache.commons.compress.archivers.zip.ZipEncoding;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFileInputStream;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class TarUtils_ESTest extends TarUtils_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte) (-114);
      byteArray0[1] = (byte)48;
      byteArray0[2] = (byte)48;
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte)0;
      byteArray0[5] = (byte)0;
      byteArray0[6] = (byte)48;
      byteArray0[7] = (byte)63;
      byteArray0[8] = (byte)32;
      TarUtils.formatCheckSumOctalBytes(0L, byteArray0, 2, 2);
      // Undeclared exception!
      try { 
        TarUtils.parseName(byteArray0, (int) (byte)48, (int) (byte)48);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte) (-37);
      byte byte0 = (byte)15;
      byteArray0[1] = (byte)15;
      byteArray0[2] = (byte)2;
      byteArray0[3] = (byte) (-11);
      byteArray0[4] = (byte)0;
      TarUtils.computeCheckSum(byteArray0);
      int int0 = 156;
      // Undeclared exception!
      try { 
        TarUtils.formatLongOctalOrBinaryBytes((byte) (-11), byteArray0, 156, (byte)2);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 157
         //
         verifyException("org.apache.commons.compress.archivers.tar.TarUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte) (-66);
      byteArray0[1] = (byte) (-90);
      byteArray0[2] = (byte) (-95);
      byte byte0 = (byte)2;
      byteArray0[3] = (byte)2;
      TarUtils.parseOctalOrBinary(byteArray0, 0, (byte)2);
      // Undeclared exception!
      try { 
        TarUtils.formatLongOctalBytes(0L, byteArray0, (byte)48, 3);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)6;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)3;
      byteArray0[3] = (byte)10;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte)3, 501);
      List<TarArchiveStructSparse> list0 = TarUtils.parsePAX1XSparseHeaders(byteArrayInputStream0, 57);
      // Undeclared exception!
      try { 
        TarUtils.parsePaxHeaders(byteArrayInputStream0, list0, (Map<String, String>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.HashMap", e);
      }
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)125;
      byteArray0[1] = (byte)55;
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte)26;
      byteArray0[4] = (byte)6;
      byteArray0[5] = (byte) (-13);
      byteArray0[6] = (byte)0;
      // Undeclared exception!
      try { 
        TarUtils.formatLongOctalOrBinaryBytes(0L, byteArray0, (byte)0, (byte)48);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byte byte0 = (byte) (-36);
      byteArray0[0] = (byte) (-36);
      byteArray0[1] = (byte)15;
      int int0 = 124;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte) (-36), 124);
      byteArrayInputStream0.close();
      Map<String, String> map0 = ZoneId.SHORT_IDS;
      // Undeclared exception!
      try { 
        TarUtils.parsePaxHeaders(byteArrayInputStream0, (List<TarArchiveStructSparse>) null, map0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)2;
      byteArray0[1] = (byte)65;
      byteArray0[2] = (byte)12;
      byteArray0[3] = (byte)12;
      byteArray0[4] = (byte)112;
      byteArray0[5] = (byte)0;
      byteArray0[6] = (byte) (-56);
      // Undeclared exception!
      try { 
        TarUtils.parseOctalOrBinary(byteArray0, 0, (byte)2);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid byte 2 at offset 0 in '\u0002A' len=2
         //
         verifyException("org.apache.commons.compress.archivers.tar.TarUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte) (-77);
      byteArray0[1] = (byte) (-117);
      byteArray0[2] = (byte)104;
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte)5;
      byteArray0[5] = (byte)122;
      byteArray0[6] = (byte) (-5);
      ZipEncoding zipEncoding0 = TarUtils.FALLBACK_ENCODING;
      String string0 = TarUtils.parseName(byteArray0, 0, 26, zipEncoding0);
      assertEquals("\u00B3\u008Bh", string0);
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)88;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte) (-97);
      byteArray0[3] = (byte) (-105);
      byteArray0[4] = (byte) (-1);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      LinkedList<TarArchiveStructSparse> linkedList0 = new LinkedList<TarArchiveStructSparse>();
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      try { 
        TarUtils.parsePaxHeaders(byteArrayInputStream0, linkedList0, hashMap0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Failed to read Paxheader. Encountered a non-number while reading length
         //
         verifyException("org.apache.commons.compress.archivers.tar.TarUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte) (-122);
      byteArray0[1] = (byte)32;
      byteArray0[2] = (byte)1;
      byteArray0[3] = (byte) (-108);
      byteArray0[4] = (byte)0;
      byteArray0[5] = (byte)38;
      // Undeclared exception!
      try { 
        TarUtils.parseSparse(byteArray0, (byte)1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 12
         //
         verifyException("org.apache.commons.compress.archivers.tar.TarUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)113;
      byteArray0[1] = (byte)100;
      byteArray0[2] = (byte)126;
      byteArray0[3] = (byte)57;
      byteArray0[4] = (byte)9;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (-606), (byte)9);
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(byteArrayInputStream0, byteArrayInputStream0);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(sequenceInputStream0);
      // Undeclared exception!
      try { 
        TarUtils.parsePAX1XSparseHeaders(bufferedInputStream0, 5191);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ByteArrayInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      byte[] byteArray0 = null;
      int int0 = 8;
      // Undeclared exception!
      try { 
        TarUtils.formatLongOctalOrBinaryBytes(0L, (byte[]) null, 8, 8);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)1;
      byteArray0[1] = (byte) (-75);
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte)94;
      byteArray0[4] = (byte)0;
      byteArray0[5] = (byte)0;
      byteArray0[6] = (byte) (-62);
      byteArray0[7] = (byte) (-9);
      byteArray0[8] = (byte) (-67);
      ZipEncoding zipEncoding0 = TarUtils.FALLBACK_ENCODING;
      String string0 = TarUtils.parseName(byteArray0, (int) (byte)0, (int) (byte)1, zipEncoding0);
      assertEquals("\u0001", string0);
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte) (-88);
      byteArray0[1] = (byte)61;
      byteArray0[2] = (byte)46;
      byteArray0[3] = (byte) (-56);
      byteArray0[4] = (byte) (-21);
      byteArray0[5] = (byte) (-1);
      byteArray0[6] = (byte)55;
      // Undeclared exception!
      try { 
        TarUtils.parseName(byteArray0, 0, (int) (byte)55, (ZipEncoding) null);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
      mockFileInputStream0.skip(0L);
      Map<String, String> map0 = ZoneId.SHORT_IDS;
      try { 
        TarUtils.parsePaxHeaders(mockFileInputStream0, (List<TarArchiveStructSparse>) null, map0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.NativeMockedIO", e);
      }
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)5;
      byteArray0[2] = (byte) (-24);
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte) (-48);
      byte byte0 = (byte)90;
      byteArray0[5] = (byte)90;
      byteArray0[6] = (byte)30;
      byteArray0[7] = (byte) (-44);
      ZipEncoding zipEncoding0 = TarUtils.DEFAULT_ENCODING;
      TarUtils.parseName(byteArray0, 0, (int) (byte)90, zipEncoding0);
      // Undeclared exception!
      try { 
        TarUtils.formatCheckSumOctalBytes((-2972L), byteArray0, (byte)0, (byte) (-44));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // -2972=1777777777777777772144 will not fit in octal number buffer of length -46
         //
         verifyException("org.apache.commons.compress.archivers.tar.TarUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      // Undeclared exception!
      try { 
        TarUtils.formatOctalBytes((-658L), (byte[]) null, 48, 48);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byte byte0 = (byte)63;
      byteArray0[0] = (byte)63;
      byteArray0[1] = (byte) (-69);
      byteArray0[2] = (byte)68;
      byte byte1 = (byte) (-49);
      byteArray0[3] = (byte) (-49);
      byteArray0[4] = (byte)0;
      byteArray0[5] = (byte)0;
      byteArray0[6] = (byte)3;
      int int0 = 8;
      // Undeclared exception!
      try { 
        TarUtils.formatCheckSumOctalBytes(0L, byteArray0, (byte)48, 8);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)10;
      byteArray0[2] = (byte)3;
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte)0;
      TarUtils.formatNameBytes("RHI9rcV$IgT~e&%c8!!", byteArray0, (int) (byte)3, 0);
      byte[] byteArray1 = new byte[8];
      byteArray1[0] = (byte)0;
      byteArray1[1] = (byte)10;
      byteArray1[2] = (byte)0;
      byteArray1[3] = (byte)0;
      byteArray1[4] = (byte)3;
      byteArray1[5] = (byte)10;
      byteArray1[6] = (byte)0;
      byteArray1[7] = (byte)0;
      // Undeclared exception!
      try { 
        TarUtils.verifyCheckSum(byteArray1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 148
         //
         verifyException("org.apache.commons.compress.archivers.tar.TarUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      byte[] byteArray0 = null;
      int int0 = 4;
      // Undeclared exception!
      try { 
        TarUtils.formatUnsignedOctalString(1065L, (byte[]) null, 4, 4);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byte byte0 = (byte)1;
      byteArray0[0] = (byte)1;
      byte byte1 = (byte)54;
      byteArray0[1] = (byte)54;
      byteArray0[2] = (byte)0;
      byte byte2 = (byte)0;
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte)88;
      TarUtils.parseBoolean(byteArray0, 0);
      // Undeclared exception!
      try { 
        TarUtils.parsePAX1XSparseHeaders((InputStream) null, (byte)1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.compress.archivers.tar.TarUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte) (-64);
      byteArray0[1] = (byte)9;
      byteArray0[2] = (byte) (-31);
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte)0;
      byteArray0[5] = (byte)0;
      byteArray0[6] = (byte)2;
      byteArray0[7] = (byte) (-44);
      byteArray0[8] = (byte)0;
      // Undeclared exception!
      try { 
        TarUtils.formatLongOctalBytes(552L, byteArray0, (byte)49, (byte)48);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)9;
      byteArray0[1] = (byte)106;
      byteArray0[2] = (byte) (-79);
      byteArray0[3] = (byte)9;
      byteArray0[4] = (byte) (-56);
      byteArray0[5] = (byte)100;
      byteArray0[6] = (byte)52;
      TarUtils.formatUnsignedOctalString(0L, byteArray0, 0, 2);
      assertArrayEquals(new byte[] {(byte)48, (byte)48, (byte) (-79), (byte)9, (byte) (-56), (byte)100, (byte)52}, byteArray0);
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte) (-105);
      byteArray0[1] = (byte)54;
      byteArray0[2] = (byte)10;
      byteArray0[3] = (byte) (-79);
      byteArray0[4] = (byte)74;
      byteArray0[5] = (byte)56;
      byteArray0[6] = (byte)0;
      byteArray0[7] = (byte) (-109);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      try { 
        TarUtils.parsePAX1XSparseHeaders(byteArrayInputStream0, 61);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Unexpected EOF when reading parse information of 1.X PAX format
         //
         verifyException("org.apache.commons.compress.archivers.tar.TarUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      int int0 = 0;
      int int1 = (-1020);
      ZipEncoding zipEncoding0 = TarUtils.FALLBACK_ENCODING;
      TarUtils.formatNameBytes("The list of suffixes must not be null", byteArray0, 0, (-1020), zipEncoding0);
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
      try { 
        fileDescriptor0.sync();
        fail("Expecting exception: SyncFailedException");
      
      } catch(SyncFailedException e) {
         //
         // sync failed
         //
         verifyException("java.io.FileDescriptor", e);
      }
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)56;
      byteArray0[1] = (byte) (-54);
      byteArray0[2] = (byte) (-28);
      byteArray0[3] = (byte) (-46);
      byteArray0[4] = (byte)126;
      byteArray0[5] = (byte)88;
      byteArray0[6] = (byte) (-128);
      byteArray0[7] = (byte)0;
      byteArray0[8] = (byte) (-21);
      ZipEncoding zipEncoding0 = TarUtils.DEFAULT_ENCODING;
      // Undeclared exception!
      try { 
        TarUtils.formatNameBytes("", byteArray0, 8, (int) (byte)126, zipEncoding0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 9
         //
         verifyException("org.apache.commons.compress.archivers.tar.TarUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      byte[] byteArray0 = null;
      int int0 = (-165);
      // Undeclared exception!
      try { 
        TarUtils.parseSparse((byte[]) null, (-165));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.compress.archivers.tar.TarUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      // Undeclared exception!
      try { 
        TarUtils.parseOctal((byte[]) null, 2119, 387);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.compress.archivers.tar.TarUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      byte[] byteArray0 = null;
      int int0 = (-363);
      ZipEncoding zipEncoding0 = TarUtils.DEFAULT_ENCODING;
      // Undeclared exception!
      try { 
        TarUtils.formatNameBytes("x,}=n*S o1eQ-u", (byte[]) null, (-363), (-363), zipEncoding0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      byte[] byteArray0 = null;
      int int0 = (-1138);
      int int1 = (-1709);
      // Undeclared exception!
      try { 
        TarUtils.formatLongOctalOrBinaryBytes((-2657L), (byte[]) null, (-1138), (-1709));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.compress.archivers.tar.TarUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      byte[] byteArray0 = null;
      int int0 = 0;
      // Undeclared exception!
      try { 
        TarUtils.formatLongOctalBytes(0L, (byte[]) null, 0, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)2;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)30;
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte)0;
      TarUtils.parseName(byteArray0, (int) (byte)0, (int) (byte)2);
      PipedInputStream pipedInputStream0 = null;
      try {
        pipedInputStream0 = new PipedInputStream((-2079));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Pipe Size <= 0
         //
         verifyException("java.io.PipedInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      byte byte0 = (byte) (-103);
      byteArray0[0] = (byte) (-103);
      // Undeclared exception!
      try { 
        TarUtils.formatLongOctalOrBinaryBytes((-3465L), byteArray0, (byte) (-103), (-2063));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Value -3465 is too large for -2063 byte field.
         //
         verifyException("org.apache.commons.compress.archivers.tar.TarUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte) (-65);
      byteArray0[3] = (byte) (-81);
      byteArray0[4] = (byte)0;
      byteArray0[5] = (byte)1;
      byteArray0[6] = (byte)0;
      byteArray0[7] = (byte)53;
      long long0 = TarUtils.parseOctal(byteArray0, 0, 1577);
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      int int0 = 0;
      ZipEncoding zipEncoding0 = TarUtils.FALLBACK_ENCODING;
      TarUtils.formatNameBytes("", byteArray0, 0, 0, zipEncoding0);
      int int1 = (-1648);
      // Undeclared exception!
      try { 
        TarUtils.formatCheckSumOctalBytes(331L, byteArray0, (-1648), 95);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)127;
      byteArray0[1] = (byte)37;
      byteArray0[2] = (byte)86;
      byteArray0[3] = (byte) (-1);
      byteArray0[4] = (byte)0;
      byteArray0[5] = (byte) (-1);
      byteArray0[6] = (byte) (-88);
      byteArray0[7] = (byte) (-48);
      byte byte0 = (byte)0;
      byteArray0[8] = (byte)0;
      TarUtils.formatNameBytes("=OP&", byteArray0, (int) (byte)0, (-3461));
      // Undeclared exception!
      try { 
        TarUtils.formatCheckSumOctalBytes((-799L), byteArray0, 0, (byte)127);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      byte[] byteArray0 = null;
      // Undeclared exception!
      try { 
        TarUtils.parseOctalOrBinary((byte[]) null, 0, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.compress.archivers.tar.TarUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      byte[] byteArray0 = null;
      int int0 = 3320;
      // Undeclared exception!
      try { 
        TarUtils.formatCheckSumOctalBytes((-66L), (byte[]) null, 3320, 809);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      LinkedList<TarArchiveStructSparse> linkedList0 = new LinkedList<TarArchiveStructSparse>();
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      // Undeclared exception!
      try { 
        TarUtils.parsePaxHeaders((InputStream) null, linkedList0, hashMap0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.compress.archivers.tar.TarUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      byte[] byteArray0 = null;
      // Undeclared exception!
      try { 
        TarUtils.computeCheckSum((byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.compress.archivers.tar.TarUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      // Undeclared exception!
      try { 
        TarUtils.parseName((byte[]) null, (-2497), 1297, (ZipEncoding) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)114;
      byteArray0[1] = (byte) (-26);
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte) (-1);
      byteArray0[5] = (byte) (-1);
      byteArray0[6] = (byte)79;
      byteArray0[7] = (byte) (-111);
      // Undeclared exception!
      try { 
        TarUtils.formatLongOctalOrBinaryBytes(124L, byteArray0, 1149, (byte) (-1));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // 124=174 will not fit in octal number buffer of length -2
         //
         verifyException("org.apache.commons.compress.archivers.tar.TarUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      byte[] byteArray0 = null;
      int int0 = 1874;
      // Undeclared exception!
      try { 
        TarUtils.parseName((byte[]) null, 1874, 1874);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      Enumeration<BufferedInputStream> enumeration0 = (Enumeration<BufferedInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(sequenceInputStream0);
      // Undeclared exception!
      try { 
        TarUtils.parsePAX01SparseHeaders((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.compress.archivers.tar.TarUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      ZipEncoding zipEncoding0 = TarUtils.DEFAULT_ENCODING;
      int int0 = TarUtils.formatNameBytes("", byteArray0, 0, 0, zipEncoding0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte) (-37);
      byteArray0[1] = (byte)97;
      byteArray0[2] = (byte)100;
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte) (-62);
      byteArray0[5] = (byte)57;
      byteArray0[6] = (byte)0;
      byteArray0[7] = (byte) (-29);
      byteArray0[8] = (byte) (-87);
      // Undeclared exception!
      try { 
        TarUtils.formatLongOctalBytes(10L, byteArray0, (byte) (-29), 2);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte) (-19);
      byteArray0[1] = (byte) (-100);
      byteArray0[2] = (byte) (-19);
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte)63;
      byte byte0 = (byte)1;
      byteArray0[5] = (byte)1;
      byteArray0[6] = (byte)0;
      byteArray0[7] = (byte)0;
      byte byte1 = (byte) (-125);
      byteArray0[8] = (byte) (-125);
      TarUtils.parseOctalOrBinary(byteArray0, (byte)0, (byte)1);
      // Undeclared exception!
      try { 
        TarUtils.formatOctalBytes((byte) (-19), byteArray0, (byte)63, 2798);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte) (-106);
      byteArray0[1] = (byte)9;
      byteArray0[2] = (byte)18;
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte)57;
      byteArray0[5] = (byte) (-71);
      byteArray0[6] = (byte)0;
      byteArray0[7] = (byte)55;
      byteArray0[8] = (byte)23;
      // Undeclared exception!
      try { 
        TarUtils.parseOctal(byteArray0, (byte)0, 960);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 959
         //
         verifyException("org.apache.commons.compress.archivers.tar.TarUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byte byte0 = (byte)9;
      byteArray0[0] = (byte)9;
      byte byte1 = (byte)69;
      byteArray0[1] = (byte)69;
      byte byte2 = (byte) (-59);
      byteArray0[2] = (byte) (-59);
      byteArray0[3] = (byte) (-1);
      byte byte3 = (byte) (-88);
      byteArray0[4] = (byte) (-88);
      byte byte4 = (byte)0;
      byteArray0[5] = (byte)0;
      byte byte5 = (byte)48;
      byteArray0[6] = (byte)48;
      // Undeclared exception!
      try { 
        TarUtils.formatCheckSumOctalBytes(1330L, byteArray0, 217, (-4941));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // 1330=2462 will not fit in octal number buffer of length -4943
         //
         verifyException("org.apache.commons.compress.archivers.tar.TarUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)0;
      // Undeclared exception!
      try { 
        TarUtils.formatOctalBytes(4096L, byteArray0, (byte)0, (byte)0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // 4096=10000 will not fit in octal number buffer of length -2
         //
         verifyException("org.apache.commons.compress.archivers.tar.TarUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte) (-31);
      byte byte0 = (byte)0;
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte) (-76);
      byte byte1 = (byte)70;
      byteArray0[4] = (byte)70;
      byteArray0[5] = (byte)0;
      byteArray0[6] = (byte)124;
      byteArray0[7] = (byte) (-74);
      // Undeclared exception!
      try { 
        TarUtils.parseOctalOrBinary(byteArray0, (byte)0, (byte) (-76));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Length -76 must be at least 2
         //
         verifyException("org.apache.commons.compress.archivers.tar.TarUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      String string0 = " is too large for ";
      byte[] byteArray0 = null;
      int int0 = 0;
      // Undeclared exception!
      try { 
        TarUtils.formatNameBytes(" is too large for ", (byte[]) null, 0, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      // Undeclared exception!
      try { 
        TarUtils.parsePAX1XSparseHeaders((InputStream) null, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.compress.archivers.tar.TarUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte) (-89);
      byteArray0[1] = (byte) (-99);
      byteArray0[2] = (byte) (-61);
      byteArray0[3] = (byte) (-96);
      byteArray0[4] = (byte) (-128);
      byteArray0[5] = (byte)58;
      byteArray0[6] = (byte)70;
      byteArray0[7] = (byte) (-1);
      int int0 = 677;
      // Undeclared exception!
      try { 
        TarUtils.parseBoolean(byteArray0, 677);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 677
         //
         verifyException("org.apache.commons.compress.archivers.tar.TarUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream((InputStream) null);
      try { 
        TarUtils.parsePAX1XSparseHeaders(bufferedInputStream0, 0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Stream closed
         //
         verifyException("java.io.BufferedInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)93;
      byteArray0[1] = (byte)10;
      byteArray0[2] = (byte)32;
      byteArray0[3] = (byte)0;
      // Undeclared exception!
      try { 
        TarUtils.parseName(byteArray0, (int) (byte)10, (int) (byte)93);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      byte[] byteArray0 = null;
      int int0 = 69;
      // Undeclared exception!
      try { 
        TarUtils.parseBoolean((byte[]) null, 69);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.compress.archivers.tar.TarUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte) (-43);
      // Undeclared exception!
      try { 
        TarUtils.formatLongOctalBytes(0L, byteArray0, (byte)0, 0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)52;
      int int0 = 0;
      // Undeclared exception!
      try { 
        TarUtils.formatLongOctalBytes((-688L), byteArray0, (byte)52, 0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // -688=1777777777777777776520 will not fit in octal number buffer of length -1
         //
         verifyException("org.apache.commons.compress.archivers.tar.TarUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      int int0 = 0;
      // Undeclared exception!
      try { 
        TarUtils.formatOctalBytes(0L, byteArray0, 0, 0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)12;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte) (-35);
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte) (-118);
      byteArray0[5] = (byte)0;
      byteArray0[6] = (byte)75;
      byteArray0[7] = (byte) (-47);
      // Undeclared exception!
      try { 
        TarUtils.parseOctalOrBinary(byteArray0, 65, (byte)0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 65
         //
         verifyException("org.apache.commons.compress.archivers.tar.TarUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)1;
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte)42;
      byteArray0[4] = (byte)1;
      byteArray0[5] = (byte)0;
      byteArray0[6] = (byte)0;
      byteArray0[7] = (byte)0;
      byteArray0[8] = (byte)12;
      ZipEncoding zipEncoding0 = TarUtils.FALLBACK_ENCODING;
      // Undeclared exception!
      try { 
        TarUtils.parseName(byteArray0, 14, (int) (byte)12, zipEncoding0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte) (-28);
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte) (-56);
      byte byte0 = (byte)0;
      byteArray0[3] = (byte)0;
      byte byte1 = (byte)57;
      byteArray0[4] = (byte)57;
      byteArray0[5] = (byte)74;
      // Undeclared exception!
      try { 
        TarUtils.parseSparse(byteArray0, 0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      String string0 = "";
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)22;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)0;
      byte byte0 = (byte)0;
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte) (-1);
      byteArray0[5] = (byte)72;
      // Undeclared exception!
      try { 
        TarUtils.formatNameBytes("", byteArray0, (int) (byte) (-1), 2510);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)28;
      byteArray0[1] = (byte)43;
      byteArray0[2] = (byte) (-86);
      byteArray0[3] = (byte) (-60);
      byteArray0[4] = (byte) (-57);
      byteArray0[5] = (byte) (-1);
      byteArray0[6] = (byte)0;
      byteArray0[7] = (byte)13;
      byteArray0[8] = (byte) (-3);
      // Undeclared exception!
      try { 
        TarUtils.formatUnsignedOctalString((-2096L), byteArray0, (byte)13, 3);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      byte[] byteArray0 = null;
      // Undeclared exception!
      try { 
        TarUtils.verifyCheckSum((byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.compress.archivers.tar.TarUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)93;
      byteArray0[1] = (byte)64;
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte)34;
      byteArray0[5] = (byte) (-58);
      byteArray0[6] = (byte)59;
      byteArray0[7] = (byte)6;
      byteArray0[8] = (byte)0;
      // Undeclared exception!
      try { 
        TarUtils.formatCheckSumOctalBytes(10L, byteArray0, 0, 1370);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      TarUtils.computeCheckSum(byteArray0);
      ZipEncoding zipEncoding0 = TarUtils.DEFAULT_ENCODING;
      // Undeclared exception!
      try { 
        TarUtils.formatNameBytes("shaded.org.apache.commons.io.filefilter.SizeFileFilter", byteArray0, (-1349), (-1349), zipEncoding0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.compress.archivers.tar.TarUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      String string0 = "pv%:_Hg0)Ms~G2)wM r";
      // Undeclared exception!
      try { 
        TarUtils.parsePAX01SparseHeaders("pv%:_Hg0)Ms~G2)wM r");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"pv%:_Hg0)Ms~G2)wM r\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)125;
      byte byte0 = (byte)0;
      byteArray0[1] = (byte)0;
      byte byte1 = (byte)0;
      byteArray0[2] = (byte)0;
      byte byte2 = (byte) (-3);
      byteArray0[3] = (byte) (-3);
      ZipEncoding zipEncoding0 = TarUtils.DEFAULT_ENCODING;
      TarUtils.parseName(byteArray0, 3423, (int) (byte)0, zipEncoding0);
      // Undeclared exception!
      try { 
        TarUtils.parseOctal(byteArray0, (-1624), (-1624));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Length -1624 must be at least 2
         //
         verifyException("org.apache.commons.compress.archivers.tar.TarUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byte byte0 = (byte) (-40);
      byteArray0[0] = (byte) (-40);
      byteArray0[1] = (byte)0;
      byte byte1 = (byte)32;
      byteArray0[2] = (byte)32;
      byte byte2 = (byte)88;
      byteArray0[3] = (byte)88;
      byteArray0[4] = (byte) (-54);
      byteArray0[5] = (byte)0;
      byteArray0[6] = (byte)0;
      byte byte3 = (byte) (-113);
      byteArray0[7] = (byte) (-113);
      byteArray0[8] = (byte)0;
      // Undeclared exception!
      try { 
        TarUtils.verifyCheckSum(byteArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 148
         //
         verifyException("org.apache.commons.compress.archivers.tar.TarUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)48;
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte) (-29);
      byteArray0[5] = (byte) (-39);
      byteArray0[6] = (byte) (-41);
      byteArray0[7] = (byte) (-103);
      // Undeclared exception!
      try { 
        TarUtils.formatLongOctalOrBinaryBytes(0L, byteArray0, (byte)48, 984);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      long long0 = 2475L;
      byte[] byteArray0 = new byte[0];
      int int0 = (-886);
      // Undeclared exception!
      try { 
        TarUtils.formatUnsignedOctalString(2475L, byteArray0, (-886), (-886));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // 2475=4653 will not fit in octal number buffer of length -886
         //
         verifyException("org.apache.commons.compress.archivers.tar.TarUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)0;
      // Undeclared exception!
      try { 
        TarUtils.parseSparse(byteArray0, (byte)0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 12
         //
         verifyException("org.apache.commons.compress.archivers.tar.TarUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      byte byte0 = (byte)0;
      byteArray0[0] = (byte)0;
      int int0 = 0;
      TarUtils.parseName(byteArray0, (int) (byte)0, 0);
      TarUtils.parseBoolean(byteArray0, (byte)0);
      ZipEncoding zipEncoding0 = TarUtils.FALLBACK_ENCODING;
      // Undeclared exception!
      try { 
        TarUtils.formatNameBytes("", byteArray0, (-2411), 54, zipEncoding0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)47;
      TarUtils.parseOctal(byteArray0, (byte)0, 759);
      // Undeclared exception!
      try { 
        TarUtils.parseOctal(byteArray0, 759, (byte)0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Length 0 must be at least 2
         //
         verifyException("org.apache.commons.compress.archivers.tar.TarUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte) (-21);
      byteArray0[1] = (byte)76;
      byte byte0 = (byte)91;
      byteArray0[2] = (byte)91;
      // Undeclared exception!
      try { 
        TarUtils.parseOctalOrBinary(byteArray0, (-223), (byte)91);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -223
         //
         verifyException("org.apache.commons.compress.archivers.tar.TarUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte) (-122);
      byteArray0[3] = (byte)9;
      byteArray0[4] = (byte)108;
      ZipEncoding zipEncoding0 = TarUtils.DEFAULT_ENCODING;
      // Undeclared exception!
      try { 
        TarUtils.formatNameBytes("NK(##2Y:Jt:|l", byteArray0, 1129, 0, zipEncoding0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)42;
      byteArray0[1] = (byte)7;
      byteArray0[2] = (byte) (-43);
      ZipEncoding zipEncoding0 = TarUtils.DEFAULT_ENCODING;
      // Undeclared exception!
      try { 
        TarUtils.formatNameBytes("0H.$N", byteArray0, (-423), (int) (byte)7, zipEncoding0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte) (-71);
      byte byte0 = (byte)0;
      byteArray0[1] = (byte)0;
      TarUtils.parseOctalOrBinary(byteArray0, (byte)0, 0);
      // Undeclared exception!
      try { 
        TarUtils.parseOctalOrBinary(byteArray0, 0, 14);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte) (-19);
      byteArray0[1] = (byte)105;
      byte byte0 = (byte)30;
      byteArray0[2] = (byte)30;
      byteArray0[3] = (byte)0;
      // Undeclared exception!
      try { 
        TarUtils.formatUnsignedOctalString(0L, byteArray0, (byte)0, (-2073));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      pipedOutputStream0.flush();
      PipedInputStream pipedInputStream0 = null;
      try {
        pipedInputStream0 = new PipedInputStream(pipedOutputStream0, (-413));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Pipe Size <= 0
         //
         verifyException("java.io.PipedInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      byte[] byteArray0 = null;
      int int0 = 346;
      // Undeclared exception!
      try { 
        TarUtils.parseSparse((byte[]) null, 346);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.compress.archivers.tar.TarUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      // Undeclared exception!
      try { 
        TarUtils.parsePAX01SparseHeaders("");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)40;
      byteArray0[2] = (byte)63;
      byteArray0[3] = (byte) (-17);
      byteArray0[4] = (byte)56;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte)63, (byte)63);
      byteArrayInputStream0.read();
      byteArrayInputStream0.close();
      LinkedList<TarArchiveStructSparse> linkedList0 = new LinkedList<TarArchiveStructSparse>();
      byteArrayInputStream0.close();
      Map<String, String> map0 = ZoneId.SHORT_IDS;
      TarUtils.parsePaxHeaders(byteArrayInputStream0, linkedList0, map0);
      // Undeclared exception!
      try { 
        TarUtils.parsePAX01SparseHeaders("aQute.lib.env.Selector$Filter");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"aQute.lib.env.Selector$Filter\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte) (-85);
      byteArray0[1] = (byte)7;
      byteArray0[2] = (byte) (-26);
      byteArray0[3] = (byte)41;
      byteArray0[4] = (byte) (-26);
      byteArray0[5] = (byte)2;
      byteArray0[6] = (byte)8;
      // Undeclared exception!
      try { 
        TarUtils.formatOctalBytes((-2901L), byteArray0, (byte)41, (byte)2);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // -2901=1777777777777777772253 will not fit in octal number buffer of length 0
         //
         verifyException("org.apache.commons.compress.archivers.tar.TarUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte) (-1);
      byteArray0[1] = (byte) (-68);
      byteArray0[2] = (byte)17;
      byteArray0[3] = (byte)49;
      byteArray0[4] = (byte)55;
      byteArray0[5] = (byte) (-100);
      byteArray0[6] = (byte) (-123);
      byteArray0[7] = (byte)60;
      ZipEncoding zipEncoding0 = TarUtils.DEFAULT_ENCODING;
      // Undeclared exception!
      try { 
        TarUtils.formatNameBytes("s4e%m/7WDg[&46Ok-", byteArray0, (int) (byte) (-1), 1246, zipEncoding0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      int int0 = 187;
      PipedInputStream pipedInputStream0 = new PipedInputStream(187);
      try { 
        TarUtils.parsePAX1XSparseHeaders(pipedInputStream0, 179);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byte byte0 = (byte)15;
      byteArray0[0] = (byte)15;
      byteArray0[1] = (byte) (-10);
      byte byte1 = (byte)0;
      byteArray0[2] = (byte)0;
      byte byte2 = (byte)0;
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte)117;
      byteArray0[5] = (byte)0;
      byteArray0[6] = (byte) (-124);
      byteArray0[7] = (byte)57;
      // Undeclared exception!
      try { 
        TarUtils.formatUnsignedOctalString(4096L, byteArray0, (byte)57, (byte)0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // 4096=10000 will not fit in octal number buffer of length 0
         //
         verifyException("org.apache.commons.compress.archivers.tar.TarUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byte byte0 = (byte) (-15);
      byteArray0[0] = (byte) (-15);
      byte byte1 = (byte)0;
      byteArray0[1] = (byte)0;
      // Undeclared exception!
      try { 
        TarUtils.formatLongOctalBytes((-1L), byteArray0, (byte) (-15), (byte) (-15));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // -1=1777777777777777777777 will not fit in octal number buffer of length -16
         //
         verifyException("org.apache.commons.compress.archivers.tar.TarUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte) (-87);
      byteArray0[1] = (byte) (-50);
      byteArray0[2] = (byte) (-37);
      byteArray0[3] = (byte)77;
      byteArray0[4] = (byte)48;
      // Undeclared exception!
      try { 
        TarUtils.parseOctal(byteArray0, 1508, 0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Length 0 must be at least 2
         //
         verifyException("org.apache.commons.compress.archivers.tar.TarUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)51;
      byteArray0[1] = (byte) (-22);
      // Undeclared exception!
      try { 
        TarUtils.formatUnsignedOctalString(8589934591L, byteArray0, 85, (-614));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // 8589934591=77777777777 will not fit in octal number buffer of length -614
         //
         verifyException("org.apache.commons.compress.archivers.tar.TarUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      // Undeclared exception!
      try { 
        TarUtils.parsePAX01SparseHeaders("org.apache.commons.compress.archivers.tar.TarUtils");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"org.apache.commons.compress.archivers.tar.TarUtils\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte) (-88);
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte)102;
      byteArray0[4] = (byte)102;
      byteArray0[5] = (byte)0;
      byteArray0[6] = (byte) (-48);
      byte byte0 = (byte)48;
      byteArray0[7] = (byte)48;
      byteArray0[8] = (byte)55;
      int int0 = 148;
      // Undeclared exception!
      try { 
        TarUtils.formatNameBytes("", byteArray0, 0, 148);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 9
         //
         verifyException("org.apache.commons.compress.archivers.tar.TarUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      String string0 = "The filters must not be null";
      MockFileInputStream mockFileInputStream0 = null;
      try {
        mockFileInputStream0 = new MockFileInputStream("The filters must not be null");
        fail("Expecting exception: FileNotFoundException");
      
      } catch(Throwable e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte) (-95);
      byteArray0[3] = (byte)33;
      byteArray0[4] = (byte)0;
      byteArray0[5] = (byte)0;
      byteArray0[6] = (byte) (-92);
      byteArray0[7] = (byte)48;
      byteArray0[8] = (byte)104;
      // Undeclared exception!
      try { 
        TarUtils.formatLongOctalOrBinaryBytes(1L, byteArray0, 492, (byte)0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // 1=1 will not fit in octal number buffer of length -1
         //
         verifyException("org.apache.commons.compress.archivers.tar.TarUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)70;
      byte byte0 = (byte)0;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte) (-64);
      byteArray0[3] = (byte)54;
      byteArray0[4] = (byte)8;
      byteArray0[5] = (byte)42;
      byteArray0[6] = (byte) (-54);
      byteArray0[7] = (byte) (-57);
      // Undeclared exception!
      try { 
        TarUtils.formatNameBytes("2!D|", byteArray0, (-1600), (int) (byte)8);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byte byte0 = (byte) (-113);
      byteArray0[0] = (byte) (-113);
      byte byte1 = (byte)0;
      byteArray0[1] = (byte)0;
      int int0 = 0;
      TarUtils.parseBoolean(byteArray0, 0);
      TarUtils.formatLongOctalOrBinaryBytes((-227L), byteArray0, 0, 0);
      TarUtils.parseOctalOrBinary(byteArray0, (byte)0, (byte) (-1));
      // Undeclared exception!
      try { 
        TarUtils.formatLongOctalOrBinaryBytes(0, byteArray0, 0, 0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)68;
      byteArray0[1] = (byte) (-61);
      // Undeclared exception!
      try { 
        TarUtils.formatLongOctalOrBinaryBytes((-5453L), byteArray0, 0, 659);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte) (-94);
      byteArray0[1] = (byte) (-58);
      byte byte0 = (byte)0;
      byteArray0[2] = (byte)0;
      byte byte1 = (byte) (-111);
      byteArray0[3] = (byte) (-111);
      byte byte2 = (byte)85;
      byteArray0[4] = (byte)85;
      byteArray0[5] = (byte)3;
      byte byte3 = (byte)0;
      byteArray0[6] = (byte)0;
      TarUtils.computeCheckSum(byteArray0);
      // Undeclared exception!
      try { 
        TarUtils.parseOctalOrBinary(byteArray0, (byte)3, 175);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byte byte0 = (byte)0;
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)127;
      byteArray0[2] = (byte)0;
      byte byte1 = (byte)35;
      byteArray0[3] = (byte)35;
      byte byte2 = (byte) (-97);
      byteArray0[4] = (byte) (-97);
      byte byte3 = (byte)107;
      byteArray0[5] = (byte)107;
      byte byte4 = (byte)57;
      byteArray0[6] = (byte)57;
      byte byte5 = (byte)121;
      byteArray0[7] = (byte)121;
      // Undeclared exception!
      try { 
        TarUtils.parseName(byteArray0, 12, (int) (byte)35);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byte byte0 = (byte)0;
      byteArray0[0] = (byte)0;
      byte byte1 = (byte)0;
      byteArray0[1] = (byte)0;
      int int0 = (-4276);
      // Undeclared exception!
      try { 
        TarUtils.formatLongOctalBytes(4096L, byteArray0, (byte)0, (-4276));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // 4096=10000 will not fit in octal number buffer of length -4277
         //
         verifyException("org.apache.commons.compress.archivers.tar.TarUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)110;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte) (-22);
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte)0;
      byteArray0[5] = (byte)0;
      TarUtils.parseName(byteArray0, (int) (byte)0, (int) (byte)0);
      byte[] byteArray1 = new byte[6];
      byteArray1[0] = (byte)0;
      byteArray1[1] = (byte)0;
      byteArray1[2] = (byte)0;
      byteArray1[3] = (byte) (-22);
      byteArray1[4] = (byte)0;
      byteArray1[5] = (byte)0;
      // Undeclared exception!
      try { 
        TarUtils.parseOctalOrBinary(byteArray1, (-400), 408);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -400
         //
         verifyException("org.apache.commons.compress.archivers.tar.TarUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      byte[] byteArray0 = null;
      int int0 = (-293);
      int int1 = 0;
      // Undeclared exception!
      try { 
        TarUtils.parseOctal((byte[]) null, (-293), 0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Length 0 must be at least 2
         //
         verifyException("org.apache.commons.compress.archivers.tar.TarUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      // Undeclared exception!
      try { 
        TarUtils.formatCheckSumOctalBytes(10L, (byte[]) null, 57, 0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // 10=12 will not fit in octal number buffer of length -2
         //
         verifyException("org.apache.commons.compress.archivers.tar.TarUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)98;
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte)0;
      // Undeclared exception!
      try { 
        TarUtils.formatNameBytes("iVD~d!T%IyG7ePvO", byteArray0, 465, (-416));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)63;
      byteArray0[1] = (byte)42;
      byteArray0[2] = (byte)36;
      byteArray0[3] = (byte) (-48);
      byteArray0[4] = (byte) (-54);
      byteArray0[5] = (byte) (-99);
      byteArray0[6] = (byte)61;
      byteArray0[7] = (byte)96;
      // Undeclared exception!
      try { 
        TarUtils.parseBoolean(byteArray0, 68);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 68
         //
         verifyException("org.apache.commons.compress.archivers.tar.TarUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte) (-30);
      byteArray0[2] = (byte) (-15);
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte)10;
      byteArray0[5] = (byte)79;
      byteArray0[6] = (byte)66;
      byteArray0[7] = (byte)64;
      // Undeclared exception!
      try { 
        TarUtils.parseBoolean(byteArray0, (byte) (-15));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -15
         //
         verifyException("org.apache.commons.compress.archivers.tar.TarUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte) (-67);
      byte byte0 = (byte)0;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte)0;
      byte byte1 = (byte) (-15);
      byteArray0[4] = (byte) (-15);
      byteArray0[5] = (byte)17;
      byteArray0[6] = (byte) (-1);
      // Undeclared exception!
      try { 
        TarUtils.formatUnsignedOctalString(708L, byteArray0, (byte) (-67), 50);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      // Undeclared exception!
      try { 
        TarUtils.parsePAX01SparseHeaders(".");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \".\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byte byte0 = (byte) (-100);
      byteArray0[0] = (byte) (-100);
      byteArray0[1] = (byte)55;
      byte byte1 = (byte)109;
      byteArray0[2] = (byte)109;
      byte byte2 = (byte)53;
      byteArray0[3] = (byte)53;
      byteArray0[4] = (byte)37;
      byteArray0[5] = (byte) (-71);
      TarUtils.computeCheckSum(byteArray0);
      // Undeclared exception!
      try { 
        TarUtils.verifyCheckSum(byteArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 148
         //
         verifyException("org.apache.commons.compress.archivers.tar.TarUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byte byte0 = (byte) (-98);
      byteArray0[0] = (byte) (-98);
      byte byte1 = (byte) (-15);
      byteArray0[1] = (byte) (-15);
      byte byte2 = (byte)1;
      byteArray0[2] = (byte)1;
      byte byte3 = (byte) (-109);
      byteArray0[3] = (byte) (-109);
      // Undeclared exception!
      try { 
        TarUtils.formatNameBytes((String) null, byteArray0, (int) (byte)1, (int) (byte) (-109));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.compress.archivers.tar.TarUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      int int0 = (-69);
      // Undeclared exception!
      try { 
        TarUtils.parseSparse(byteArray0, (-69));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -69
         //
         verifyException("org.apache.commons.compress.archivers.tar.TarUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)0;
      TarUtils.computeCheckSum(byteArray0);
      // Undeclared exception!
      try { 
        TarUtils.parseOctal(byteArray0, 0, (byte)0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Length 0 must be at least 2
         //
         verifyException("org.apache.commons.compress.archivers.tar.TarUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)124;
      byteArray0[1] = (byte) (-85);
      byteArray0[2] = (byte) (-128);
      byteArray0[3] = (byte)70;
      byteArray0[4] = (byte) (-128);
      byteArray0[5] = (byte) (-90);
      byteArray0[6] = (byte)0;
      byteArray0[7] = (byte)46;
      // Undeclared exception!
      try { 
        TarUtils.parseOctal(byteArray0, 0, 0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Length 0 must be at least 2
         //
         verifyException("org.apache.commons.compress.archivers.tar.TarUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      String string0 = "";
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)48;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)8;
      byteArray0[3] = (byte) (-63);
      byte byte0 = (byte)0;
      byteArray0[4] = (byte)0;
      byteArray0[5] = (byte)0;
      byteArray0[6] = (byte) (-42);
      byteArray0[7] = (byte)20;
      byteArray0[8] = (byte)0;
      TarUtils.formatNameBytes("", byteArray0, (int) (byte)0, (int) (byte)0);
      // Undeclared exception!
      try { 
        TarUtils.parseOctal(byteArray0, 0, 3402);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 3401
         //
         verifyException("org.apache.commons.compress.archivers.tar.TarUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      Enumeration<FilterInputStream> enumeration0 = (Enumeration<FilterInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      try { 
        TarUtils.parsePAX1XSparseHeaders(sequenceInputStream0, 0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Unexpected EOF when reading parse information of 1.X PAX format
         //
         verifyException("org.apache.commons.compress.archivers.tar.TarUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      int int0 = 0;
      int int1 = 415;
      // Undeclared exception!
      try { 
        TarUtils.parseOctal(byteArray0, 0, 415);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.apache.commons.compress.archivers.tar.TarUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte) (-1);
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte) (-121);
      byteArray0[4] = (byte)24;
      byteArray0[5] = (byte)85;
      byteArray0[6] = (byte)81;
      byteArray0[7] = (byte) (-128);
      String string0 = TarUtils.parseName(byteArray0, 1053, (-747));
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      String string0 = "gg.4K1\\,Ms5kc)J";
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)59;
      byteArray0[1] = (byte)55;
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte)46;
      byteArray0[4] = (byte) (-79);
      byte byte0 = (byte)12;
      byteArray0[5] = (byte)12;
      byteArray0[6] = (byte)84;
      int int0 = 0;
      ZipEncoding zipEncoding0 = TarUtils.DEFAULT_ENCODING;
      // Undeclared exception!
      try { 
        TarUtils.formatNameBytes("gg.4K1,Ms5kc)J", byteArray0, (int) (byte)12, 0, zipEncoding0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      int int0 = 2581;
      // Undeclared exception!
      try { 
        TarUtils.parseOctalOrBinary(byteArray0, 2581, 2581);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2581
         //
         verifyException("org.apache.commons.compress.archivers.tar.TarUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      // Undeclared exception!
      try { 
        TarUtils.formatUnsignedOctalString((-1699L), byteArray0, (-1210), (-2743));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // -1699=1777777777777777774535 will not fit in octal number buffer of length -2743
         //
         verifyException("org.apache.commons.compress.archivers.tar.TarUtils", e);
      }
  }

  // @Test(timeout = 4000)
  // public void test122()  throws Throwable  {
  //     byte[] byteArray0 = new byte[0];
  //     int int0 = 36;
  //     ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 36, 36);
  //     // Undeclared exception!
  //     try { 
  //       byteArrayInputStream0.read(byteArray0, 36, 36);
  //       fail("Expecting exception: IndexOutOfBoundsException");
  //     
  //     } catch(IndexOutOfBoundsException e) {
  //        //
  //        // no message in exception (getMessage() returned null)
  //        //
  //        verifyException("java.io.ByteArrayInputStream", e);
  //     }
  // }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byte byte0 = (byte)6;
      byteArray0[0] = (byte)6;
      byte byte1 = (byte)0;
      byteArray0[1] = (byte)0;
      byte byte2 = (byte)85;
      byteArray0[2] = (byte)85;
      int int0 = 0;
      // Undeclared exception!
      try { 
        TarUtils.parseOctalOrBinary(byteArray0, (byte)0, 0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Length 0 must be at least 2
         //
         verifyException("org.apache.commons.compress.archivers.tar.TarUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byte byte0 = (byte)69;
      byteArray0[0] = (byte)69;
      byte byte1 = (byte)0;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)0;
      byte byte2 = (byte)113;
      byteArray0[3] = (byte)113;
      byteArray0[4] = (byte)0;
      byteArray0[5] = (byte) (-25);
      byte byte3 = (byte)9;
      byteArray0[6] = (byte)9;
      byteArray0[7] = (byte)17;
      // Undeclared exception!
      try { 
        TarUtils.formatUnsignedOctalString(0L, byteArray0, 50, (-858));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byte byte0 = (byte)36;
      byteArray0[0] = (byte)36;
      byte byte1 = (byte)0;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte) (-97);
      byte byte2 = (byte) (-16);
      byteArray0[3] = (byte) (-16);
      byte byte3 = (byte)0;
      byteArray0[4] = (byte)0;
      byte byte4 = (byte)36;
      byteArray0[5] = (byte)36;
      int int0 = 12;
      int int1 = (-1020);
      // Undeclared exception!
      try { 
        TarUtils.formatCheckSumOctalBytes(0L, byteArray0, 12, (-1020));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)51;
      byteArray0[2] = (byte)0;
      byte byte0 = (byte)126;
      byteArray0[3] = (byte)126;
      int int0 = 14;
      ZipEncoding zipEncoding0 = TarUtils.FALLBACK_ENCODING;
      TarUtils.parseName(byteArray0, 14, (int) (byte)0, zipEncoding0);
      int int1 = 0;
      // Undeclared exception!
      try { 
        TarUtils.formatCheckSumOctalBytes((-1L), byteArray0, (byte)51, 0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // -1=1777777777777777777777 will not fit in octal number buffer of length -2
         //
         verifyException("org.apache.commons.compress.archivers.tar.TarUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte) (-127);
      byte byte0 = (byte) (-118);
      byteArray0[1] = (byte) (-118);
      byteArray0[2] = (byte) (-14);
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte)81;
      byte byte1 = (byte)0;
      byteArray0[5] = (byte)0;
      byteArray0[6] = (byte) (-128);
      byte byte2 = (byte)0;
      byteArray0[7] = (byte)0;
      // Undeclared exception!
      try { 
        TarUtils.verifyCheckSum(byteArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 148
         //
         verifyException("org.apache.commons.compress.archivers.tar.TarUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte) (-51);
      // Undeclared exception!
      try { 
        TarUtils.verifyCheckSum(byteArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 148
         //
         verifyException("org.apache.commons.compress.archivers.tar.TarUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byte byte0 = (byte) (-79);
      byteArray0[0] = (byte) (-79);
      byte byte1 = (byte)70;
      byteArray0[1] = (byte)70;
      // Undeclared exception!
      try { 
        TarUtils.verifyCheckSum(byteArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 148
         //
         verifyException("org.apache.commons.compress.archivers.tar.TarUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte) (-80);
      byteArray0[1] = (byte)98;
      byteArray0[2] = (byte)15;
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte)0;
      byteArray0[5] = (byte)0;
      byteArray0[6] = (byte)0;
      byteArray0[7] = (byte) (-44);
      byteArray0[8] = (byte)0;
      // Undeclared exception!
      try { 
        TarUtils.formatLongOctalBytes(255L, byteArray0, (byte) (-44), 631);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)55;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte) (-21);
      byte byte0 = (byte)10;
      byteArray0[3] = (byte)10;
      byteArray0[4] = (byte) (-93);
      byteArray0[5] = (byte)85;
      byteArray0[6] = (byte) (-67);
      byte byte1 = (byte)28;
      byteArray0[7] = (byte)28;
      // Undeclared exception!
      try { 
        TarUtils.formatCheckSumOctalBytes(2440L, byteArray0, 57, (-1238));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // 2440=4610 will not fit in octal number buffer of length -1240
         //
         verifyException("org.apache.commons.compress.archivers.tar.TarUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      int int0 = 9;
      int int1 = 0;
      // Undeclared exception!
      try { 
        TarUtils.parseOctalOrBinary(byteArray0, 9, 0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 9
         //
         verifyException("org.apache.commons.compress.archivers.tar.TarUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)7;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)4;
      byteArray0[3] = (byte)57;
      byteArray0[4] = (byte)48;
      byteArray0[5] = (byte)0;
      byteArray0[6] = (byte)68;
      byteArray0[7] = (byte) (-81);
      // Undeclared exception!
      try { 
        TarUtils.parseSparse(byteArray0, (-885));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -885
         //
         verifyException("org.apache.commons.compress.archivers.tar.TarUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      byte byte0 = (byte) (-26);
      byteArray0[0] = (byte) (-26);
      int int0 = (-1027);
      // Undeclared exception!
      try { 
        TarUtils.formatUnsignedOctalString((-1L), byteArray0, (-1027), (byte) (-26));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // -1=1777777777777777777777 will not fit in octal number buffer of length -26
         //
         verifyException("org.apache.commons.compress.archivers.tar.TarUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte) (-100);
      ZipEncoding zipEncoding0 = TarUtils.DEFAULT_ENCODING;
      String string0 = TarUtils.parseName(byteArray0, (int) (byte) (-100), (-5299), zipEncoding0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byte byte0 = (byte) (-120);
      byteArray0[0] = (byte) (-120);
      byte byte1 = (byte) (-80);
      byteArray0[1] = (byte) (-80);
      byte byte2 = (byte)114;
      byteArray0[2] = (byte)114;
      byte byte3 = (byte)91;
      byteArray0[3] = (byte)91;
      byteArray0[4] = (byte) (-113);
      byteArray0[5] = (byte)80;
      // Undeclared exception!
      try { 
        TarUtils.formatOctalBytes((-486L), byteArray0, (byte) (-80), (byte) (-113));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // -486=1777777777777777777032 will not fit in octal number buffer of length -115
         //
         verifyException("org.apache.commons.compress.archivers.tar.TarUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte) (-122);
      byteArray0[2] = (byte)112;
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte)7;
      byteArray0[5] = (byte) (-49);
      byteArray0[6] = (byte)7;
      // Undeclared exception!
      try { 
        TarUtils.parseOctal(byteArray0, (byte)112, (byte)7);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 112
         //
         verifyException("org.apache.commons.compress.archivers.tar.TarUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      byte byte0 = (byte)0;
      byteArray0[0] = (byte)0;
      // Undeclared exception!
      try { 
        TarUtils.formatLongOctalBytes((-3130L), byteArray0, 57, 57);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)52;
      byte byte0 = (byte)0;
      byteArray0[1] = (byte)0;
      ZipEncoding zipEncoding0 = TarUtils.DEFAULT_ENCODING;
      // Undeclared exception!
      try { 
        TarUtils.formatNameBytes("Y{;fuZ:>Nf.rO/;w", byteArray0, 98, 98, zipEncoding0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)55;
      byteArray0[1] = (byte)1;
      byteArray0[2] = (byte)12;
      byteArray0[3] = (byte) (-121);
      byteArray0[4] = (byte)42;
      byteArray0[5] = (byte)0;
      byteArray0[6] = (byte)90;
      byteArray0[7] = (byte)76;
      byteArray0[8] = (byte)62;
      // Undeclared exception!
      try { 
        TarUtils.parseOctalOrBinary(byteArray0, (-1461), 289);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1461
         //
         verifyException("org.apache.commons.compress.archivers.tar.TarUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)3;
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte)6;
      byteArray0[4] = (byte)34;
      byteArray0[5] = (byte)0;
      byteArray0[6] = (byte) (-60);
      byteArray0[7] = (byte)49;
      ZipEncoding zipEncoding0 = TarUtils.FALLBACK_ENCODING;
      // Undeclared exception!
      try { 
        TarUtils.parseName(byteArray0, 9, 5095, zipEncoding0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byte byte0 = (byte) (-1);
      byteArray0[0] = (byte) (-1);
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte) (-60);
      byte byte1 = (byte) (-103);
      byteArray0[3] = (byte) (-103);
      byteArray0[4] = (byte)11;
      ZipEncoding zipEncoding0 = TarUtils.FALLBACK_ENCODING;
      TarUtils.parseName(byteArray0, (int) (byte) (-103), (int) (byte)0, zipEncoding0);
      TarUtils.formatLongOctalOrBinaryBytes((byte) (-1), byteArray0, (byte)0, (byte)0);
      byte[] byteArray1 = new byte[3];
      byteArray1[0] = (byte) (-60);
      byteArray1[1] = (byte) (-1);
      byteArray1[2] = (byte) (-60);
      // Undeclared exception!
      try { 
        TarUtils.parseOctalOrBinary(byteArray1, (byte)11, (byte) (-60));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 11
         //
         verifyException("org.apache.commons.compress.archivers.tar.TarUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      Enumeration<FilterInputStream> enumeration0 = (Enumeration<FilterInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      LinkedList<TarArchiveStructSparse> linkedList0 = new LinkedList<TarArchiveStructSparse>();
      // Undeclared exception!
      try { 
        TarUtils.parsePaxHeaders(sequenceInputStream0, linkedList0, (Map<String, String>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.HashMap", e);
      }
  }

  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byte byte0 = (byte)10;
      byteArray0[0] = (byte)10;
      byteArray0[1] = (byte) (-104);
      byte byte1 = (byte) (-32);
      byteArray0[2] = (byte) (-32);
      // Undeclared exception!
      try { 
        TarUtils.parseName(byteArray0, 1351, (int) (byte)10);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte) (-76);
      byteArray0[1] = (byte)8;
      TarUtils.computeCheckSum(byteArray0);
      // Undeclared exception!
      try { 
        TarUtils.formatLongOctalOrBinaryBytes((byte)8, byteArray0, (-3819), 5824);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      byte byte0 = (byte)55;
      byteArray0[0] = (byte)55;
      // Undeclared exception!
      try { 
        TarUtils.parseName(byteArray0, (int) (byte)55, (int) (byte)55);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)36;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte) (-68);
      byteArray0[5] = (byte)0;
      byteArray0[6] = (byte)73;
      byteArray0[7] = (byte)0;
      byteArray0[8] = (byte)0;
      // Undeclared exception!
      try { 
        TarUtils.formatNameBytes("cS<+^xt!@ypue", byteArray0, (int) (byte)0, (int) (byte)73);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      int int0 = 974;
      PipedInputStream pipedInputStream0 = new PipedInputStream(974);
      try { 
        TarUtils.parsePAX1XSparseHeaders(pipedInputStream0, 974);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)123;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte)110;
      byteArray0[4] = (byte)103;
      byteArray0[5] = (byte) (-12);
      byteArray0[6] = (byte) (-7);
      byteArray0[7] = (byte)1;
      long long0 = TarUtils.computeCheckSum(byteArray0);
      assertEquals(830L, long0);
  }

  @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      DataInputStream dataInputStream0 = new DataInputStream((InputStream) null);
      // Undeclared exception!
      try { 
        dataInputStream0.readUTF();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.DataInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      DataInputStream dataInputStream0 = new DataInputStream((InputStream) null);
      String string0 = "Insensitive";
      // Undeclared exception!
      try { 
        TarUtils.parsePAX01SparseHeaders("Insensitive");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"Insensitive\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  @Test(timeout = 4000)
  public void test152()  throws Throwable  {
      // Undeclared exception!
      try { 
        TarUtils.parsePAX01SparseHeaders("N%3~}%egjKK:W");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"N%3~}%egjKK:W\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  @Test(timeout = 4000)
  public void test153()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byte byte0 = (byte)0;
      byteArray0[0] = (byte)0;
      byte byte1 = (byte)6;
      byteArray0[1] = (byte)6;
      byte byte2 = (byte)51;
      byteArray0[2] = (byte)51;
      TarUtils.computeCheckSum(byteArray0);
      InputStream inputStream0 = null;
      int int0 = (-747);
      PushbackInputStream pushbackInputStream0 = null;
      try {
        pushbackInputStream0 = new PushbackInputStream((InputStream) null, (-747));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // size <= 0
         //
         verifyException("java.io.PushbackInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test154()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)92;
      // Undeclared exception!
      try { 
        TarUtils.parseName(byteArray0, (int) (byte)92, 156);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test155()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte) (-128);
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)104;
      byteArray0[3] = (byte)119;
      byteArray0[4] = (byte)0;
      // Undeclared exception!
      try { 
        TarUtils.formatLongOctalBytes((-2731L), byteArray0, 1354, 5070);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test156()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byte byte0 = (byte) (-31);
      byteArray0[0] = (byte) (-31);
      byte byte1 = (byte)0;
      byteArray0[1] = (byte)0;
      // Undeclared exception!
      try { 
        TarUtils.parseOctalOrBinary(byteArray0, (byte) (-31), 1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -31
         //
         verifyException("org.apache.commons.compress.archivers.tar.TarUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test157()  throws Throwable  {
      byte[] byteArray0 = null;
      int int0 = 0;
      int int1 = (-2182);
      ZipEncoding zipEncoding0 = TarUtils.DEFAULT_ENCODING;
      // Undeclared exception!
      try { 
        TarUtils.formatNameBytes("", (byte[]) null, 0, (-2182), zipEncoding0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test158()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      byte byte0 = (byte) (-78);
      byteArray0[0] = (byte) (-78);
      // Undeclared exception!
      try { 
        TarUtils.parseOctalOrBinary(byteArray0, (byte) (-78), 2338);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -78
         //
         verifyException("org.apache.commons.compress.archivers.tar.TarUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test159()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)96;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)52;
      TarUtils.parseName(byteArray0, (int) (byte)52, 0);
      // Undeclared exception!
      try { 
        TarUtils.formatLongOctalOrBinaryBytes(8589934591L, byteArray0, (byte)96, (byte)96);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test160()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)2;
      byte byte0 = (byte) (-106);
      byteArray0[1] = (byte) (-106);
      byteArray0[2] = (byte)15;
      byteArray0[3] = (byte)39;
      byte byte1 = (byte)5;
      byteArray0[4] = (byte)5;
      byte byte2 = (byte) (-61);
      byteArray0[5] = (byte) (-61);
      // Undeclared exception!
      try { 
        TarUtils.formatLongOctalBytes(3136L, byteArray0, 1921, (byte)15);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test161()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte)4;
      byteArray0[4] = (byte)43;
      byteArray0[5] = (byte) (-35);
      byteArray0[6] = (byte) (-128);
      byteArray0[7] = (byte) (-112);
      // Undeclared exception!
      try { 
        TarUtils.parseSparse(byteArray0, 1356);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1356
         //
         verifyException("org.apache.commons.compress.archivers.tar.TarUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test162()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte) (-62);
      byteArray0[1] = (byte)45;
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte)32;
      byteArray0[4] = (byte)90;
      byteArray0[5] = (byte) (-1);
      byteArray0[6] = (byte) (-37);
      byteArray0[7] = (byte)88;
      byteArray0[8] = (byte) (-4);
      // Undeclared exception!
      try { 
        TarUtils.verifyCheckSum(byteArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 148
         //
         verifyException("org.apache.commons.compress.archivers.tar.TarUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test163()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)12;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte) (-19);
      byteArray0[3] = (byte)32;
      byteArray0[4] = (byte)86;
      // Undeclared exception!
      try { 
        TarUtils.parseOctal(byteArray0, (byte)0, 0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Length 0 must be at least 2
         //
         verifyException("org.apache.commons.compress.archivers.tar.TarUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test164()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)8;
      byteArray0[1] = (byte)61;
      byteArray0[2] = (byte) (-91);
      byteArray0[3] = (byte)9;
      byteArray0[4] = (byte)0;
      byteArray0[5] = (byte) (-10);
      byteArray0[6] = (byte) (-80);
      byteArray0[7] = (byte)124;
      byteArray0[8] = (byte)0;
      // Undeclared exception!
      try { 
        TarUtils.formatOctalBytes((-167L), byteArray0, 0, (byte)124);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test165()  throws Throwable  {
      MockFileInputStream mockFileInputStream0 = null;
      try {
        mockFileInputStream0 = new MockFileInputStream("");
        fail("Expecting exception: FileNotFoundException");
      
      } catch(Throwable e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test166()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)75;
      byteArray0[1] = (byte)27;
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte)26;
      byteArray0[4] = (byte)61;
      byteArray0[5] = (byte)2;
      byteArray0[6] = (byte) (-123);
      byteArray0[7] = (byte)0;
      byteArray0[8] = (byte)85;
      TarUtils.parseName(byteArray0, (int) (byte) (-123), (-3542));
      // Undeclared exception!
      try { 
        TarUtils.parseOctal(byteArray0, (byte)75, 46);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 75
         //
         verifyException("org.apache.commons.compress.archivers.tar.TarUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test167()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)67;
      byteArray0[1] = (byte) (-1);
      byteArray0[2] = (byte) (-118);
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte)54;
      byteArray0[5] = (byte) (-92);
      byteArray0[6] = (byte)125;
      // Undeclared exception!
      try { 
        TarUtils.formatUnsignedOctalString(0L, byteArray0, (byte)67, (byte)125);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test168()  throws Throwable  {
      int int0 = 667;
      ByteArrayInputStream byteArrayInputStream0 = null;
      try {
        byteArrayInputStream0 = new ByteArrayInputStream((byte[]) null, 667, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test169()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte) (-2);
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)5;
      byteArray0[3] = (byte) (-42);
      byteArray0[4] = (byte)0;
      byteArray0[5] = (byte)40;
      byte byte0 = (byte)0;
      byteArray0[6] = (byte)0;
      // Undeclared exception!
      try { 
        TarUtils.parseSparse(byteArray0, (byte)5);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 16
         //
         verifyException("org.apache.commons.compress.archivers.tar.TarUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test170()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      int int0 = (-277);
      // Undeclared exception!
      try { 
        TarUtils.formatLongOctalOrBinaryBytes(1L, byteArray0, (-277), (-1));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // 1=1 will not fit in octal number buffer of length -2
         //
         verifyException("org.apache.commons.compress.archivers.tar.TarUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test171()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      int int0 = 2506;
      // Undeclared exception!
      try { 
        TarUtils.parseOctalOrBinary(byteArray0, 2506, 2506);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2506
         //
         verifyException("org.apache.commons.compress.archivers.tar.TarUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test172()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byte byte0 = (byte) (-35);
      byteArray0[0] = (byte) (-35);
      byte byte1 = (byte)65;
      byteArray0[1] = (byte)65;
      byte byte2 = (byte)106;
      byteArray0[2] = (byte)106;
      byte byte3 = (byte)0;
      byteArray0[3] = (byte)0;
      byte byte4 = (byte) (-127);
      byteArray0[4] = (byte) (-127);
      int int0 = 65;
      // Undeclared exception!
      try { 
        TarUtils.formatNameBytes("MYC", byteArray0, 65, (int) (byte)65);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test173()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      int int0 = 9;
      // Undeclared exception!
      try { 
        TarUtils.parseBoolean(byteArray0, 9);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 9
         //
         verifyException("org.apache.commons.compress.archivers.tar.TarUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test174()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)57;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)2;
      byteArray0[3] = (byte)0;
      // Undeclared exception!
      try { 
        TarUtils.formatUnsignedOctalString(2097151L, byteArray0, (byte)2, (-959));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // 2097151=7777777 will not fit in octal number buffer of length -959
         //
         verifyException("org.apache.commons.compress.archivers.tar.TarUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test175()  throws Throwable  {
      PipedInputStream pipedInputStream0 = null;
      try {
        pipedInputStream0 = new PipedInputStream((-1852));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Pipe Size <= 0
         //
         verifyException("java.io.PipedInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test176()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byte byte0 = (byte)3;
      byteArray0[0] = (byte)3;
      byteArray0[1] = (byte)57;
      byteArray0[2] = (byte)85;
      byteArray0[3] = (byte)0;
      byte byte1 = (byte)0;
      byteArray0[4] = (byte)0;
      byteArray0[5] = (byte)0;
      byte byte2 = (byte) (-100);
      byteArray0[6] = (byte) (-100);
      byteArray0[7] = (byte)124;
      TarUtils.computeCheckSum(byteArray0);
      String string0 = "~zT]\"ZRR6~6g;xy&";
      // Undeclared exception!
      try { 
        TarUtils.formatNameBytes("~zT]\"ZRR6~6g;xy&", byteArray0, (int) (byte)124, 55);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test177()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)112;
      byteArray0[1] = (byte)85;
      byteArray0[2] = (byte)99;
      byteArray0[3] = (byte)126;
      byteArray0[4] = (byte)0;
      byteArray0[5] = (byte) (-67);
      byteArray0[6] = (byte)0;
      byteArray0[7] = (byte) (-122);
      byteArray0[8] = (byte) (-52);
      // Undeclared exception!
      try { 
        TarUtils.parseName(byteArray0, (int) (byte)99, (int) (byte)85);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test178()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)63;
      byteArray0[1] = (byte) (-49);
      byteArray0[2] = (byte)8;
      // Undeclared exception!
      try { 
        TarUtils.parseOctal(byteArray0, (byte) (-49), 12);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -49
         //
         verifyException("org.apache.commons.compress.archivers.tar.TarUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test179()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)17;
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte)0;
      byteArray0[5] = (byte) (-32);
      byteArray0[6] = (byte)10;
      // Undeclared exception!
      try { 
        TarUtils.formatLongOctalOrBinaryBytes(179L, byteArray0, 0, 786);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test180()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)57;
      int int0 = 0;
      // Undeclared exception!
      try { 
        TarUtils.formatOctalBytes(1243L, byteArray0, 0, 0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // 1243=2333 will not fit in octal number buffer of length -2
         //
         verifyException("org.apache.commons.compress.archivers.tar.TarUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test181()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)124;
      byteArray0[2] = (byte) (-24);
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte) (-113);
      byteArray0[5] = (byte)0;
      byteArray0[6] = (byte) (-16);
      byteArray0[7] = (byte) (-74);
      TarUtils.computeCheckSum(byteArray0);
      // Undeclared exception!
      try { 
        TarUtils.formatLongOctalBytes((-2474L), byteArray0, (byte) (-16), (byte)124);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test182()  throws Throwable  {
      Enumeration<FilterInputStream> enumeration0 = (Enumeration<FilterInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(sequenceInputStream0);
      try { 
        TarUtils.parsePAX1XSparseHeaders(pushbackInputStream0, 1550);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Unexpected EOF when reading parse information of 1.X PAX format
         //
         verifyException("org.apache.commons.compress.archivers.tar.TarUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test183()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)111;
      byteArray0[2] = (byte) (-100);
      byteArray0[3] = (byte) (-16);
      byteArray0[4] = (byte)9;
      ZipEncoding zipEncoding0 = TarUtils.DEFAULT_ENCODING;
      String string0 = TarUtils.parseName(byteArray0, 0, 0, zipEncoding0);
      assertEquals("", string0);
  }
}
