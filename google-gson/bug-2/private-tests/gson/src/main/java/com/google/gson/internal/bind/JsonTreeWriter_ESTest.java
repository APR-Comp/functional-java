/*
 * This file was automatically generated by EvoSuite
 * Sat Nov 25 13:49:43 GMT 2023
 */

package com.google.gson.internal.bind;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.google.gson.FormattingStyle;
import com.google.gson.JsonElement;
import com.google.gson.JsonNull;
import com.google.gson.JsonPrimitive;
import com.google.gson.Strictness;
import com.google.gson.internal.bind.JsonTreeWriter;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class JsonTreeWriter_ESTest extends JsonTreeWriter_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      JsonTreeWriter jsonTreeWriter0 = new JsonTreeWriter();
      jsonTreeWriter0.flush();
      jsonTreeWriter0.setHtmlSafe(true);
      jsonTreeWriter0.beginObject();
      jsonTreeWriter0.name("com.google.gson.FormattingStyle");
      // Undeclared exception!
      try { 
        jsonTreeWriter0.endArray();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.gson.internal.bind.JsonTreeWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      JsonTreeWriter jsonTreeWriter0 = new JsonTreeWriter();
      long long0 = (-3743L);
      Long long1 = new Long((-3743L));
      jsonTreeWriter0.value((Number) long1);
      boolean boolean0 = true;
      Strictness strictness0 = Strictness.LENIENT;
      jsonTreeWriter0.setStrictness(strictness0);
      jsonTreeWriter0.beginObject();
      Strictness strictness1 = Strictness.LEGACY_STRICT;
      String string0 = "";
      jsonTreeWriter0.name("");
      // Undeclared exception!
      try { 
        jsonTreeWriter0.name("0d*,PY\"[[\"1");
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Did not expect a name
         //
         verifyException("com.google.gson.internal.bind.JsonTreeWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      JsonTreeWriter jsonTreeWriter0 = new JsonTreeWriter();
      JsonWriter jsonWriter0 = jsonTreeWriter0.beginObject();
      assertTrue(jsonWriter0.getSerializeNulls());
      
      jsonTreeWriter0.endObject();
      jsonTreeWriter0.get();
      jsonTreeWriter0.setSerializeNulls(true);
      jsonTreeWriter0.beginObject();
      // Undeclared exception!
      try { 
        jsonTreeWriter0.beginArray();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.gson.internal.bind.JsonTreeWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      JsonTreeWriter jsonTreeWriter0 = new JsonTreeWriter();
      Boolean boolean0 = Boolean.TRUE;
      jsonTreeWriter0.value(boolean0);
      jsonTreeWriter0.value(962.2739F);
      jsonTreeWriter0.beginObject();
      boolean boolean1 = true;
      jsonTreeWriter0.name("");
      jsonTreeWriter0.setHtmlSafe(true);
      // Undeclared exception!
      try { 
        jsonTreeWriter0.name("r`5Skx6-i<y6h|x");
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Did not expect a name
         //
         verifyException("com.google.gson.internal.bind.JsonTreeWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      JsonTreeWriter jsonTreeWriter0 = new JsonTreeWriter();
      JsonWriter jsonWriter0 = jsonTreeWriter0.beginArray();
      assertSame(jsonWriter0, jsonTreeWriter0);
      
      jsonTreeWriter0.endArray();
      jsonTreeWriter0.get();
      jsonTreeWriter0.value((-254.4549));
      jsonTreeWriter0.value((-254.4549));
      Boolean boolean0 = Boolean.FALSE;
      Long long0 = new Long(0L);
      jsonTreeWriter0.value((Number) long0);
      jsonTreeWriter0.value(boolean0);
      jsonTreeWriter0.value("#m[15`iFZXf4vFN0?T");
      Boolean boolean1 = new Boolean(true);
      jsonTreeWriter0.value(boolean1);
      Double double0 = new Double((-1.0));
      jsonTreeWriter0.value((Number) double0);
      // Undeclared exception!
      try { 
        jsonTreeWriter0.endArray();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.gson.internal.bind.JsonTreeWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      JsonTreeWriter jsonTreeWriter0 = new JsonTreeWriter();
      boolean boolean0 = false;
      jsonTreeWriter0.beginArray();
      jsonTreeWriter0.setSerializeNulls(true);
      jsonTreeWriter0.beginObject();
      jsonTreeWriter0.setHtmlSafe(false);
      jsonTreeWriter0.endObject();
      jsonTreeWriter0.value(0.0);
      long long0 = 0L;
      String string0 = "z";
      // Undeclared exception!
      try { 
        jsonTreeWriter0.name("z");
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Please begin an object before writing a name.
         //
         verifyException("com.google.gson.internal.bind.JsonTreeWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      JsonTreeWriter jsonTreeWriter0 = new JsonTreeWriter();
      jsonTreeWriter0.value((-1.0));
      Strictness strictness0 = Strictness.LENIENT;
      jsonTreeWriter0.setStrictness(strictness0);
      long long0 = 0L;
      jsonTreeWriter0.value(0L);
      jsonTreeWriter0.value(0L);
      Float float0 = new Float((double) 0L);
      jsonTreeWriter0.value((Number) float0);
      jsonTreeWriter0.nullValue();
      jsonTreeWriter0.value((-1.0F));
      String string0 = "{g*v{=Qv[";
      jsonTreeWriter0.value("{g*v{=Qv[");
      // Undeclared exception!
      try { 
        jsonTreeWriter0.endArray();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.gson.internal.bind.JsonTreeWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      JsonTreeWriter jsonTreeWriter0 = new JsonTreeWriter();
      jsonTreeWriter0.setHtmlSafe(true);
      jsonTreeWriter0.setIndent("");
      jsonTreeWriter0.beginArray();
      Strictness strictness0 = Strictness.STRICT;
      jsonTreeWriter0.setStrictness(strictness0);
      float float0 = 1.0F;
      jsonTreeWriter0.endArray();
      Boolean boolean0 = null;
      jsonTreeWriter0.close();
      // Undeclared exception!
      try { 
        jsonTreeWriter0.get();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Expected one JSON element but was [\"closed\"]
         //
         verifyException("com.google.gson.internal.bind.JsonTreeWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      JsonTreeWriter jsonTreeWriter0 = new JsonTreeWriter();
      boolean boolean0 = false;
      jsonTreeWriter0.setSerializeNulls(false);
      Boolean boolean1 = new Boolean("l &");
      Strictness strictness0 = Strictness.LEGACY_STRICT;
      jsonTreeWriter0.value("l &");
      jsonTreeWriter0.setStrictness(strictness0);
      jsonTreeWriter0.beginObject();
      jsonTreeWriter0.endObject();
      jsonTreeWriter0.value(boolean1);
      jsonTreeWriter0.setSerializeNulls(false);
      Boolean boolean2 = Boolean.valueOf("-I/");
      jsonTreeWriter0.value(boolean2);
      jsonTreeWriter0.value("j!99{'p");
      // Undeclared exception!
      try { 
        jsonTreeWriter0.jsonValue("l &");
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.gson.internal.bind.JsonTreeWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      JsonTreeWriter jsonTreeWriter0 = new JsonTreeWriter();
      jsonTreeWriter0.setHtmlSafe(true);
      jsonTreeWriter0.beginObject();
      JsonWriter jsonWriter0 = jsonTreeWriter0.endObject();
      JsonWriter jsonWriter1 = jsonTreeWriter0.value((-1L));
      assertSame(jsonWriter1, jsonWriter0);
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      JsonTreeWriter jsonTreeWriter0 = new JsonTreeWriter();
      Strictness strictness0 = Strictness.LENIENT;
      Boolean boolean0 = new Boolean(true);
      jsonTreeWriter0.value(boolean0);
      jsonTreeWriter0.setStrictness(strictness0);
      jsonTreeWriter0.setHtmlSafe(true);
      jsonTreeWriter0.value(false);
      jsonTreeWriter0.beginArray();
      Boolean boolean1 = Boolean.TRUE;
      JsonWriter jsonWriter0 = jsonTreeWriter0.value(boolean1);
      assertEquals(Strictness.LENIENT, jsonWriter0.getStrictness());
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      JsonTreeWriter jsonTreeWriter0 = new JsonTreeWriter();
      jsonTreeWriter0.beginObject();
      jsonTreeWriter0.setHtmlSafe(true);
      jsonTreeWriter0.name("");
      try { 
        jsonTreeWriter0.close();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Incomplete document
         //
         verifyException("com.google.gson.internal.bind.JsonTreeWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      JsonTreeWriter jsonTreeWriter0 = new JsonTreeWriter();
      jsonTreeWriter0.flush();
      jsonTreeWriter0.beginArray();
      jsonTreeWriter0.setSerializeNulls(false);
      jsonTreeWriter0.beginArray();
      // Undeclared exception!
      try { 
        jsonTreeWriter0.jsonValue(":r~0hqcC<WK<_je>n");
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.gson.internal.bind.JsonTreeWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      JsonTreeWriter jsonTreeWriter0 = new JsonTreeWriter();
      Boolean boolean0 = Boolean.valueOf(true);
      jsonTreeWriter0.setSerializeNulls(false);
      Float float0 = new Float(0.0);
      jsonTreeWriter0.value((Number) float0);
      jsonTreeWriter0.value(boolean0);
      String string0 = "\\f";
      jsonTreeWriter0.beginObject();
      // Undeclared exception!
      try { 
        jsonTreeWriter0.value("\f");
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.gson.internal.bind.JsonTreeWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      JsonTreeWriter jsonTreeWriter0 = new JsonTreeWriter();
      boolean boolean0 = true;
      jsonTreeWriter0.setHtmlSafe(true);
      jsonTreeWriter0.value(false);
      float float0 = (-1048.283F);
      jsonTreeWriter0.value((double) (-1048.283F));
      jsonTreeWriter0.value((-1048.283F));
      // Undeclared exception!
      try { 
        jsonTreeWriter0.name("String value is empty");
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Did not expect a name
         //
         verifyException("com.google.gson.internal.bind.JsonTreeWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      JsonTreeWriter jsonTreeWriter0 = new JsonTreeWriter();
      jsonTreeWriter0.beginObject();
      jsonTreeWriter0.endObject();
      jsonTreeWriter0.setHtmlSafe(false);
      jsonTreeWriter0.setHtmlSafe(true);
      jsonTreeWriter0.value((-316L));
      jsonTreeWriter0.setHtmlSafe(true);
      jsonTreeWriter0.nullValue();
      // Undeclared exception!
      try { 
        jsonTreeWriter0.endObject();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.gson.internal.bind.JsonTreeWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      JsonTreeWriter jsonTreeWriter0 = new JsonTreeWriter();
      long long0 = 0L;
      jsonTreeWriter0.value(0L);
      jsonTreeWriter0.beginObject();
      jsonTreeWriter0.endObject();
      jsonTreeWriter0.value(1192L);
      Double double0 = new Double(0.0);
      Boolean boolean0 = new Boolean(false);
      jsonTreeWriter0.value(boolean0);
      jsonTreeWriter0.value((Number) double0);
      String string0 = "JSON forbids NaN and infinities: ";
      jsonTreeWriter0.nullValue();
      jsonTreeWriter0.value("JSON forbids NaN and infinities: ");
      jsonTreeWriter0.value((Number) double0);
      jsonTreeWriter0.value((-398L));
      // Undeclared exception!
      try { 
        jsonTreeWriter0.endArray();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.gson.internal.bind.JsonTreeWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      JsonTreeWriter jsonTreeWriter0 = new JsonTreeWriter();
      jsonTreeWriter0.setSerializeNulls(false);
      jsonTreeWriter0.setSerializeNulls(false);
      Boolean boolean0 = Boolean.TRUE;
      jsonTreeWriter0.value(boolean0);
      jsonTreeWriter0.nullValue();
      JsonWriter jsonWriter0 = jsonTreeWriter0.value(true);
      assertSame(jsonWriter0, jsonTreeWriter0);
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      JsonTreeWriter jsonTreeWriter0 = new JsonTreeWriter();
      boolean boolean0 = true;
      jsonTreeWriter0.setHtmlSafe(true);
      jsonTreeWriter0.setHtmlSafe(true);
      jsonTreeWriter0.close();
      // Undeclared exception!
      try { 
        jsonTreeWriter0.value(0.0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.gson.internal.bind.JsonTreeWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      JsonTreeWriter jsonTreeWriter0 = new JsonTreeWriter();
      Strictness strictness0 = Strictness.LENIENT;
      jsonTreeWriter0.setStrictness(strictness0);
      jsonTreeWriter0.nullValue();
      // Undeclared exception!
      try { 
        jsonTreeWriter0.endObject();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.gson.internal.bind.JsonTreeWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      JsonTreeWriter jsonTreeWriter0 = new JsonTreeWriter();
      jsonTreeWriter0.setSerializeNulls(false);
      jsonTreeWriter0.value((-3322.52367));
      jsonTreeWriter0.value(false);
      Strictness strictness0 = Strictness.LEGACY_STRICT;
      jsonTreeWriter0.setStrictness(strictness0);
      JsonWriter jsonWriter0 = jsonTreeWriter0.value((-1520.8710477872776));
      assertSame(jsonWriter0, jsonTreeWriter0);
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      JsonTreeWriter jsonTreeWriter0 = new JsonTreeWriter();
      jsonTreeWriter0.beginArray();
      jsonTreeWriter0.setHtmlSafe(true);
      float float0 = 1.0F;
      Float float1 = Float.valueOf(1.0F);
      String string0 = "";
      jsonTreeWriter0.value("");
      jsonTreeWriter0.value((Number) float1);
      jsonTreeWriter0.beginArray();
      jsonTreeWriter0.value(false);
      // Undeclared exception!
      try { 
        jsonTreeWriter0.jsonValue("");
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.gson.internal.bind.JsonTreeWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      JsonTreeWriter jsonTreeWriter0 = new JsonTreeWriter();
      jsonTreeWriter0.value(0.0F);
      JsonWriter jsonWriter0 = jsonTreeWriter0.nullValue();
      assertEquals(Strictness.LEGACY_STRICT, jsonWriter0.getStrictness());
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      JsonTreeWriter jsonTreeWriter0 = new JsonTreeWriter();
      Integer integer0 = new Integer((-1));
      jsonTreeWriter0.value((Number) integer0);
      jsonTreeWriter0.value((Boolean) null);
      jsonTreeWriter0.setSerializeNulls(false);
      jsonTreeWriter0.value(1332L);
      jsonTreeWriter0.close();
      jsonTreeWriter0.setHtmlSafe(false);
      // Undeclared exception!
      try { 
        jsonTreeWriter0.name("j@&eEhO g(Vs");
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Please begin an object before writing a name.
         //
         verifyException("com.google.gson.internal.bind.JsonTreeWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      JsonTreeWriter jsonTreeWriter0 = new JsonTreeWriter();
      Strictness strictness0 = Strictness.LEGACY_STRICT;
      jsonTreeWriter0.setStrictness(strictness0);
      jsonTreeWriter0.value("Incomplete document");
      Strictness strictness1 = Strictness.LEGACY_STRICT;
      Number number0 = null;
      jsonTreeWriter0.value((Number) null);
      jsonTreeWriter0.setStrictness(strictness1);
      boolean boolean0 = false;
      jsonTreeWriter0.get();
      jsonTreeWriter0.beginObject();
      // Undeclared exception!
      try { 
        jsonTreeWriter0.value("Incomplete document");
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.gson.internal.bind.JsonTreeWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      JsonTreeWriter jsonTreeWriter0 = new JsonTreeWriter();
      FormattingStyle formattingStyle0 = FormattingStyle.PRETTY;
      jsonTreeWriter0.setFormattingStyle(formattingStyle0);
      jsonTreeWriter0.value("");
      jsonTreeWriter0.flush();
      JsonElement jsonElement0 = jsonTreeWriter0.get();
      assertFalse(jsonElement0.isJsonArray());
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      JsonTreeWriter jsonTreeWriter0 = new JsonTreeWriter();
      jsonTreeWriter0.get();
      jsonTreeWriter0.beginObject();
      jsonTreeWriter0.setSerializeNulls(true);
      jsonTreeWriter0.setIndent("");
      // Undeclared exception!
      try { 
        jsonTreeWriter0.nullValue();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.gson.internal.bind.JsonTreeWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      JsonTreeWriter jsonTreeWriter0 = new JsonTreeWriter();
      jsonTreeWriter0.beginObject();
      // Undeclared exception!
      try { 
        jsonTreeWriter0.value(6372.0F);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.gson.internal.bind.JsonTreeWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      JsonTreeWriter jsonTreeWriter0 = new JsonTreeWriter();
      jsonTreeWriter0.value((String) null);
      jsonTreeWriter0.get();
      jsonTreeWriter0.value("Numeric values must be finite, but was ");
      jsonTreeWriter0.beginObject();
      boolean boolean0 = false;
      int int0 = (-4107);
      Integer integer0 = new Integer((-4107));
      // Undeclared exception!
      try { 
        jsonTreeWriter0.value((Number) integer0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.gson.internal.bind.JsonTreeWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      JsonTreeWriter jsonTreeWriter0 = new JsonTreeWriter();
      Number number0 = null;
      jsonTreeWriter0.value((Number) null);
      String string0 = "";
      jsonTreeWriter0.beginObject();
      jsonTreeWriter0.setIndent("");
      // Undeclared exception!
      try { 
        jsonTreeWriter0.beginObject();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.gson.internal.bind.JsonTreeWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      JsonTreeWriter jsonTreeWriter0 = new JsonTreeWriter();
      jsonTreeWriter0.get();
      String string0 = "{fpa";
      jsonTreeWriter0.value("{fpa");
      jsonTreeWriter0.close();
      // Undeclared exception!
      try { 
        jsonTreeWriter0.value(true);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.gson.internal.bind.JsonTreeWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      JsonTreeWriter jsonTreeWriter0 = new JsonTreeWriter();
      jsonTreeWriter0.value((String) null);
      boolean boolean0 = true;
      jsonTreeWriter0.setHtmlSafe(true);
      jsonTreeWriter0.beginObject();
      double double0 = 1.0;
      String string0 = "qN[ER`9Z<H6Y!6/-";
      // Undeclared exception!
      try { 
        jsonTreeWriter0.beginArray();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.gson.internal.bind.JsonTreeWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      JsonTreeWriter jsonTreeWriter0 = new JsonTreeWriter();
      boolean boolean0 = false;
      Boolean boolean1 = new Boolean(false);
      jsonTreeWriter0.value(boolean1);
      jsonTreeWriter0.beginArray();
      jsonTreeWriter0.beginArray();
      // Undeclared exception!
      try { 
        jsonTreeWriter0.get();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Expected one JSON element but was [[[]], []]
         //
         verifyException("com.google.gson.internal.bind.JsonTreeWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      JsonTreeWriter jsonTreeWriter0 = new JsonTreeWriter();
      jsonTreeWriter0.setIndent("");
      jsonTreeWriter0.close();
      // Undeclared exception!
      try { 
        jsonTreeWriter0.value(0L);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.gson.internal.bind.JsonTreeWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      JsonTreeWriter jsonTreeWriter0 = new JsonTreeWriter();
      // Undeclared exception!
      try { 
        jsonTreeWriter0.name((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // name == null
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      JsonTreeWriter jsonTreeWriter0 = new JsonTreeWriter();
      String string0 = "com.google.gson.Strictness";
      jsonTreeWriter0.value("com.google.gson.Strictness");
      jsonTreeWriter0.close();
      Boolean boolean0 = Boolean.valueOf(true);
      // Undeclared exception!
      try { 
        jsonTreeWriter0.value(boolean0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.gson.internal.bind.JsonTreeWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      JsonTreeWriter jsonTreeWriter0 = new JsonTreeWriter();
      // Undeclared exception!
      try { 
        jsonTreeWriter0.endArray();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.gson.internal.bind.JsonTreeWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      JsonTreeWriter jsonTreeWriter0 = new JsonTreeWriter();
      String string0 = "";
      boolean boolean0 = true;
      // Undeclared exception!
      try { 
        jsonTreeWriter0.name("");
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Did not expect a name
         //
         verifyException("com.google.gson.internal.bind.JsonTreeWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      JsonTreeWriter jsonTreeWriter0 = new JsonTreeWriter();
      String string0 = "\\Ifw0=;\"(r$1'/=9+a";
      jsonTreeWriter0.value("Ifw0=;\"(r$1'/=9+a");
      jsonTreeWriter0.close();
      boolean boolean0 = false;
      try { 
        jsonTreeWriter0.close();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Incomplete document
         //
         verifyException("com.google.gson.internal.bind.JsonTreeWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      JsonTreeWriter jsonTreeWriter0 = new JsonTreeWriter();
      // Undeclared exception!
      try { 
        jsonTreeWriter0.endObject();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.gson.internal.bind.JsonTreeWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      JsonTreeWriter jsonTreeWriter0 = new JsonTreeWriter();
      Strictness strictness0 = Strictness.LEGACY_STRICT;
      jsonTreeWriter0.get();
      jsonTreeWriter0.get();
      jsonTreeWriter0.value("");
      jsonTreeWriter0.setStrictness(strictness0);
      Strictness strictness1 = Strictness.STRICT;
      jsonTreeWriter0.close();
      // Undeclared exception!
      try { 
        jsonTreeWriter0.value("");
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.gson.internal.bind.JsonTreeWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      JsonTreeWriter jsonTreeWriter0 = new JsonTreeWriter();
      String string0 = "A+{r+{lwM%V< z)";
      // Undeclared exception!
      try { 
        jsonTreeWriter0.jsonValue("A+{r+{lwM%V< z)");
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.gson.internal.bind.JsonTreeWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      JsonTreeWriter jsonTreeWriter0 = new JsonTreeWriter();
      jsonTreeWriter0.beginArray();
      Strictness strictness0 = Strictness.LENIENT;
      jsonTreeWriter0.setStrictness(strictness0);
      Boolean boolean0 = Boolean.TRUE;
      Strictness strictness1 = Strictness.STRICT;
      jsonTreeWriter0.setStrictness(strictness1);
      jsonTreeWriter0.value(22.9F);
      jsonTreeWriter0.value(boolean0);
      jsonTreeWriter0.nullValue();
      jsonTreeWriter0.value(boolean0);
      // Undeclared exception!
      try { 
        jsonTreeWriter0.endObject();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.gson.internal.bind.JsonTreeWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      JsonTreeWriter jsonTreeWriter0 = new JsonTreeWriter();
      long long0 = (-223L);
      jsonTreeWriter0.value((-223L));
      jsonTreeWriter0.beginObject();
      // Undeclared exception!
      try { 
        jsonTreeWriter0.beginObject();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.gson.internal.bind.JsonTreeWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      JsonTreeWriter jsonTreeWriter0 = new JsonTreeWriter();
      FormattingStyle formattingStyle0 = FormattingStyle.COMPACT;
      // Undeclared exception!
      try { 
        formattingStyle0.withNewline(";JTZ%#P`0}R");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Only combinations of \\n and \\r are allowed in newline.
         //
         verifyException("com.google.gson.FormattingStyle", e);
      }
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      Double double0 = new Double(0.0);
      assertEquals(0.0, (double)double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      JsonTreeWriter jsonTreeWriter0 = new JsonTreeWriter();
      jsonTreeWriter0.value(0.0F);
      jsonTreeWriter0.beginObject();
      String string0 = "Please begin an object before writing a name.";
      String string1 = "com.google.gson.JsonObject";
      Strictness strictness0 = Strictness.LEGACY_STRICT;
      jsonTreeWriter0.setStrictness(strictness0);
      jsonTreeWriter0.name("com.google.gson.JsonObject");
      jsonTreeWriter0.value(0.0);
      // Undeclared exception!
      try { 
        jsonTreeWriter0.jsonValue("Please begin an object before writing a name.");
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.gson.internal.bind.JsonTreeWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      JsonTreeWriter jsonTreeWriter0 = new JsonTreeWriter();
      String string0 = "com.google.gson.JsonArray";
      // Undeclared exception!
      try { 
        jsonTreeWriter0.endArray();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.gson.internal.bind.JsonTreeWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      JsonTreeWriter jsonTreeWriter0 = new JsonTreeWriter();
      String string0 = "<VFL)?$";
      // Undeclared exception!
      try { 
        jsonTreeWriter0.setIndent("<VFL)?$");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Only combinations of spaces and tabs are allowed in indent.
         //
         verifyException("com.google.gson.FormattingStyle", e);
      }
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      JsonTreeWriter jsonTreeWriter0 = new JsonTreeWriter();
      jsonTreeWriter0.beginArray();
      boolean boolean0 = false;
      // Undeclared exception!
      try { 
        jsonTreeWriter0.setIndent("Not a JSON Array: ");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Only combinations of spaces and tabs are allowed in indent.
         //
         verifyException("com.google.gson.FormattingStyle", e);
      }
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      Short short0 = new Short((short) (-2966));
      JsonTreeWriter jsonTreeWriter0 = new JsonTreeWriter();
      jsonTreeWriter0.value(0L);
      Boolean boolean0 = new Boolean("Lc+^&$A");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      JsonTreeWriter jsonTreeWriter0 = new JsonTreeWriter();
      jsonTreeWriter0.close();
      Strictness strictness0 = Strictness.STRICT;
      jsonTreeWriter0.setStrictness(strictness0);
      Boolean boolean0 = Boolean.TRUE;
      // Undeclared exception!
      try { 
        jsonTreeWriter0.beginObject();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.gson.internal.bind.JsonTreeWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      JsonTreeWriter jsonTreeWriter0 = new JsonTreeWriter();
      Strictness strictness0 = Strictness.LENIENT;
      FormattingStyle formattingStyle0 = jsonTreeWriter0.getFormattingStyle();
      formattingStyle0.withSpaceAfterSeparators(false);
      String string0 = "";
      formattingStyle0.withSpaceAfterSeparators(true);
      jsonTreeWriter0.beginObject();
      formattingStyle0.withIndent("");
      formattingStyle0.withNewline("");
      jsonTreeWriter0.setFormattingStyle(formattingStyle0);
      jsonTreeWriter0.setStrictness(strictness0);
      jsonTreeWriter0.endObject();
      jsonTreeWriter0.value((-2118.0598F));
      Long long0 = new Long((-183L));
      jsonTreeWriter0.value((Number) long0);
      jsonTreeWriter0.value(true);
      jsonTreeWriter0.beginObject();
      // Undeclared exception!
      try { 
        jsonTreeWriter0.get();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Expected one JSON element but was [{}]
         //
         verifyException("com.google.gson.internal.bind.JsonTreeWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      JsonTreeWriter jsonTreeWriter0 = new JsonTreeWriter();
      jsonTreeWriter0.get();
      String string0 = "Incomplete document";
      jsonTreeWriter0.value("Incomplete document");
      // Undeclared exception!
      try { 
        jsonTreeWriter0.endArray();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.gson.internal.bind.JsonTreeWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      JsonTreeWriter jsonTreeWriter0 = new JsonTreeWriter();
      jsonTreeWriter0.setHtmlSafe(false);
      boolean boolean0 = false;
      // Undeclared exception!
      try { 
        jsonTreeWriter0.name("");
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Did not expect a name
         //
         verifyException("com.google.gson.internal.bind.JsonTreeWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      JsonTreeWriter jsonTreeWriter0 = new JsonTreeWriter();
      // Undeclared exception!
      try { 
        jsonTreeWriter0.jsonValue("5mmWC8w7bDy#>");
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.gson.internal.bind.JsonTreeWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      JsonTreeWriter jsonTreeWriter0 = new JsonTreeWriter();
      jsonTreeWriter0.nullValue();
      jsonTreeWriter0.close();
      // Undeclared exception!
      try { 
        jsonTreeWriter0.endArray();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.gson.internal.bind.JsonTreeWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      Short short0 = new Short((short)10);
      assertEquals((short)10, (short)short0);
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      JsonTreeWriter jsonTreeWriter0 = new JsonTreeWriter();
      long long0 = 2060L;
      jsonTreeWriter0.value(2060L);
      jsonTreeWriter0.nullValue();
      jsonTreeWriter0.value(true);
      // Undeclared exception!
      try { 
        jsonTreeWriter0.jsonValue((String) null);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.gson.internal.bind.JsonTreeWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      Boolean boolean0 = Boolean.TRUE;
      assertTrue(boolean0);
      
      Long long0 = new Long(0L);
      assertEquals(0L, (long)long0);
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      JsonTreeWriter jsonTreeWriter0 = new JsonTreeWriter();
      jsonTreeWriter0.close();
      // Undeclared exception!
      try { 
        jsonTreeWriter0.endArray();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.gson.internal.bind.JsonTreeWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      JsonTreeWriter jsonTreeWriter0 = new JsonTreeWriter();
      Boolean boolean0 = Boolean.FALSE;
      jsonTreeWriter0.value(boolean0);
      float float0 = 0.0F;
      jsonTreeWriter0.value(0.0F);
      FormattingStyle formattingStyle0 = FormattingStyle.PRETTY;
      // Undeclared exception!
      try { 
        formattingStyle0.withNewline("2?Q QGbQVH,jC-hvk.");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Only combinations of \\n and \\r are allowed in newline.
         //
         verifyException("com.google.gson.FormattingStyle", e);
      }
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      JsonTreeWriter jsonTreeWriter0 = new JsonTreeWriter();
      Boolean boolean0 = Boolean.FALSE;
      jsonTreeWriter0.value(boolean0);
      jsonTreeWriter0.value((Number) null);
      jsonTreeWriter0.setSerializeNulls(true);
      String string0 = null;
      jsonTreeWriter0.close();
      // Undeclared exception!
      try { 
        jsonTreeWriter0.jsonValue((String) null);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.gson.internal.bind.JsonTreeWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      JsonTreeWriter jsonTreeWriter0 = new JsonTreeWriter();
      jsonTreeWriter0.beginArray();
      jsonTreeWriter0.value("");
      Boolean boolean0 = new Boolean(false);
      jsonTreeWriter0.value("R?XQwm6rYL");
      Strictness strictness0 = Strictness.LENIENT;
      jsonTreeWriter0.setStrictness(strictness0);
      jsonTreeWriter0.value(boolean0);
      String string0 = null;
      jsonTreeWriter0.value((String) null);
      jsonTreeWriter0.endArray();
      jsonTreeWriter0.value(0.0);
      jsonTreeWriter0.close();
      // Undeclared exception!
      try { 
        jsonTreeWriter0.get();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Expected one JSON element but was [\"closed\"]
         //
         verifyException("com.google.gson.internal.bind.JsonTreeWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      JsonTreeWriter jsonTreeWriter0 = new JsonTreeWriter();
      Strictness strictness0 = Strictness.LEGACY_STRICT;
      jsonTreeWriter0.setStrictness(strictness0);
      FormattingStyle formattingStyle0 = FormattingStyle.COMPACT;
      // Undeclared exception!
      try { 
        jsonTreeWriter0.name(")>U*O*kd'QW:");
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Did not expect a name
         //
         verifyException("com.google.gson.internal.bind.JsonTreeWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      JsonTreeWriter jsonTreeWriter0 = new JsonTreeWriter();
      JsonWriter jsonWriter0 = jsonTreeWriter0.value("Deserialization is unsupported");
      assertFalse(jsonWriter0.isLenient());
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      Double double0 = new Double(1320.143F);
      assertEquals(1320.1429443359375, (double)double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      JsonTreeWriter jsonTreeWriter0 = new JsonTreeWriter();
      jsonTreeWriter0.beginArray();
      jsonTreeWriter0.value((-1476.3173F));
      Float float0 = new Float((-1476.3173F));
      jsonTreeWriter0.beginArray();
      jsonTreeWriter0.value(630L);
      jsonTreeWriter0.value((Number) float0);
      jsonTreeWriter0.value((Number) float0);
      jsonTreeWriter0.value(1198.9315254533699);
      jsonTreeWriter0.setSerializeNulls(false);
      jsonTreeWriter0.flush();
      // Undeclared exception!
      try { 
        jsonTreeWriter0.endObject();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.gson.internal.bind.JsonTreeWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      JsonTreeWriter jsonTreeWriter0 = new JsonTreeWriter();
      jsonTreeWriter0.beginObject();
      boolean boolean0 = true;
      // Undeclared exception!
      try { 
        jsonTreeWriter0.beginObject();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.gson.internal.bind.JsonTreeWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      JsonTreeWriter jsonTreeWriter0 = new JsonTreeWriter();
      JsonWriter jsonWriter0 = jsonTreeWriter0.value(true);
      FormattingStyle formattingStyle0 = jsonWriter0.getFormattingStyle();
      // Undeclared exception!
      try { 
        formattingStyle0.withNewline("Incomplete document");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Only combinations of \\n and \\r are allowed in newline.
         //
         verifyException("com.google.gson.FormattingStyle", e);
      }
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      JsonTreeWriter jsonTreeWriter0 = new JsonTreeWriter();
      jsonTreeWriter0.value(0L);
      jsonTreeWriter0.value("com.google.gson.JsonArray");
      jsonTreeWriter0.close();
      // Undeclared exception!
      try { 
        jsonTreeWriter0.beginObject();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.gson.internal.bind.JsonTreeWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      JsonTreeWriter jsonTreeWriter0 = new JsonTreeWriter();
      boolean boolean0 = false;
      jsonTreeWriter0.value(false);
      byte byte0 = (byte)87;
      jsonTreeWriter0.beginObject();
      Byte byte1 = new Byte((byte)87);
      // Undeclared exception!
      try { 
        jsonTreeWriter0.value((Number) byte1);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.gson.internal.bind.JsonTreeWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      JsonTreeWriter jsonTreeWriter0 = new JsonTreeWriter();
      // Undeclared exception!
      try { 
        jsonTreeWriter0.setIndent("U^5qd]a*TUk");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Only combinations of spaces and tabs are allowed in indent.
         //
         verifyException("com.google.gson.FormattingStyle", e);
      }
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      JsonTreeWriter jsonTreeWriter0 = new JsonTreeWriter();
      jsonTreeWriter0.nullValue();
      Boolean boolean0 = new Boolean(true);
      jsonTreeWriter0.value(boolean0);
      jsonTreeWriter0.value("{7wx(2>+~");
      jsonTreeWriter0.close();
      // Undeclared exception!
      try { 
        jsonTreeWriter0.value("G5<7F5*j");
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.gson.internal.bind.JsonTreeWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      JsonTreeWriter jsonTreeWriter0 = new JsonTreeWriter();
      // Undeclared exception!
      try { 
        jsonTreeWriter0.jsonValue("Not a JSON Object: ");
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.gson.internal.bind.JsonTreeWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      JsonTreeWriter jsonTreeWriter0 = new JsonTreeWriter();
      jsonTreeWriter0.setSerializeNulls(false);
      // Undeclared exception!
      try { 
        jsonTreeWriter0.jsonValue("Not a JSON Obje%*4 ");
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.gson.internal.bind.JsonTreeWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      Boolean boolean0 = Boolean.FALSE;
      Boolean boolean1 = Boolean.valueOf("Du");
      assertFalse(boolean1);
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      JsonTreeWriter jsonTreeWriter0 = new JsonTreeWriter();
      jsonTreeWriter0.value(1.0);
      String string0 = "Yi}P}s";
      // Undeclared exception!
      try { 
        jsonTreeWriter0.jsonValue("Yi}P}s");
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.gson.internal.bind.JsonTreeWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      JsonTreeWriter jsonTreeWriter0 = new JsonTreeWriter();
      Boolean boolean0 = new Boolean("");
      jsonTreeWriter0.setIndent("");
      JsonWriter jsonWriter0 = jsonTreeWriter0.value(boolean0);
      jsonTreeWriter0.value(271L);
      JsonTreeWriter jsonTreeWriter1 = (JsonTreeWriter)jsonTreeWriter0.value(true);
      jsonWriter0.close();
      // Undeclared exception!
      try { 
        jsonTreeWriter1.get();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Expected one JSON element but was [\"closed\"]
         //
         verifyException("com.google.gson.internal.bind.JsonTreeWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      JsonTreeWriter jsonTreeWriter0 = new JsonTreeWriter();
      jsonTreeWriter0.beginArray();
      short short0 = (short)0;
      jsonTreeWriter0.nullValue();
      try { 
        jsonTreeWriter0.close();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Incomplete document
         //
         verifyException("com.google.gson.internal.bind.JsonTreeWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      JsonTreeWriter jsonTreeWriter0 = new JsonTreeWriter();
      jsonTreeWriter0.value(0.0F);
      FormattingStyle formattingStyle0 = FormattingStyle.PRETTY;
      formattingStyle0.withIndent("");
      formattingStyle0.withNewline("");
      jsonTreeWriter0.setFormattingStyle(formattingStyle0);
      // Undeclared exception!
      try { 
        jsonTreeWriter0.jsonValue("");
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.gson.internal.bind.JsonTreeWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      JsonTreeWriter jsonTreeWriter0 = new JsonTreeWriter();
      JsonNull jsonNull0 = JsonNull.INSTANCE;
      assertTrue(jsonNull0.isJsonNull());
      
      jsonTreeWriter0.value(0.0F);
      // Undeclared exception!
      try { 
        jsonTreeWriter0.jsonValue(":BMF|Ru");
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.gson.internal.bind.JsonTreeWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      JsonTreeWriter jsonTreeWriter0 = new JsonTreeWriter();
      jsonTreeWriter0.value(0L);
      jsonTreeWriter0.value(4717.9004F);
      jsonTreeWriter0.beginObject();
      jsonTreeWriter0.name("]`,t[.o");
      String string0 = "";
      jsonTreeWriter0.setSerializeNulls(true);
      boolean boolean0 = true;
      jsonTreeWriter0.setSerializeNulls(true);
      jsonTreeWriter0.nullValue();
      String string1 = "";
      // Undeclared exception!
      try { 
        jsonTreeWriter0.value("");
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.gson.internal.bind.JsonTreeWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      JsonTreeWriter jsonTreeWriter0 = new JsonTreeWriter();
      Boolean boolean0 = Boolean.FALSE;
      float float0 = 0.0F;
      jsonTreeWriter0.value(1.0F);
      jsonTreeWriter0.value(0.0F);
      jsonTreeWriter0.get();
      jsonTreeWriter0.value(boolean0);
      try { 
        Short.valueOf("%2z^");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"%2z^\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      JsonTreeWriter jsonTreeWriter0 = new JsonTreeWriter();
      // Undeclared exception!
      try { 
        jsonTreeWriter0.jsonValue("=");
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.gson.internal.bind.JsonTreeWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      JsonTreeWriter jsonTreeWriter0 = new JsonTreeWriter();
      jsonTreeWriter0.setHtmlSafe(false);
      String string0 = "";
      jsonTreeWriter0.value("");
      // Undeclared exception!
      try { 
        jsonTreeWriter0.name("");
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Did not expect a name
         //
         verifyException("com.google.gson.internal.bind.JsonTreeWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      JsonTreeWriter jsonTreeWriter0 = new JsonTreeWriter();
      jsonTreeWriter0.beginArray();
      double double0 = 1.0;
      // Undeclared exception!
      try { 
        jsonTreeWriter0.get();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Expected one JSON element but was [[]]
         //
         verifyException("com.google.gson.internal.bind.JsonTreeWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      JsonTreeWriter jsonTreeWriter0 = new JsonTreeWriter();
      jsonTreeWriter0.beginArray();
      jsonTreeWriter0.setSerializeNulls(false);
      FormattingStyle formattingStyle0 = jsonTreeWriter0.getFormattingStyle();
      FormattingStyle formattingStyle1 = formattingStyle0.withSpaceAfterSeparators(true);
      jsonTreeWriter0.setFormattingStyle(formattingStyle1);
      Boolean boolean0 = Boolean.FALSE;
      // Undeclared exception!
      try { 
        jsonTreeWriter0.get();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Expected one JSON element but was [[]]
         //
         verifyException("com.google.gson.internal.bind.JsonTreeWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      JsonTreeWriter jsonTreeWriter0 = new JsonTreeWriter();
      jsonTreeWriter0.beginObject();
      jsonTreeWriter0.setSerializeNulls(false);
      // Undeclared exception!
      try { 
        jsonTreeWriter0.value(false);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.gson.internal.bind.JsonTreeWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      JsonTreeWriter jsonTreeWriter0 = new JsonTreeWriter();
      jsonTreeWriter0.close();
      // Undeclared exception!
      try { 
        jsonTreeWriter0.endObject();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.gson.internal.bind.JsonTreeWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      JsonTreeWriter jsonTreeWriter0 = new JsonTreeWriter();
      jsonTreeWriter0.get();
      jsonTreeWriter0.beginArray();
      // Undeclared exception!
      try { 
        jsonTreeWriter0.get();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Expected one JSON element but was [[]]
         //
         verifyException("com.google.gson.internal.bind.JsonTreeWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      JsonTreeWriter jsonTreeWriter0 = new JsonTreeWriter();
      JsonWriter jsonWriter0 = jsonTreeWriter0.value(0.0);
      assertSame(jsonWriter0, jsonTreeWriter0);
      assertEquals(Strictness.LEGACY_STRICT, jsonWriter0.getStrictness());
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      JsonTreeWriter jsonTreeWriter0 = new JsonTreeWriter();
      Boolean boolean0 = Boolean.FALSE;
      jsonTreeWriter0.value(boolean0);
      jsonTreeWriter0.value("");
      jsonTreeWriter0.flush();
      JsonPrimitive jsonPrimitive0 = new JsonPrimitive("");
      assertTrue(jsonPrimitive0.isJsonPrimitive());
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      JsonTreeWriter jsonTreeWriter0 = new JsonTreeWriter();
      jsonTreeWriter0.beginArray();
      jsonTreeWriter0.setSerializeNulls(true);
      jsonTreeWriter0.beginObject();
      jsonTreeWriter0.setHtmlSafe(false);
      jsonTreeWriter0.endObject();
      jsonTreeWriter0.value(0.0);
      long long0 = 0L;
      // Undeclared exception!
      try { 
        jsonTreeWriter0.name("z");
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Please begin an object before writing a name.
         //
         verifyException("com.google.gson.internal.bind.JsonTreeWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      JsonTreeWriter jsonTreeWriter0 = new JsonTreeWriter();
      jsonTreeWriter0.get();
      jsonTreeWriter0.get();
      jsonTreeWriter0.flush();
      jsonTreeWriter0.value("");
      jsonTreeWriter0.flush();
      // Undeclared exception!
      try { 
        jsonTreeWriter0.endArray();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.gson.internal.bind.JsonTreeWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      JsonTreeWriter jsonTreeWriter0 = new JsonTreeWriter();
      FormattingStyle formattingStyle0 = FormattingStyle.PRETTY;
      jsonTreeWriter0.setFormattingStyle(formattingStyle0);
      jsonTreeWriter0.beginObject();
      double double0 = 2347.0;
      long long0 = 0L;
      // Undeclared exception!
      try { 
        jsonTreeWriter0.value(0L);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.gson.internal.bind.JsonTreeWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      JsonTreeWriter jsonTreeWriter0 = new JsonTreeWriter();
      FormattingStyle formattingStyle0 = FormattingStyle.COMPACT;
      formattingStyle0.withSpaceAfterSeparators(false);
      String string0 = "iQ#$1";
      // Undeclared exception!
      try { 
        formattingStyle0.withNewline("iQ#$1");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Only combinations of \\n and \\r are allowed in newline.
         //
         verifyException("com.google.gson.FormattingStyle", e);
      }
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      JsonTreeWriter jsonTreeWriter0 = new JsonTreeWriter();
      jsonTreeWriter0.nullValue();
      String string0 = "'>\"";
      // Undeclared exception!
      try { 
        jsonTreeWriter0.name("'>\"");
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Did not expect a name
         //
         verifyException("com.google.gson.internal.bind.JsonTreeWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      JsonTreeWriter jsonTreeWriter0 = new JsonTreeWriter();
      jsonTreeWriter0.value((-2838L));
      Boolean boolean0 = Boolean.valueOf(true);
      JsonWriter jsonWriter0 = jsonTreeWriter0.value(boolean0);
      assertEquals(Strictness.LEGACY_STRICT, jsonWriter0.getStrictness());
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      JsonTreeWriter jsonTreeWriter0 = new JsonTreeWriter();
      jsonTreeWriter0.value((float) 882L);
      jsonTreeWriter0.value(882L);
      float float0 = 624.9618F;
      // Undeclared exception!
      try { 
        jsonTreeWriter0.jsonValue("");
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.gson.internal.bind.JsonTreeWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      JsonTreeWriter jsonTreeWriter0 = new JsonTreeWriter();
      jsonTreeWriter0.get();
      Short short0 = new Short((short) (-1));
      jsonTreeWriter0.value((Number) short0);
      jsonTreeWriter0.nullValue();
      jsonTreeWriter0.nullValue();
      JsonWriter jsonWriter0 = jsonTreeWriter0.value((double) (short) (-1));
      assertTrue(jsonWriter0.getSerializeNulls());
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      JsonTreeWriter jsonTreeWriter0 = new JsonTreeWriter();
      jsonTreeWriter0.beginArray();
      String string0 = "";
      // Undeclared exception!
      try { 
        jsonTreeWriter0.jsonValue("");
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.gson.internal.bind.JsonTreeWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      JsonTreeWriter jsonTreeWriter0 = new JsonTreeWriter();
      jsonTreeWriter0.beginObject();
      boolean boolean0 = false;
      boolean boolean1 = false;
      // Undeclared exception!
      try { 
        jsonTreeWriter0.value(false);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.gson.internal.bind.JsonTreeWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      JsonTreeWriter jsonTreeWriter0 = new JsonTreeWriter();
      Short short0 = new Short((short)1);
      jsonTreeWriter0.value((Number) short0);
      jsonTreeWriter0.value((long) (short)1);
      jsonTreeWriter0.flush();
      // Undeclared exception!
      try { 
        jsonTreeWriter0.endObject();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.gson.internal.bind.JsonTreeWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      JsonTreeWriter jsonTreeWriter0 = new JsonTreeWriter();
      jsonTreeWriter0.nullValue();
      jsonTreeWriter0.get();
      // Undeclared exception!
      try { 
        jsonTreeWriter0.setIndent("Incomplete document");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Only combinations of spaces and tabs are allowed in indent.
         //
         verifyException("com.google.gson.FormattingStyle", e);
      }
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      JsonTreeWriter jsonTreeWriter0 = new JsonTreeWriter();
      Boolean boolean0 = Boolean.FALSE;
      jsonTreeWriter0.value(4694L);
      jsonTreeWriter0.value(boolean0);
      // Undeclared exception!
      try { 
        jsonTreeWriter0.endObject();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.gson.internal.bind.JsonTreeWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      JsonTreeWriter jsonTreeWriter0 = new JsonTreeWriter();
      Boolean boolean0 = Boolean.FALSE;
      jsonTreeWriter0.nullValue();
      jsonTreeWriter0.value(661.3F);
      Boolean boolean1 = new Boolean("");
      jsonTreeWriter0.value(boolean1);
      jsonTreeWriter0.setSerializeNulls(false);
      jsonTreeWriter0.value(boolean0);
      String string0 = "}tP?x@JUC9Z4";
      jsonTreeWriter0.value("}tP?x@JUC9Z4");
      jsonTreeWriter0.close();
      // Undeclared exception!
      try { 
        jsonTreeWriter0.jsonValue("hm:hm|9Y+*");
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.gson.internal.bind.JsonTreeWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      JsonTreeWriter jsonTreeWriter0 = new JsonTreeWriter();
      JsonNull jsonNull0 = JsonNull.INSTANCE;
      short short0 = (short)7;
      Short.valueOf((short)7);
      jsonTreeWriter0.close();
      // Undeclared exception!
      try { 
        jsonTreeWriter0.beginArray();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.gson.internal.bind.JsonTreeWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      FormattingStyle formattingStyle0 = FormattingStyle.COMPACT;
      Boolean boolean0 = Boolean.FALSE;
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      JsonTreeWriter jsonTreeWriter0 = new JsonTreeWriter();
      jsonTreeWriter0.value(0.0F);
      float float0 = 1.0F;
      // Undeclared exception!
      try { 
        jsonTreeWriter0.setFormattingStyle((FormattingStyle) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      Float float0 = new Float(249.3819557579);
      assertEquals(249.38196F, (float)float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      JsonTreeWriter jsonTreeWriter0 = new JsonTreeWriter();
      FormattingStyle formattingStyle0 = FormattingStyle.COMPACT;
      jsonTreeWriter0.setFormattingStyle(formattingStyle0);
      Boolean boolean0 = new Boolean(false);
      jsonTreeWriter0.value(boolean0);
      String string0 = "Only combinations of spaces and tabs are allowed in indent.";
      // Undeclared exception!
      try { 
        formattingStyle0.withNewline("Only combinations of spaces and tabs are allowed in indent.");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Only combinations of \\n and \\r are allowed in newline.
         //
         verifyException("com.google.gson.FormattingStyle", e);
      }
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      JsonTreeWriter jsonTreeWriter0 = new JsonTreeWriter();
      jsonTreeWriter0.close();
      // Undeclared exception!
      try { 
        jsonTreeWriter0.name("com.google.gson.internal.bind.JsonTreeWriter");
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Please begin an object before writing a name.
         //
         verifyException("com.google.gson.internal.bind.JsonTreeWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      JsonTreeWriter jsonTreeWriter0 = new JsonTreeWriter();
      jsonTreeWriter0.beginObject();
      jsonTreeWriter0.name("RFlo\u001Aviq+#q>j");
      // Undeclared exception!
      try { 
        jsonTreeWriter0.endObject();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.gson.internal.bind.JsonTreeWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      JsonTreeWriter jsonTreeWriter0 = new JsonTreeWriter();
      jsonTreeWriter0.beginArray();
      jsonTreeWriter0.value((-668L));
      jsonTreeWriter0.beginArray();
      jsonTreeWriter0.endArray();
      try { 
        jsonTreeWriter0.close();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Incomplete document
         //
         verifyException("com.google.gson.internal.bind.JsonTreeWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      JsonTreeWriter jsonTreeWriter0 = new JsonTreeWriter();
      boolean boolean0 = false;
      // Undeclared exception!
      try { 
        jsonTreeWriter0.jsonValue("Primitive is neither a number nor a string");
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.gson.internal.bind.JsonTreeWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      JsonTreeWriter jsonTreeWriter0 = new JsonTreeWriter();
      jsonTreeWriter0.value((long) (short) (-2187));
      Short short0 = new Short((short) (-2187));
      jsonTreeWriter0.value((Number) short0);
      jsonTreeWriter0.setSerializeNulls(true);
      jsonTreeWriter0.value(0L);
      jsonTreeWriter0.setHtmlSafe(true);
      jsonTreeWriter0.beginArray();
      jsonTreeWriter0.setSerializeNulls(true);
      jsonTreeWriter0.value(true);
      JsonWriter jsonWriter0 = jsonTreeWriter0.value((Number) short0);
      assertSame(jsonWriter0, jsonTreeWriter0);
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      JsonTreeWriter jsonTreeWriter0 = new JsonTreeWriter();
      JsonWriter jsonWriter0 = jsonTreeWriter0.value(397L);
      assertFalse(jsonWriter0.isLenient());
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      JsonTreeWriter jsonTreeWriter0 = new JsonTreeWriter();
      String string0 = "XK/+/D,3";
      Strictness strictness0 = Strictness.LEGACY_STRICT;
      jsonTreeWriter0.setStrictness(strictness0);
      // Undeclared exception!
      try { 
        jsonTreeWriter0.jsonValue("XK/+/D,3");
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.gson.internal.bind.JsonTreeWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      JsonTreeWriter jsonTreeWriter0 = new JsonTreeWriter();
      jsonTreeWriter0.flush();
      jsonTreeWriter0.setSerializeNulls(false);
      jsonTreeWriter0.value(false);
      Boolean boolean0 = Boolean.TRUE;
      jsonTreeWriter0.value(boolean0);
      jsonTreeWriter0.flush();
      jsonTreeWriter0.value(boolean0);
      jsonTreeWriter0.flush();
      jsonTreeWriter0.close();
      assertFalse(jsonTreeWriter0.getSerializeNulls());
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      Byte byte0 = new Byte((byte)0);
      assertEquals((byte)0, (byte)byte0);
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      JsonTreeWriter jsonTreeWriter0 = new JsonTreeWriter();
      jsonTreeWriter0.value(1.0);
      jsonTreeWriter0.beginArray();
      jsonTreeWriter0.nullValue();
      jsonTreeWriter0.value("GNbJ?L9^AMF");
      jsonTreeWriter0.value(false);
      jsonTreeWriter0.setSerializeNulls(false);
      jsonTreeWriter0.value(43.0F);
      jsonTreeWriter0.endArray();
      JsonWriter jsonWriter0 = jsonTreeWriter0.value(43.0F);
      assertSame(jsonWriter0, jsonTreeWriter0);
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      JsonTreeWriter jsonTreeWriter0 = new JsonTreeWriter();
      boolean boolean0 = true;
      jsonTreeWriter0.setSerializeNulls(true);
      // Undeclared exception!
      try { 
        jsonTreeWriter0.endObject();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.gson.internal.bind.JsonTreeWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      JsonTreeWriter jsonTreeWriter0 = new JsonTreeWriter();
      jsonTreeWriter0.beginObject();
      // Undeclared exception!
      try { 
        jsonTreeWriter0.nullValue();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.gson.internal.bind.JsonTreeWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      JsonTreeWriter jsonTreeWriter0 = new JsonTreeWriter();
      Boolean boolean0 = Boolean.FALSE;
      jsonTreeWriter0.value(boolean0);
      jsonTreeWriter0.setSerializeNulls(true);
      jsonTreeWriter0.value(0L);
      jsonTreeWriter0.close();
      assertTrue(jsonTreeWriter0.getSerializeNulls());
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      JsonTreeWriter jsonTreeWriter0 = new JsonTreeWriter();
      jsonTreeWriter0.setSerializeNulls(true);
      // Undeclared exception!
      try { 
        jsonTreeWriter0.endArray();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.gson.internal.bind.JsonTreeWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      JsonTreeWriter jsonTreeWriter0 = new JsonTreeWriter();
      jsonTreeWriter0.value((Boolean) null);
      jsonTreeWriter0.value(1L);
      jsonTreeWriter0.setHtmlSafe(false);
      // Undeclared exception!
      try { 
        jsonTreeWriter0.jsonValue("_0Ssd~,-{Qkyj`ms");
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.gson.internal.bind.JsonTreeWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      Float float0 = new Float(0.0F);
      assertEquals(0.0F, (float)float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      JsonTreeWriter jsonTreeWriter0 = new JsonTreeWriter();
      String string0 = null;
      // Undeclared exception!
      try { 
        jsonTreeWriter0.setIndent((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.gson.stream.JsonWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      JsonTreeWriter jsonTreeWriter0 = new JsonTreeWriter();
      double double0 = 0.0;
      // Undeclared exception!
      try { 
        jsonTreeWriter0.name(")|%");
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Did not expect a name
         //
         verifyException("com.google.gson.internal.bind.JsonTreeWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      JsonTreeWriter jsonTreeWriter0 = new JsonTreeWriter();
      boolean boolean0 = false;
      boolean boolean1 = true;
      jsonTreeWriter0.beginObject();
      jsonTreeWriter0.setSerializeNulls(true);
      // Undeclared exception!
      try { 
        jsonTreeWriter0.nullValue();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.gson.internal.bind.JsonTreeWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      JsonTreeWriter jsonTreeWriter0 = new JsonTreeWriter();
      jsonTreeWriter0.beginArray();
      JsonWriter jsonWriter0 = jsonTreeWriter0.value(995.129716965);
      assertSame(jsonTreeWriter0, jsonWriter0);
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      JsonTreeWriter jsonTreeWriter0 = new JsonTreeWriter();
      jsonTreeWriter0.setHtmlSafe(true);
      jsonTreeWriter0.beginObject();
      // Undeclared exception!
      try { 
        jsonTreeWriter0.beginArray();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.gson.internal.bind.JsonTreeWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      JsonTreeWriter jsonTreeWriter0 = new JsonTreeWriter();
      JsonWriter jsonWriter0 = jsonTreeWriter0.beginObject();
      jsonWriter0.name("7'uj~,Yb$alFK`");
      jsonTreeWriter0.setHtmlSafe(true);
      jsonTreeWriter0.nullValue();
      // Undeclared exception!
      try { 
        jsonTreeWriter0.beginArray();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.gson.internal.bind.JsonTreeWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      JsonTreeWriter jsonTreeWriter0 = new JsonTreeWriter();
      jsonTreeWriter0.value(81L);
      Boolean boolean0 = Boolean.TRUE;
      jsonTreeWriter0.value((double) 81L);
      jsonTreeWriter0.value("<71/<QpJ`G>BH/3");
      jsonTreeWriter0.beginArray();
      jsonTreeWriter0.value(boolean0);
      jsonTreeWriter0.endArray();
      // Undeclared exception!
      try { 
        jsonTreeWriter0.endArray();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.gson.internal.bind.JsonTreeWriter", e);
      }
  }
}
