/*
 * This file was automatically generated by EvoSuite
 * Sat Nov 25 03:55:46 GMT 2023
 */

package org.jsoup.parser;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jsoup.nodes.Attribute;
import org.jsoup.nodes.Attributes;
import org.jsoup.parser.ParseSettings;
import org.jsoup.parser.Token;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Token_ESTest extends Token_ESTest_scaffolding {

  // @Test(timeout = 4000)
  // public void test000()  throws Throwable  {
  //     Token.EndTag token_EndTag0 = new Token.EndTag();
  //     token_EndTag0.appendAttributeValue("");
  //     token_EndTag0.appendAttributeName('+');
  //     token_EndTag0.appendTagName('3');
  //     Attributes attributes0 = token_EndTag0.attributes;
  //     token_EndTag0.attributes = null;
  //     token_EndTag0.hasAttribute("id");
  //     token_EndTag0.newAttribute();
  //     token_EndTag0.appendAttributeName("");
  //     token_EndTag0.isCharacter();
  //     Token.EOF token_EOF0 = new Token.EOF();
  //     StringBuilder stringBuilder0 = new StringBuilder();
  //     token_EOF0.tokenType();
  //     int int0 = 0;
  //     // Undeclared exception!
  //     try { 
  //       stringBuilder0.insert(2951, (Object) null);
  //       fail("Expecting exception: StringIndexOutOfBoundsException");
  //     
  //     } catch(StringIndexOutOfBoundsException e) {
  //        //
  //        // String index out of range: 2951
  //        //
  //        verifyException("java.lang.AbstractStringBuilder", e);
  //     }
  // }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      Token.EndTag token_EndTag0 = new Token.EndTag();
      StringBuilder stringBuilder0 = null;
      Token.reset((StringBuilder) null);
      Token.EndTag token_EndTag1 = (Token.EndTag)token_EndTag0.reset();
      token_EndTag1.toString();
      token_EndTag1.newAttribute();
      token_EndTag1.isEndTag();
      token_EndTag0.tagName = "selected";
      // Undeclared exception!
      try { 
        token_EndTag1.asDoctype();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.jsoup.parser.Token$EndTag cannot be cast to org.jsoup.parser.Token$Doctype
         //
         verifyException("org.jsoup.parser.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      Token.CData token_CData0 = new Token.CData("3lm");
      Token.CData token_CData1 = (Token.CData)token_CData0.data("3lm");
      token_CData1.isCData();
      Token.StartTag token_StartTag0 = new Token.StartTag();
      token_StartTag0.appendAttributeValue("}");
      token_StartTag0.name("}");
      token_StartTag0.hasAttribute(",4fVN(%-V");
      token_CData0.toString();
      token_StartTag0.reset();
      StringBuilder stringBuilder0 = new StringBuilder(21);
      // Undeclared exception!
      try { 
        stringBuilder0.append((CharSequence) "}", 21, 14);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // start 21, end 14, s.length() 1
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      Token.EOF token_EOF0 = new Token.EOF();
      assertEquals("", token_EOF0.toString());
      
      Token.Doctype token_Doctype0 = new Token.Doctype();
      Token token0 = token_Doctype0.reset();
      Token.TokenType token_TokenType0 = Token.TokenType.EOF;
      token0.type = token_TokenType0;
      Token.TokenType token_TokenType1 = Token.TokenType.EndTag;
      token_Doctype0.type = token_TokenType1;
      token_Doctype0.getSystemIdentifier();
      assertFalse(token_Doctype0.isForceQuirks());
      
      Token.CData token_CData0 = new Token.CData("(6uKH@m o#A)@+q");
      token_CData0.getData();
      Token.Comment token_Comment0 = new Token.Comment();
      Token.Comment token_Comment1 = token_Comment0.append('Y');
      Token.Comment token_Comment2 = token_Comment0.append('Y');
      token_Comment2.getData();
      String string0 = token_Comment0.toString();
      assertEquals("<!--YY-->", string0);
      
      token_EOF0.toString();
      boolean boolean0 = token_Comment1.isComment();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      Token.Doctype token_Doctype0 = new Token.Doctype();
      Token.Doctype token_Doctype1 = (Token.Doctype)token_Doctype0.reset();
      assertFalse(token_Doctype1.isForceQuirks());
      
      token_Doctype0.forceQuirks = true;
      Token.Doctype token_Doctype2 = token_Doctype0.asDoctype();
      token_Doctype2.isForceQuirks();
      Token.CData token_CData0 = new Token.CData("cnlu{0ipQC@!ivm");
      token_CData0.reset();
      Token.TokenType token_TokenType0 = Token.TokenType.StartTag;
      token_Doctype1.type = token_TokenType0;
      token_CData0.data("cnlu{0ipQC@!ivm");
      token_Doctype1.tokenType();
      boolean boolean0 = token_CData0.isStartTag();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      Token.reset((StringBuilder) null);
      Token.Doctype token_Doctype0 = new Token.Doctype();
      token_Doctype0.reset();
      Token.reset((StringBuilder) null);
      Token.reset((StringBuilder) null);
      token_Doctype0.isDoctype();
      Token.Character token_Character0 = new Token.Character();
      Token.reset((StringBuilder) null);
      token_Character0.getData();
      // Undeclared exception!
      try { 
        token_Character0.asEndTag();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.jsoup.parser.Token$Character cannot be cast to org.jsoup.parser.Token$EndTag
         //
         verifyException("org.jsoup.parser.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      Token.EOF token_EOF0 = new Token.EOF();
      token_EOF0.tokenType();
      Token.EOF token_EOF1 = (Token.EOF)token_EOF0.reset();
      token_EOF1.isCData();
      Token.Comment token_Comment0 = new Token.Comment();
      Token.TokenType token_TokenType0 = Token.TokenType.StartTag;
      token_EOF0.type = token_TokenType0;
      token_EOF1.tokenType();
      Token.Comment token_Comment1 = token_Comment0.append('J');
      token_Comment0.bogus = false;
      token_Comment1.tokenType();
      token_Comment0.bogus = false;
      token_Comment0.toString();
      Token.TokenType token_TokenType1 = Token.TokenType.EndTag;
      token_Comment0.type = token_TokenType1;
      String string0 = token_Comment0.toString();
      assertEquals("<!--J-->", string0);
      
      token_Comment0.append("%");
      token_Comment1.append("H7a ");
      Token.Doctype token_Doctype0 = new Token.Doctype();
      token_Comment1.append("H7a ");
      token_Doctype0.reset();
      token_Doctype0.getSystemIdentifier();
      assertFalse(token_Doctype0.isForceQuirks());
      
      token_EOF1.tokenType();
      Token.Comment token_Comment2 = (Token.Comment)token_Comment1.reset();
      Token.TokenType token_TokenType2 = Token.TokenType.Doctype;
      token_Comment2.type = token_TokenType2;
      Token.StartTag token_StartTag0 = new Token.StartTag();
      token_StartTag0.normalName = "<!doctype ";
      Token.EndTag token_EndTag0 = new Token.EndTag();
      Token.EndTag token_EndTag1 = token_EndTag0.asEndTag();
      Attributes attributes0 = token_EndTag1.attributes;
      Token.StartTag token_StartTag1 = token_StartTag0.nameAttr("Comment", (Attributes) null);
      Token.StartTag token_StartTag2 = token_StartTag1.nameAttr("<!--J-->", (Attributes) null);
      token_StartTag2.appendAttributeValue("EOF");
      String string1 = token_Comment1.getData();
      assertEquals("", string1);
      
      boolean boolean0 = token_EOF0.isEOF();
      assertFalse(boolean0);
  }

  // @Test(timeout = 4000)
  // public void test007()  throws Throwable  {
  //     Token.Doctype token_Doctype0 = new Token.Doctype();
  //     Token.Doctype token_Doctype1 = (Token.Doctype)token_Doctype0.reset();
  //     Token.Doctype token_Doctype2 = token_Doctype1.asDoctype();
  //     StringBuilder stringBuilder0 = token_Doctype2.name;
  //     int int0 = (-236);
  //     String string0 = "YahMl>XOiR-/.([g|";
  //     // Undeclared exception!
  //     try { 
  //       stringBuilder0.insert((-236), "YahMl>XOiR-/.([g|");
  //       fail("Expecting exception: StringIndexOutOfBoundsException");
  //     
  //     } catch(StringIndexOutOfBoundsException e) {
  //        //
  //        // String index out of range: -236
  //        //
  //        verifyException("java.lang.AbstractStringBuilder", e);
  //     }
  // }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      Token.StartTag token_StartTag0 = new Token.StartTag();
      token_StartTag0.finaliseTag();
      token_StartTag0.appendAttributeName("open");
      token_StartTag0.appendAttributeName('(');
      token_StartTag0.normalName = "$VALUES";
      token_StartTag0.setEmptyAttributeValue();
      token_StartTag0.normalName = "8#qpl_&X\"Bd4hn7d2>";
      int[] intArray0 = new int[0];
      token_StartTag0.appendAttributeValue(intArray0);
      token_StartTag0.newAttribute();
      boolean boolean0 = token_StartTag0.isSelfClosing();
      Token.CData token_CData0 = new Token.CData((String) null);
      Token.CData token_CData1 = (Token.CData)token_CData0.reset();
      token_CData1.tokenType();
      String string0 = token_CData0.toString();
      assertEquals("<![CDATA[null]]>", string0);
      
      boolean boolean1 = token_CData1.isEOF();
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      
      String string1 = token_StartTag0.toString();
      assertEquals("<[unset]  open(>", string1);
  }

  // @Test(timeout = 4000)
  // public void test009()  throws Throwable  {
  //     Token.StartTag token_StartTag0 = new Token.StartTag();
  //     Token.StartTag token_StartTag1 = token_StartTag0.asStartTag();
  //     int[] intArray0 = new int[7];
  //     intArray0[0] = 1504;
  //     intArray0[1] = 65533;
  //     intArray0[2] = 0;
  //     intArray0[3] = 0;
  //     intArray0[4] = 26;
  //     intArray0[5] = 0;
  //     intArray0[6] = (-247);
  //     // Undeclared exception!
  //     try { 
  //       token_StartTag1.appendAttributeValue(intArray0);
  //       fail("Expecting exception: IllegalArgumentException");
  //     
  //     } catch(IllegalArgumentException e) {
  //        //
  //        // no message in exception (getMessage() returned null)
  //        //
  //        verifyException("java.lang.AbstractStringBuilder", e);
  //     }
  // }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      Token.CData token_CData0 = new Token.CData("");
      Token.CData token_CData1 = (Token.CData)token_CData0.data("VQm?Sdbg]w2R/$X/\"~X");
      token_CData1.isComment();
      token_CData0.reset();
      // Undeclared exception!
      try { 
        token_CData0.asEndTag();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.jsoup.parser.Token$CData cannot be cast to org.jsoup.parser.Token$EndTag
         //
         verifyException("org.jsoup.parser.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      Token.Comment token_Comment0 = new Token.Comment();
      Token.Comment token_Comment1 = token_Comment0.append("noresize");
      token_Comment0.bogus = true;
      Token token0 = token_Comment0.reset();
      Token.TokenType token_TokenType0 = Token.TokenType.Comment;
      token0.type = token_TokenType0;
      Token.Comment token_Comment2 = token_Comment1.append('0');
      boolean boolean0 = token_Comment2.isCharacter();
      token_Comment2.type = token0.type;
      boolean boolean1 = token_Comment1.isEndTag();
      assertFalse(boolean1);
      
      token_Comment2.isEOF();
      Token.EndTag token_EndTag0 = new Token.EndTag();
      Token.EndTag token_EndTag1 = (Token.EndTag)token_EndTag0.reset();
      token_EndTag1.appendAttributeValue('P');
      token_EndTag0.toStringName();
      boolean boolean2 = token_EndTag0.isEOF();
      assertTrue(boolean2 == boolean0);
      
      String string0 = token_EndTag1.toStringName();
      assertEquals("[unset]", string0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      Token.Comment token_Comment0 = new Token.Comment();
      Token.Comment token_Comment1 = (Token.Comment)token_Comment0.reset();
      Token.Comment token_Comment2 = token_Comment1.asComment();
      char char0 = 'P';
      token_Comment2.append('P');
      StringBuilder stringBuilder0 = new StringBuilder("O#t0");
      // Undeclared exception!
      try { 
        stringBuilder0.append((char[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      Token.Character token_Character0 = new Token.Character();
      token_Character0.data((String) null);
      Token.TokenType token_TokenType0 = Token.TokenType.Comment;
      token_Character0.type = token_TokenType0;
      token_Character0.tokenType();
      token_Character0.getData();
      token_Character0.isDoctype();
      Token.Character token_Character1 = token_Character0.asCharacter();
      token_Character1.isCharacter();
      // Undeclared exception!
      try { 
        token_Character0.asStartTag();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.jsoup.parser.Token$Character cannot be cast to org.jsoup.parser.Token$StartTag
         //
         verifyException("org.jsoup.parser.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      Token.EOF token_EOF0 = new Token.EOF();
      token_EOF0.toString();
      token_EOF0.isEOF();
      Token.StartTag token_StartTag0 = new Token.StartTag();
      String string0 = "";
      // Undeclared exception!
      try { 
        token_EOF0.asEndTag();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.jsoup.parser.Token$EOF cannot be cast to org.jsoup.parser.Token$EndTag
         //
         verifyException("org.jsoup.parser.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      Token.Comment token_Comment0 = new Token.Comment();
      token_Comment0.toString();
      boolean boolean0 = token_Comment0.isCData();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      Token.EndTag token_EndTag0 = new Token.EndTag();
      token_EndTag0.isCharacter();
      token_EndTag0.appendTagName("T|%!<13PZ");
      // Undeclared exception!
      try { 
        token_EndTag0.asComment();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.jsoup.parser.Token$EndTag cannot be cast to org.jsoup.parser.Token$Comment
         //
         verifyException("org.jsoup.parser.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      Token.Comment token_Comment0 = new Token.Comment();
      Token.TokenType token_TokenType0 = Token.TokenType.Comment;
      token_Comment0.type = token_TokenType0;
      token_Comment0.getData();
      token_Comment0.isComment();
      Token.StartTag token_StartTag0 = new Token.StartTag();
      token_StartTag0.newAttribute();
      token_StartTag0.hasAttribute("");
      token_Comment0.reset();
      StringBuilder stringBuilder0 = new StringBuilder(0);
      Token.reset(stringBuilder0);
      // Undeclared exception!
      try { 
        token_StartTag0.asEndTag();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.jsoup.parser.Token$StartTag cannot be cast to org.jsoup.parser.Token$EndTag
         //
         verifyException("org.jsoup.parser.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      Token.Doctype token_Doctype0 = new Token.Doctype();
      Token.TokenType token_TokenType0 = Token.TokenType.EOF;
      token_Doctype0.type = token_TokenType0;
      token_Doctype0.isForceQuirks();
      token_Doctype0.isEOF();
      Token.Doctype token_Doctype1 = (Token.Doctype)token_Doctype0.reset();
      // Undeclared exception!
      try { 
        token_Doctype1.asStartTag();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.jsoup.parser.Token$Doctype cannot be cast to org.jsoup.parser.Token$StartTag
         //
         verifyException("org.jsoup.parser.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      Token.EndTag token_EndTag0 = new Token.EndTag();
      Token.EndTag token_EndTag1 = (Token.EndTag)token_EndTag0.name("StartTag");
      token_EndTag1.finaliseTag();
      token_EndTag0.appendAttributeName("StartTag");
      boolean boolean0 = token_EndTag1.hasAttribute("</");
      assertFalse(boolean0);
      
      token_EndTag1.appendAttributeName("\"IF$,u#*SaLs");
      token_EndTag1.setEmptyAttributeValue();
      token_EndTag1.newAttribute();
      Token.CData token_CData0 = new Token.CData("\"IF$,u#*SaLs");
      String string0 = token_CData0.toString();
      assertEquals("<![CDATA[\"IF$,u#*SaLs]]>", string0);
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      Token.EndTag token_EndTag0 = new Token.EndTag();
      token_EndTag0.appendAttributeValue('{');
      token_EndTag0.finaliseTag();
      token_EndTag0.name("");
      token_EndTag0.appendAttributeName('4');
      token_EndTag0.toString();
      token_EndTag0.name("@d}<");
      token_EndTag0.finaliseTag();
      // Undeclared exception!
      try { 
        token_EndTag0.asStartTag();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.jsoup.parser.Token$EndTag cannot be cast to org.jsoup.parser.Token$StartTag
         //
         verifyException("org.jsoup.parser.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      Token.EndTag token_EndTag0 = new Token.EndTag();
      token_EndTag0.toString();
      Token.EndTag token_EndTag1 = (Token.EndTag)token_EndTag0.reset();
      token_EndTag1.toString();
      token_EndTag0.toString();
      token_EndTag1.tagName = "";
      token_EndTag1.appendAttributeName("");
      token_EndTag1.normalName = "</[unset]>";
      token_EndTag1.finaliseTag();
      char[] charArray0 = new char[2];
      charArray0[0] = 'T';
      charArray0[1] = '3';
      token_EndTag1.appendAttributeValue(charArray0);
      token_EndTag0.finaliseTag();
      token_EndTag0.newAttribute();
      token_EndTag0.isDoctype();
      // Undeclared exception!
      try { 
        Token.TokenType.valueOf("</[unset]>");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant org.jsoup.parser.Token.TokenType.</[unset]>
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      Token.Character token_Character0 = new Token.Character();
      Token.Character token_Character1 = token_Character0.data(" ");
      token_Character1.data(" ");
      token_Character0.reset();
      Token.StartTag token_StartTag0 = new Token.StartTag();
      token_StartTag0.appendAttributeName('$');
      token_StartTag0.tokenType();
      token_Character0.data(" ");
      token_StartTag0.finaliseTag();
      boolean boolean0 = token_StartTag0.hasAttribute("version");
      assertFalse(boolean0);
      
      String string0 = token_StartTag0.toString();
      assertEquals("<[unset]  $>", string0);
      
      Token.StartTag token_StartTag1 = (Token.StartTag)token_StartTag0.reset();
      token_StartTag1.toString();
      Token.EndTag token_EndTag0 = new Token.EndTag();
      Attributes attributes0 = token_EndTag0.attributes;
      token_StartTag1.attributes = null;
      token_StartTag1.toString();
      token_Character1.data(" ");
      token_StartTag1.normalName();
      String string1 = token_StartTag0.toString();
      assertEquals("<[unset]>", string1);
      
      Token.Doctype token_Doctype0 = new Token.Doctype();
      token_Doctype0.getSystemIdentifier();
      assertFalse(token_Doctype0.isForceQuirks());
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      Token.EndTag token_EndTag0 = new Token.EndTag();
      String string0 = "";
      token_EndTag0.appendAttributeName("");
      Token.EndTag token_EndTag1 = (Token.EndTag)token_EndTag0.name((String) null);
      char char0 = 'J';
      token_EndTag0.appendAttributeName('J');
      token_EndTag0.finaliseTag();
      // Undeclared exception!
      try { 
        token_EndTag1.asStartTag();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.jsoup.parser.Token$EndTag cannot be cast to org.jsoup.parser.Token$StartTag
         //
         verifyException("org.jsoup.parser.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      Token.EndTag token_EndTag0 = new Token.EndTag();
      char[] charArray0 = new char[5];
      charArray0[0] = 'V';
      charArray0[1] = '|';
      charArray0[2] = 'C';
      token_EndTag0.tokenType();
      charArray0[3] = '~';
      int[] intArray0 = new int[2];
      intArray0[0] = (int) 'V';
      intArray0[1] = (int) 'C';
      token_EndTag0.appendAttributeValue(intArray0);
      charArray0[4] = '6';
      token_EndTag0.appendAttributeValue(charArray0);
      Token.EndTag token_EndTag1 = (Token.EndTag)token_EndTag0.name("");
      char char0 = 'L';
      // Undeclared exception!
      try { 
        token_EndTag1.name();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Must be false
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      Token.Comment token_Comment0 = new Token.Comment();
      token_Comment0.tokenType();
      Token.Comment token_Comment1 = token_Comment0.append("(24Uj");
      token_Comment1.append("(24Uj");
      Token.reset((StringBuilder) null);
      token_Comment1.append((String) null);
      token_Comment0.tokenType();
      token_Comment1.append((String) null);
      Token.StartTag token_StartTag0 = new Token.StartTag();
      token_StartTag0.appendTagName("version");
      Token.StartTag token_StartTag1 = (Token.StartTag)token_StartTag0.reset();
      token_StartTag1.hasAttributes();
      Token.CData token_CData0 = new Token.CData("fRx}_UWRG5;K'J");
      char[] charArray0 = new char[1];
      charArray0[0] = ':';
      Token.reset((StringBuilder) null);
      token_StartTag1.appendAttributeValue(charArray0);
      token_CData0.toString();
      token_StartTag0.isComment();
      token_StartTag0.appendAttributeValue("fRx}_UWRG5;K'J");
      // Undeclared exception!
      try { 
        token_StartTag1.asDoctype();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.jsoup.parser.Token$StartTag cannot be cast to org.jsoup.parser.Token$Doctype
         //
         verifyException("org.jsoup.parser.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      Token.EndTag token_EndTag0 = new Token.EndTag();
      Token.EndTag token_EndTag1 = (Token.EndTag)token_EndTag0.name("S:eQ");
      token_EndTag1.appendTagName("S:eQ");
      assertSame(token_EndTag0, token_EndTag1);
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      Token.EndTag token_EndTag0 = new Token.EndTag();
      Token.EndTag token_EndTag1 = (Token.EndTag)token_EndTag0.name("{/f X");
      boolean boolean0 = token_EndTag1.isEndTag();
      assertTrue(boolean0);
  }

  // @Test(timeout = 4000)
  // public void test028()  throws Throwable  {
  //     Token.StartTag token_StartTag0 = new Token.StartTag();
  //     Attributes attributes0 = new Attributes();
  //     token_StartTag0.nameAttr("org.jsoup.nodes.Attribute", attributes0);
  //     int[] intArray0 = new int[6];
  //     intArray0[0] = (-1846);
  //     intArray0[1] = (-1);
  //     intArray0[2] = 0;
  //     String string0 = "2q:a";
  //     token_StartTag0.appendAttributeValue("2q:a");
  //     token_StartTag0.nameAttr("2q:a", (Attributes) null);
  //     token_StartTag0.appendTagName('d');
  //     intArray0[3] = 1266;
  //     intArray0[4] = 2688;
  //     intArray0[5] = 358;
  //     // Undeclared exception!
  //     try { 
  //       token_StartTag0.appendAttributeValue(intArray0);
  //       fail("Expecting exception: IllegalArgumentException");
  //     
  //     } catch(IllegalArgumentException e) {
  //        //
  //        // no message in exception (getMessage() returned null)
  //        //
  //        verifyException("java.lang.AbstractStringBuilder", e);
  //     }
  // }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      Token.Comment token_Comment0 = new Token.Comment();
      Token.TokenType token_TokenType0 = Token.TokenType.Doctype;
      token_Comment0.type = token_TokenType0;
      Token.Comment token_Comment1 = (Token.Comment)token_Comment0.reset();
      Token.EOF token_EOF0 = new Token.EOF();
      token_EOF0.reset();
      Token.StartTag token_StartTag0 = new Token.StartTag();
      token_StartTag0.hasAttributes();
      // Undeclared exception!
      try { 
        token_Comment1.asCharacter();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.jsoup.parser.Token$Comment cannot be cast to org.jsoup.parser.Token$Character
         //
         verifyException("org.jsoup.parser.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      Token.EOF token_EOF0 = new Token.EOF();
      Token.EOF token_EOF1 = (Token.EOF)token_EOF0.reset();
      // Undeclared exception!
      try { 
        token_EOF1.asDoctype();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.jsoup.parser.Token$EOF cannot be cast to org.jsoup.parser.Token$Doctype
         //
         verifyException("org.jsoup.parser.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      Token.Character token_Character0 = new Token.Character();
      // Undeclared exception!
      try { 
        token_Character0.asComment();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.jsoup.parser.Token$Character cannot be cast to org.jsoup.parser.Token$Comment
         //
         verifyException("org.jsoup.parser.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      Token.StartTag token_StartTag0 = new Token.StartTag();
      Attributes attributes0 = new Attributes();
      Token.StartTag token_StartTag1 = token_StartTag0.nameAttr("[dC$e=5", attributes0);
      token_StartTag1.setEmptyAttributeValue();
      token_StartTag1.finaliseTag();
      // Undeclared exception!
      try { 
        token_StartTag1.asEndTag();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.jsoup.parser.Token$StartTag cannot be cast to org.jsoup.parser.Token$EndTag
         //
         verifyException("org.jsoup.parser.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      String string0 = "org.jsoup.parser.Token$EndTag";
      Token.CData token_CData0 = new Token.CData("org.jsoup.parser.Token$EndTag");
      Token.CData token_CData1 = (Token.CData)token_CData0.data("jqad/");
      Token.TokenType token_TokenType0 = Token.TokenType.Character;
      token_CData1.type = token_TokenType0;
      token_CData1.getData();
      // Undeclared exception!
      try { 
        token_CData1.asStartTag();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.jsoup.parser.Token$CData cannot be cast to org.jsoup.parser.Token$StartTag
         //
         verifyException("org.jsoup.parser.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      Token.EndTag token_EndTag0 = new Token.EndTag();
      String string0 = "h+_N56E<JIL]S|l{";
      Token.EndTag token_EndTag1 = (Token.EndTag)token_EndTag0.name("h+_N56E<JIL]S|l{");
      Token.EndTag token_EndTag2 = token_EndTag1.asEndTag();
      token_EndTag2.name();
      Token.EndTag token_EndTag3 = (Token.EndTag)token_EndTag2.reset();
      // Undeclared exception!
      try { 
        token_EndTag3.asDoctype();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.jsoup.parser.Token$EndTag cannot be cast to org.jsoup.parser.Token$Doctype
         //
         verifyException("org.jsoup.parser.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      Token.EndTag token_EndTag0 = new Token.EndTag();
      char char0 = 'L';
      token_EndTag0.appendAttributeName('L');
      String string0 = "";
      token_EndTag0.appendAttributeName("");
      // Undeclared exception!
      try { 
        token_EndTag0.asComment();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.jsoup.parser.Token$EndTag cannot be cast to org.jsoup.parser.Token$Comment
         //
         verifyException("org.jsoup.parser.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      Token.StartTag token_StartTag0 = new Token.StartTag();
      Token.CData token_CData0 = new Token.CData("value");
      token_CData0.data("~CK$C+");
      token_CData0.reset();
      token_CData0.toString();
      Token.TokenType token_TokenType0 = Token.TokenType.EOF;
      token_CData0.type = token_TokenType0;
      Token.CData token_CData1 = (Token.CData)token_CData0.data((String) null);
      Token.CData token_CData2 = (Token.CData)token_CData1.reset();
      token_CData2.tokenType();
      token_CData0.toString();
      token_CData1.isEndTag();
      token_StartTag0.toStringName();
      token_StartTag0.toString();
      token_StartTag0.newAttribute();
      // Undeclared exception!
      try { 
        token_StartTag0.asDoctype();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.jsoup.parser.Token$StartTag cannot be cast to org.jsoup.parser.Token$Doctype
         //
         verifyException("org.jsoup.parser.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      Token.Doctype token_Doctype0 = new Token.Doctype();
      token_Doctype0.getPublicIdentifier();
      assertFalse(token_Doctype0.isForceQuirks());
      
      Token.EndTag token_EndTag0 = new Token.EndTag();
      boolean boolean0 = token_EndTag0.isSelfClosing();
      assertFalse(boolean0);
  }

  // @Test(timeout = 4000)
  // public void test038()  throws Throwable  {
  //     Token.EndTag token_EndTag0 = new Token.EndTag();
  //     Token.EndTag token_EndTag1 = token_EndTag0.asEndTag();
  //     Token.EndTag token_EndTag2 = (Token.EndTag)token_EndTag1.name("inert");
  //     int[] intArray0 = new int[6];
  //     intArray0[0] = (-228);
  //     intArray0[1] = 0;
  //     token_EndTag2.appendAttributeName('9');
  //     intArray0[2] = 0;
  //     intArray0[3] = 4335;
  //     intArray0[4] = (-1204);
  //     intArray0[5] = 0;
  //     // Undeclared exception!
  //     try { 
  //       token_EndTag2.appendAttributeValue(intArray0);
  //       fail("Expecting exception: IllegalArgumentException");
  //     
  //     } catch(IllegalArgumentException e) {
  //        //
  //        // no message in exception (getMessage() returned null)
  //        //
  //        verifyException("java.lang.AbstractStringBuilder", e);
  //     }
  // }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      Token.Character token_Character0 = new Token.Character();
      StringBuilder stringBuilder0 = new StringBuilder(0);
      Token.reset(stringBuilder0);
      String string0 = token_Character0.toString();
      assertNull(string0);
  }

  // @Test(timeout = 4000)
  // public void test040()  throws Throwable  {
  //     Token.CData token_CData0 = new Token.CData("'");
  //     Token.CData token_CData1 = (Token.CData)token_CData0.reset();
  //     token_CData1.isComment();
  //     Token.StartTag token_StartTag0 = new Token.StartTag();
  //     char char0 = 'J';
  //     token_CData0.reset();
  //     StringBuilder stringBuilder0 = new StringBuilder((CharSequence) "'");
  //     char[] charArray0 = new char[6];
  //     charArray0[0] = 'J';
  //     charArray0[1] = 'X';
  //     charArray0[2] = 'O';
  //     charArray0[3] = 'J';
  //     charArray0[4] = 'J';
  //     charArray0[5] = 'J';
  //     // Undeclared exception!
  //     try { 
  //       stringBuilder0.insert(16, charArray0, (-2240), 16);
  //       fail("Expecting exception: StringIndexOutOfBoundsException");
  //     
  //     } catch(StringIndexOutOfBoundsException e) {
  //        //
  //        // String index out of range: 16
  //        //
  //        verifyException("java.lang.AbstractStringBuilder", e);
  //     }
  // }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      Token.EOF token_EOF0 = new Token.EOF();
      StringBuilder stringBuilder0 = new StringBuilder("oV:vM,5.fd");
      Token.reset(stringBuilder0);
      assertEquals("", stringBuilder0.toString());
      
      token_EOF0.toString();
      Token.Doctype token_Doctype0 = new Token.Doctype();
      Token.TokenType token_TokenType0 = Token.TokenType.StartTag;
      token_Doctype0.type = token_TokenType0;
      token_Doctype0.getSystemIdentifier();
      assertFalse(token_Doctype0.isForceQuirks());
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      Token.TokenType.values();
      Token.Comment token_Comment0 = new Token.Comment();
      Token.Comment token_Comment1 = token_Comment0.append("3}=:p*xXK*)J");
      Token.Comment token_Comment2 = token_Comment1.asComment();
      Token.Comment token_Comment3 = token_Comment2.append('7');
      token_Comment3.isCData();
      Token.EndTag token_EndTag0 = new Token.EndTag();
      Token.EndTag token_EndTag1 = (Token.EndTag)token_EndTag0.name("org.jsoup.parser.Token$EndTag");
      boolean boolean0 = token_EndTag1.hasAttribute("J~O3=bos;}pef!6");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      Token.StartTag token_StartTag0 = new Token.StartTag();
      // Undeclared exception!
      try { 
        token_StartTag0.name();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Must be false
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      Token.CData token_CData0 = new Token.CData("a#Y25M$d_Ui");
      Token.CData token_CData1 = (Token.CData)token_CData0.reset();
      // Undeclared exception!
      try { 
        token_CData1.asStartTag();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.jsoup.parser.Token$CData cannot be cast to org.jsoup.parser.Token$StartTag
         //
         verifyException("org.jsoup.parser.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      Token.Doctype token_Doctype0 = new Token.Doctype();
      Token.TokenType token_TokenType0 = Token.TokenType.Doctype;
      token_Doctype0.type = token_TokenType0;
      Token.TokenType token_TokenType1 = Token.TokenType.Doctype;
      token_Doctype0.toString();
      token_Doctype0.type = token_TokenType1;
      token_Doctype0.isDoctype();
      // Undeclared exception!
      try { 
        token_Doctype0.asStartTag();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.jsoup.parser.Token$Doctype cannot be cast to org.jsoup.parser.Token$StartTag
         //
         verifyException("org.jsoup.parser.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      Token.Doctype token_Doctype0 = new Token.Doctype();
      StringBuilder stringBuilder0 = token_Doctype0.systemIdentifier;
      token_Doctype0.getPubSysKey();
      Token.reset(stringBuilder0);
      Token.reset(stringBuilder0);
      token_Doctype0.getName();
      token_Doctype0.isComment();
      String string0 = "t\"=xQ;<>qqB";
      Token.Character token_Character0 = new Token.Character();
      // Undeclared exception!
      try { 
        token_Character0.asEndTag();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.jsoup.parser.Token$Character cannot be cast to org.jsoup.parser.Token$EndTag
         //
         verifyException("org.jsoup.parser.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      Token.StartTag token_StartTag0 = new Token.StartTag();
      ParseSettings parseSettings0 = ParseSettings.preserveCase;
      Attributes attributes0 = new Attributes();
      Attributes attributes1 = parseSettings0.normalizeAttributes(attributes0);
      Token.StartTag token_StartTag1 = token_StartTag0.nameAttr("", attributes1);
      boolean boolean0 = token_StartTag1.hasAttributes();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      Token.EndTag token_EndTag0 = new Token.EndTag();
      int[] intArray0 = new int[2];
      intArray0[0] = 2485;
      intArray0[1] = 14;
      token_EndTag0.appendAttributeValue(intArray0);
      token_EndTag0.setEmptyAttributeValue();
      token_EndTag0.toString();
      token_EndTag0.appendTagName("'P@B?rU");
      token_EndTag0.appendAttributeName('0');
      Token.Comment token_Comment0 = new Token.Comment();
      Token.Comment token_Comment1 = token_Comment0.append(')');
      Token.TokenType token_TokenType0 = Token.TokenType.Doctype;
      token_Comment1.type = token_TokenType0;
      token_Comment1.tokenType();
      token_Comment0.toString();
      token_Comment1.toString();
      token_Comment0.isStartTag();
      token_EndTag0.setEmptyAttributeValue();
      token_EndTag0.newAttribute();
      Token.EOF token_EOF0 = new Token.EOF();
      token_EOF0.toString();
      token_EndTag0.isSelfClosing();
      token_Comment1.tokenType();
      token_EOF0.reset();
      StringBuilder stringBuilder0 = new StringBuilder();
      // Undeclared exception!
      try { 
        stringBuilder0.append((CharSequence) "<!--)-->", 2485, 2485);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // start 2485, end 2485, s.length() 8
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      Token.Comment token_Comment0 = new Token.Comment();
      token_Comment0.bogus = true;
      Token.Comment token_Comment1 = token_Comment0.append('A');
      token_Comment0.getData();
      Token.StartTag token_StartTag0 = new Token.StartTag();
      token_StartTag0.setEmptyAttributeValue();
      Token.EOF token_EOF0 = new Token.EOF();
      token_EOF0.toString();
      token_StartTag0.appendTagName('A');
      // Undeclared exception!
      try { 
        token_Comment1.asDoctype();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.jsoup.parser.Token$Comment cannot be cast to org.jsoup.parser.Token$Doctype
         //
         verifyException("org.jsoup.parser.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      Token.Doctype token_Doctype0 = new Token.Doctype();
      token_Doctype0.reset();
      Token.Doctype token_Doctype1 = token_Doctype0.asDoctype();
      token_Doctype1.tokenType();
      token_Doctype1.reset();
      token_Doctype1.getPubSysKey();
      Token.EndTag token_EndTag0 = new Token.EndTag();
      // Undeclared exception!
      try { 
        token_EndTag0.name();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Must be false
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      Token.EndTag token_EndTag0 = new Token.EndTag();
      char char0 = 'F';
      token_EndTag0.appendTagName('F');
      String string0 = "D8V.x&v`|";
      token_EndTag0.appendAttributeValue("D8V.x&v`|");
      token_EndTag0.appendTagName("D8V.x&v`|");
      StringBuilder stringBuilder0 = new StringBuilder(5);
      Token.reset(stringBuilder0);
      token_EndTag0.toString();
      token_EndTag0.isEndTag();
      // Undeclared exception!
      try { 
        Token.TokenType.valueOf("</FD8V.x&v`|>");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant org.jsoup.parser.Token.TokenType.</FD8V.x&v`|>
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      Token.Doctype token_Doctype0 = new Token.Doctype();
      Token.Doctype token_Doctype1 = (Token.Doctype)token_Doctype0.reset();
      StringBuilder stringBuilder0 = token_Doctype0.systemIdentifier;
      // Undeclared exception!
      try { 
        token_Doctype1.asStartTag();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.jsoup.parser.Token$Doctype cannot be cast to org.jsoup.parser.Token$StartTag
         //
         verifyException("org.jsoup.parser.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      char[] charArray0 = new char[2];
      charArray0[0] = '|';
      charArray0[1] = '@';
      StringBuffer stringBuffer0 = new StringBuffer();
      ParseSettings parseSettings0 = new ParseSettings(false, false);
      Token.EndTag token_EndTag0 = new Token.EndTag();
      token_EndTag0.newAttribute();
      token_EndTag0.newAttribute();
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      Token.StartTag token_StartTag0 = new Token.StartTag();
      Attributes attributes0 = new Attributes();
      Token.StartTag token_StartTag1 = token_StartTag0.nameAttr("B^jBj^`*7y*", attributes0);
      token_StartTag1.toString();
      Token.CData token_CData0 = new Token.CData("<B^jBj^`*7y*>");
      token_CData0.toString();
      attributes0.normalize();
      token_CData0.toString();
      token_StartTag1.hasAttribute("<![CDATA[<B^jBj^`*7y*>]]>");
      token_StartTag1.appendAttributeName("B^jBj^`*7y*");
      token_StartTag0.normalName();
      // Undeclared exception!
      try { 
        token_CData0.asDoctype();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.jsoup.parser.Token$CData cannot be cast to org.jsoup.parser.Token$Doctype
         //
         verifyException("org.jsoup.parser.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      Token.EOF token_EOF0 = new Token.EOF();
      Token.EOF token_EOF1 = (Token.EOF)token_EOF0.reset();
      int int0 = 65533;
      StringBuilder stringBuilder0 = new StringBuilder(65533);
      StringBuilder stringBuilder1 = stringBuilder0.append((long) 65533);
      Token.reset(stringBuilder1);
      // Undeclared exception!
      try { 
        token_EOF1.asCharacter();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.jsoup.parser.Token$EOF cannot be cast to org.jsoup.parser.Token$Character
         //
         verifyException("org.jsoup.parser.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      Token.EndTag token_EndTag0 = new Token.EndTag();
      Token.EndTag token_EndTag1 = (Token.EndTag)token_EndTag0.reset();
      token_EndTag1.appendTagName('A');
      char[] charArray0 = new char[1];
      charArray0[0] = '/';
      token_EndTag0.appendAttributeValue(charArray0);
      token_EndTag1.reset();
      token_EndTag0.setEmptyAttributeValue();
      token_EndTag1.selfClosing = false;
      token_EndTag1.selfClosing = true;
      ParseSettings parseSettings0 = new ParseSettings(true, false);
      Attributes attributes0 = new Attributes();
      Attributes attributes1 = parseSettings0.normalizeAttributes(attributes0);
      token_EndTag1.attributes = attributes1;
      token_EndTag0.selfClosing = true;
      token_EndTag0.appendTagName('S');
      token_EndTag1.normalName = "<!doctype ";
      token_EndTag1.appendAttributeName("formnovalidate");
      Token.TokenType.values();
      Token.Comment token_Comment0 = new Token.Comment();
      Token.Comment token_Comment1 = token_Comment0.append('v');
      Token.Comment token_Comment2 = token_Comment0.append("0s)cy=q_`[ C");
      token_Comment2.isEndTag();
      Token.EndTag token_EndTag2 = (Token.EndTag)token_EndTag0.reset();
      token_Comment1.reset();
      Token.EndTag token_EndTag3 = (Token.EndTag)token_EndTag0.reset();
      assertSame(token_EndTag3, token_EndTag2);
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      Token.Comment token_Comment0 = new Token.Comment();
      Token.Comment token_Comment1 = token_Comment0.append("meq~");
      token_Comment0.append('~');
      token_Comment0.bogus = false;
      token_Comment0.bogus = false;
      token_Comment1.tokenType();
      token_Comment1.asComment();
      Token.EndTag token_EndTag0 = new Token.EndTag();
      Token.EndTag token_EndTag1 = (Token.EndTag)token_EndTag0.reset();
      Token.EndTag token_EndTag2 = token_EndTag1.asEndTag();
      String string0 = token_EndTag2.normalName();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      Token.CData token_CData0 = new Token.CData("%?");
      token_CData0.tokenType();
      String string0 = "br";
      Token.CData token_CData1 = (Token.CData)token_CData0.data("br");
      // Undeclared exception!
      try { 
        token_CData1.asStartTag();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.jsoup.parser.Token$CData cannot be cast to org.jsoup.parser.Token$StartTag
         //
         verifyException("org.jsoup.parser.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      Token.EndTag token_EndTag0 = new Token.EndTag();
      token_EndTag0.appendAttributeName(">");
      token_EndTag0.tagName = "";
      token_EndTag0.newAttribute();
      Token.CData token_CData0 = new Token.CData("X");
      token_EndTag0.toStringName();
      int[] intArray0 = new int[5];
      intArray0[0] = (-2006);
      intArray0[1] = (-272);
      intArray0[2] = (-2006);
      int int0 = 0;
      // Undeclared exception!
      try { 
        token_EndTag0.name();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Must be false
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      Token.CData token_CData0 = new Token.CData("");
      Token.CData token_CData1 = (Token.CData)token_CData0.data("%XA**]=!j?~");
      String string0 = token_CData1.toString();
      assertEquals("<![CDATA[%XA**]=!j?~]]>", string0);
      
      boolean boolean0 = token_CData1.isEOF();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      Token.Doctype token_Doctype0 = new Token.Doctype();
      token_Doctype0.getName();
      Token.CData token_CData0 = new Token.CData("");
      Token.TokenType token_TokenType0 = Token.TokenType.EOF;
      token_CData0.type = token_TokenType0;
      Token.CData token_CData1 = (Token.CData)token_CData0.data("");
      token_CData1.data("");
      Token.CData token_CData2 = (Token.CData)token_CData1.reset();
      token_CData2.tokenType();
      token_CData2.type = token_TokenType0;
      token_CData0.tokenType();
      token_CData0.toString();
      Token.CData token_CData3 = (Token.CData)token_CData1.asCharacter();
      // Undeclared exception!
      try { 
        token_CData3.asStartTag();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.jsoup.parser.Token$CData cannot be cast to org.jsoup.parser.Token$StartTag
         //
         verifyException("org.jsoup.parser.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      Token.EndTag token_EndTag0 = new Token.EndTag();
      // Undeclared exception!
      try { 
        token_EndTag0.asStartTag();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.jsoup.parser.Token$EndTag cannot be cast to org.jsoup.parser.Token$StartTag
         //
         verifyException("org.jsoup.parser.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      Token.StartTag token_StartTag0 = new Token.StartTag();
      String string0 = "";
      Attributes attributes0 = new Attributes();
      Token.StartTag token_StartTag1 = token_StartTag0.nameAttr("", attributes0);
      Token.StartTag token_StartTag2 = token_StartTag1.asStartTag();
      token_StartTag2.normalName = "";
      token_StartTag2.newAttribute();
      // Undeclared exception!
      try { 
        token_StartTag2.asComment();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.jsoup.parser.Token$StartTag cannot be cast to org.jsoup.parser.Token$Comment
         //
         verifyException("org.jsoup.parser.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      Token.CData token_CData0 = new Token.CData("86QIys)ij|N");
      Token.CData token_CData1 = (Token.CData)token_CData0.data("");
      token_CData1.data("86QIys)ij|N");
      Token.CData token_CData2 = (Token.CData)token_CData1.asCharacter();
      String string0 = "meta[name=charset]";
      Token.CData token_CData3 = (Token.CData)token_CData2.data("meta[name=charset]");
      token_CData2.isDoctype();
      // Undeclared exception!
      try { 
        token_CData3.asEndTag();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.jsoup.parser.Token$CData cannot be cast to org.jsoup.parser.Token$EndTag
         //
         verifyException("org.jsoup.parser.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      Token.TokenType token_TokenType0 = Token.TokenType.EOF;
      Token.Doctype token_Doctype0 = new Token.Doctype();
      Token.reset((StringBuilder) null);
      token_Doctype0.getPublicIdentifier();
      token_Doctype0.isCData();
      Token.EOF token_EOF0 = new Token.EOF();
      Token.TokenType token_TokenType1 = Token.TokenType.StartTag;
      token_EOF0.type = token_TokenType1;
      Token.TokenType token_TokenType2 = Token.TokenType.StartTag;
      token_EOF0.type = token_TokenType2;
      Token.EOF token_EOF1 = (Token.EOF)token_EOF0.reset();
      token_EOF1.tokenType();
      // Undeclared exception!
      try { 
        token_EOF0.asStartTag();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.jsoup.parser.Token$EOF cannot be cast to org.jsoup.parser.Token$StartTag
         //
         verifyException("org.jsoup.parser.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      Token.EndTag token_EndTag0 = new Token.EndTag();
      token_EndTag0.appendAttributeName("B~f#R1N!)cL");
      token_EndTag0.appendAttributeValue('y');
      boolean boolean0 = token_EndTag0.isSelfClosing();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      Token.TokenType.values();
      char[] charArray0 = new char[1];
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      Token.StartTag token_StartTag0 = new Token.StartTag();
      Token.StartTag token_StartTag1 = (Token.StartTag)token_StartTag0.reset();
      token_StartTag1.tagName = "V=3J";
      // Undeclared exception!
      try { 
        token_StartTag1.asDoctype();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.jsoup.parser.Token$StartTag cannot be cast to org.jsoup.parser.Token$Doctype
         //
         verifyException("org.jsoup.parser.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      Token.StartTag token_StartTag0 = new Token.StartTag();
      token_StartTag0.selfClosing = false;
      Token.StartTag token_StartTag1 = (Token.StartTag)token_StartTag0.reset();
      char[] charArray0 = new char[5];
      charArray0[0] = '&';
      charArray0[1] = '`';
      token_StartTag1.appendTagName('K');
      charArray0[2] = 'X';
      charArray0[3] = '5';
      char char0 = '*';
      String string0 = "";
      // Undeclared exception!
      try { 
        token_StartTag1.asEndTag();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.jsoup.parser.Token$StartTag cannot be cast to org.jsoup.parser.Token$EndTag
         //
         verifyException("org.jsoup.parser.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      Token.Doctype token_Doctype0 = new Token.Doctype();
      Token.Doctype token_Doctype1 = (Token.Doctype)token_Doctype0.reset();
      // Undeclared exception!
      try { 
        token_Doctype1.asComment();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.jsoup.parser.Token$Doctype cannot be cast to org.jsoup.parser.Token$Comment
         //
         verifyException("org.jsoup.parser.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      Token.Doctype token_Doctype0 = new Token.Doctype();
      // Undeclared exception!
      try { 
        token_Doctype0.asComment();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.jsoup.parser.Token$Doctype cannot be cast to org.jsoup.parser.Token$Comment
         //
         verifyException("org.jsoup.parser.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      Token.EOF token_EOF0 = new Token.EOF();
      Token.EOF token_EOF1 = (Token.EOF)token_EOF0.reset();
      // Undeclared exception!
      try { 
        token_EOF1.asEndTag();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.jsoup.parser.Token$EOF cannot be cast to org.jsoup.parser.Token$EndTag
         //
         verifyException("org.jsoup.parser.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      Token.CData token_CData0 = new Token.CData("EW>CQ");
      Token.CData token_CData1 = (Token.CData)token_CData0.reset();
      token_CData1.isEndTag();
      // Undeclared exception!
      try { 
        token_CData1.asDoctype();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.jsoup.parser.Token$CData cannot be cast to org.jsoup.parser.Token$Doctype
         //
         verifyException("org.jsoup.parser.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      Token.CData token_CData0 = new Token.CData((String) null);
      String string0 = "\"^.d:me|c'<Gu?rO7";
      token_CData0.data("\"^.d:me|c'<Gu?rO7");
      token_CData0.toString();
      token_CData0.data("<![CDATA[\"^.d:me|c'<Gu?rO7]]>");
      Token.TokenType token_TokenType0 = Token.TokenType.EndTag;
      token_CData0.type = token_TokenType0;
      // Undeclared exception!
      try { 
        token_CData0.asStartTag();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.jsoup.parser.Token$CData cannot be cast to org.jsoup.parser.Token$StartTag
         //
         verifyException("org.jsoup.parser.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      Token.StartTag token_StartTag0 = new Token.StartTag();
      token_StartTag0.finaliseTag();
      Token.StartTag token_StartTag1 = (Token.StartTag)token_StartTag0.reset();
      int[] intArray0 = new int[0];
      Attributes attributes0 = new Attributes();
      token_StartTag1.attributes = attributes0;
      token_StartTag1.appendAttributeValue(intArray0);
      token_StartTag1.isSelfClosing();
      token_StartTag1.asStartTag();
      Token.Character token_Character0 = new Token.Character();
      Token.Character token_Character1 = token_Character0.data("");
      assertSame(token_Character1, token_Character0);
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      Token.EndTag token_EndTag0 = new Token.EndTag();
      // Undeclared exception!
      try { 
        token_EndTag0.asComment();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.jsoup.parser.Token$EndTag cannot be cast to org.jsoup.parser.Token$Comment
         //
         verifyException("org.jsoup.parser.Token", e);
      }
  }

  // @Test(timeout = 4000)
  // public void test077()  throws Throwable  {
  //     Token.Comment token_Comment0 = new Token.Comment();
  //     token_Comment0.tokenType();
  //     Token.Comment token_Comment1 = (Token.Comment)token_Comment0.reset();
  //     token_Comment1.tokenType();
  //     StringBuilder stringBuilder0 = new StringBuilder("Z|$'bC<Xo}{=ZR");
  //     int int0 = (-36);
  //     // Undeclared exception!
  //     try { 
  //       stringBuilder0.insert((-36), (double) (-36));
  //       fail("Expecting exception: StringIndexOutOfBoundsException");
  //     
  //     } catch(StringIndexOutOfBoundsException e) {
  //        //
  //        // String index out of range: -36
  //        //
  //        verifyException("java.lang.AbstractStringBuilder", e);
  //     }
  // }

  // @Test(timeout = 4000)
  // public void test078()  throws Throwable  {
  //     Token.Comment token_Comment0 = new Token.Comment();
  //     StringBuffer stringBuffer0 = new StringBuffer("!}NP@");
  //     StringBuilder stringBuilder0 = new StringBuilder(stringBuffer0);
  //     StringBuilder stringBuilder1 = stringBuilder0.append(stringBuffer0);
  //     StringBuilder stringBuilder2 = stringBuilder1.reverse();
  //     StringBuilder stringBuilder3 = stringBuilder2.append((CharSequence) stringBuilder0);
  //     char[] charArray0 = new char[1];
  //     charArray0[0] = '<';
  //     // Undeclared exception!
  //     try { 
  //       stringBuilder3.insert(30, charArray0, 30, (-1));
  //       fail("Expecting exception: StringIndexOutOfBoundsException");
  //     
  //     } catch(StringIndexOutOfBoundsException e) {
  //        //
  //        // String index out of range: 30
  //        //
  //        verifyException("java.lang.AbstractStringBuilder", e);
  //     }
  // }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      Token.Comment token_Comment0 = new Token.Comment();
      boolean boolean0 = token_Comment0.isEndTag();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      Token.Comment token_Comment0 = new Token.Comment();
      // Undeclared exception!
      try { 
        token_Comment0.asEndTag();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.jsoup.parser.Token$Comment cannot be cast to org.jsoup.parser.Token$EndTag
         //
         verifyException("org.jsoup.parser.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      Token.CData token_CData0 = new Token.CData("M~\"]?M|~<=<-u");
      StringBuilder stringBuilder0 = new StringBuilder(4);
      StringBuilder stringBuilder1 = stringBuilder0.append(4);
      StringBuilder stringBuilder2 = stringBuilder1.append(1742L);
      char[] charArray0 = new char[5];
      charArray0[0] = '_';
      charArray0[1] = 'a';
      charArray0[2] = 'l';
      charArray0[3] = 'z';
      charArray0[4] = 'a';
      StringBuilder stringBuilder3 = stringBuilder2.append(charArray0);
      StringBuilder stringBuilder4 = stringBuilder3.append((CharSequence) stringBuilder0);
      Token.reset(stringBuilder4);
      token_CData0.toString();
      Token.StartTag token_StartTag0 = new Token.StartTag();
      token_StartTag0.toStringName();
      // Undeclared exception!
      try { 
        token_StartTag0.name();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Must be false
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      Token.Character token_Character0 = new Token.Character();
      Token.Character token_Character1 = new Token.Character();
      // Undeclared exception!
      try { 
        token_Character1.asComment();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.jsoup.parser.Token$Character cannot be cast to org.jsoup.parser.Token$Comment
         //
         verifyException("org.jsoup.parser.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      Token.Doctype token_Doctype0 = new Token.Doctype();
      boolean boolean0 = token_Doctype0.isStartTag();
      Token.EOF token_EOF0 = new Token.EOF();
      token_EOF0.tokenType();
      token_EOF0.reset();
      Token.StartTag token_StartTag0 = new Token.StartTag();
      Attributes attributes0 = new Attributes();
      Token.StartTag token_StartTag1 = token_StartTag0.nameAttr(" />", attributes0);
      token_StartTag1.toString();
      boolean boolean1 = token_Doctype0.isForceQuirks();
      assertTrue(boolean1 == boolean0);
      
      String string0 = token_StartTag0.toString();
      assertEquals("< />>", string0);
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      Token.Comment token_Comment0 = new Token.Comment();
      token_Comment0.append(';');
      Token.Comment token_Comment1 = token_Comment0.append(';');
      token_Comment1.bogus = true;
      Token.TokenType token_TokenType0 = Token.TokenType.StartTag;
      token_Comment1.type = token_TokenType0;
      // Undeclared exception!
      try { 
        Token.TokenType.valueOf("F");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant org.jsoup.parser.Token.TokenType.F
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      Token.Doctype token_Doctype0 = new Token.Doctype();
      // Undeclared exception!
      try { 
        token_Doctype0.asStartTag();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.jsoup.parser.Token$Doctype cannot be cast to org.jsoup.parser.Token$StartTag
         //
         verifyException("org.jsoup.parser.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      Token.CData token_CData0 = new Token.CData("");
      Token.CData token_CData1 = (Token.CData)token_CData0.reset();
      boolean boolean0 = token_CData1.isEndTag();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      Token.Character token_Character0 = new Token.Character();
      // Undeclared exception!
      try { 
        token_Character0.asStartTag();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.jsoup.parser.Token$Character cannot be cast to org.jsoup.parser.Token$StartTag
         //
         verifyException("org.jsoup.parser.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      Token.StartTag token_StartTag0 = new Token.StartTag();
      Token.StartTag token_StartTag1 = (Token.StartTag)token_StartTag0.reset();
      token_StartTag0.appendAttributeName('t');
      int[] intArray0 = new int[8];
      intArray0[0] = 65533;
      intArray0[1] = (int) 't';
      intArray0[2] = (int) 't';
      intArray0[3] = (int) ']';
      intArray0[4] = (int) ']';
      intArray0[5] = (int) ']';
      intArray0[6] = (int) 't';
      intArray0[7] = (int) ']';
      token_StartTag1.appendAttributeValue(intArray0);
      assertEquals(8, intArray0.length);
  }

  // @Test(timeout = 4000)
  // public void test089()  throws Throwable  {
  //     Token.EOF token_EOF0 = new Token.EOF();
  //     Token.Comment token_Comment0 = new Token.Comment();
  //     Token.Doctype token_Doctype0 = new Token.Doctype();
  //     StringBuilder stringBuilder0 = token_Doctype0.publicIdentifier;
  //     Token.reset(stringBuilder0);
  //     Token.Comment token_Comment1 = token_Comment0.append("`q*bx}EZE");
  //     token_Comment1.toString();
  //     char char0 = 'U';
  //     token_Comment1.append('U');
  //     String string0 = "Doctype";
  //     int int0 = 62;
  //     char[] charArray0 = new char[2];
  //     charArray0[0] = 'U';
  //     charArray0[1] = 'U';
  //     // Undeclared exception!
  //     try { 
  //       stringBuilder0.insert(62, charArray0);
  //       fail("Expecting exception: StringIndexOutOfBoundsException");
  //     
  //     } catch(StringIndexOutOfBoundsException e) {
  //        //
  //        // String index out of range: 62
  //        //
  //        verifyException("java.lang.AbstractStringBuilder", e);
  //     }
  // }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      Token.Comment token_Comment0 = new Token.Comment();
      token_Comment0.toString();
      token_Comment0.reset();
      Token.TokenType token_TokenType0 = Token.TokenType.Doctype;
      token_Comment0.type = token_TokenType0;
      StringBuilder stringBuilder0 = new StringBuilder();
      Object object0 = new Object();
      StringBuilder stringBuilder1 = stringBuilder0.append(object0);
      StringBuilder stringBuilder2 = stringBuilder1.replace(0, 0, "-wge;\"_c#90+54\"");
      StringBuilder stringBuilder3 = stringBuilder2.insert(0, (double) 0);
      // Undeclared exception!
      try { 
        stringBuilder3.append((CharSequence) stringBuilder2, 1525, 0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // start 1525, end 0, s.length() 43
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      Token.StartTag token_StartTag0 = new Token.StartTag();
      Token.CData token_CData0 = new Token.CData("\"Wd\r`UK1");
      token_CData0.toString();
      StringBuilder stringBuilder0 = new StringBuilder("org.jsoup.parser.Token$1");
      Token.reset(stringBuilder0);
      token_CData0.toString();
      Token.reset(stringBuilder0);
      assertEquals("", stringBuilder0.toString());
      
      token_CData0.isStartTag();
      token_CData0.isCharacter();
      Token.Comment token_Comment0 = new Token.Comment();
      Token.Comment token_Comment1 = token_Comment0.append("<![CDATA[\"Wd\r`UK1]]>");
      String string0 = token_Comment1.toString();
      assertEquals("<!--<![CDATA[\"Wd\r`UK1]]>-->", string0);
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      Token.Comment token_Comment0 = new Token.Comment();
      token_Comment0.reset();
      boolean boolean0 = true;
      // Undeclared exception!
      try { 
        token_Comment0.asDoctype();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.jsoup.parser.Token$Comment cannot be cast to org.jsoup.parser.Token$Doctype
         //
         verifyException("org.jsoup.parser.Token", e);
      }
  }

  // @Test(timeout = 4000)
  // public void test093()  throws Throwable  {
  //     int int0 = 1435;
  //     StringBuilder stringBuilder0 = new StringBuilder(1435);
  //     char[] charArray0 = new char[3];
  //     charArray0[0] = '(';
  //     charArray0[1] = '/';
  //     charArray0[2] = 'L';
  //     // Undeclared exception!
  //     try { 
  //       stringBuilder0.append(charArray0, 27, 27);
  //       fail("Expecting exception: ArrayIndexOutOfBoundsException");
  //     
  //     } catch(ArrayIndexOutOfBoundsException e) {
  //        //
  //        // no message in exception (getMessage() returned null)
  //        //
  //        verifyException("java.lang.AbstractStringBuilder", e);
  //     }
  // }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      Token.Comment token_Comment0 = new Token.Comment();
      Token.Comment token_Comment1 = (Token.Comment)token_Comment0.reset();
      token_Comment0.reset();
      // Undeclared exception!
      try { 
        token_Comment1.asDoctype();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.jsoup.parser.Token$Comment cannot be cast to org.jsoup.parser.Token$Doctype
         //
         verifyException("org.jsoup.parser.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      Token.StartTag token_StartTag0 = new Token.StartTag();
      token_StartTag0.newAttribute();
      Token.StartTag token_StartTag1 = (Token.StartTag)token_StartTag0.name("Py<G");
      token_StartTag1.hasAttribute("Py<G");
      token_StartTag1.tokenType();
      token_StartTag1.name();
      token_StartTag0.appendTagName('|');
      token_StartTag1.appendAttributeName('|');
      token_StartTag1.appendTagName('|');
      token_StartTag1.name();
      token_StartTag0.normalName();
      token_StartTag1.appendAttributeName("py<g||");
      Token.TokenType.values();
      Token.TokenType.values();
      Token.EOF token_EOF0 = new Token.EOF();
      token_EOF0.reset();
      Token.Doctype token_Doctype0 = new Token.Doctype();
      token_Doctype0.getSystemIdentifier();
      Token.CData token_CData0 = new Token.CData("Pum56Md?dmVS)");
      token_CData0.toString();
      Token.Comment token_Comment0 = new Token.Comment();
      Token.Comment token_Comment1 = token_Comment0.append('-');
      assertSame(token_Comment1, token_Comment0);
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      int[] intArray0 = new int[3];
      intArray0[0] = (-3618);
      intArray0[1] = 0;
      intArray0[2] = 2503;
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      Token.CData token_CData0 = new Token.CData("PEP9ZB@-<)z3UfSG");
      Token.TokenType token_TokenType0 = Token.TokenType.Doctype;
      token_CData0.toString();
      Token.CData token_CData1 = new Token.CData("<![CDATA[PEP9ZB@-<)z3UfSG]]>");
      token_CData0.type = token_TokenType0;
      token_CData0.tokenType();
      Token.StartTag token_StartTag0 = new Token.StartTag();
      token_CData0.toString();
      Token.StartTag token_StartTag1 = token_StartTag0.nameAttr("", (Attributes) null);
      token_CData0.type = token_TokenType0;
      token_StartTag1.appendAttributeName(';');
      Token.StartTag token_StartTag2 = (Token.StartTag)token_StartTag1.reset();
      token_StartTag2.appendTagName("<![CDATA[PEP9ZB@-<)z3UfSG]]>");
      token_StartTag2.appendTagName("<![CDATA[PEP9ZB@-<)z3UfSG]]>");
      boolean boolean0 = token_StartTag2.hasAttributes();
      assertFalse(boolean0);
      
      String string0 = token_CData0.toString();
      assertEquals("<![CDATA[PEP9ZB@-<)z3UfSG]]>", string0);
      
      String string1 = token_StartTag0.toString();
      assertEquals("<<![CDATA[PEP9ZB@-<)z3UfSG]]><![CDATA[PEP9ZB@-<)z3UfSG]]>>", string1);
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      Token.Comment token_Comment0 = new Token.Comment();
      Token.Comment token_Comment1 = (Token.Comment)token_Comment0.reset();
      token_Comment1.tokenType();
      Token.EndTag token_EndTag0 = new Token.EndTag();
      String string0 = "q@BEKT\\7E-6s\\O.";
      Token.EndTag token_EndTag1 = (Token.EndTag)token_EndTag0.name("q@BEKT\u0007E-6sO.");
      token_EndTag1.setEmptyAttributeValue();
      // Undeclared exception!
      try { 
        token_EndTag1.asStartTag();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.jsoup.parser.Token$EndTag cannot be cast to org.jsoup.parser.Token$StartTag
         //
         verifyException("org.jsoup.parser.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      Token.StartTag token_StartTag0 = new Token.StartTag();
      Token.StartTag token_StartTag1 = token_StartTag0.nameAttr("Dk,)nXq{8(,z7R+=3", (Attributes) null);
      String string0 = token_StartTag1.toStringName();
      assertEquals("Dk,)nXq{8(,z7R+=3", string0);
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      Token.StartTag token_StartTag0 = new Token.StartTag();
      token_StartTag0.tagName = null;
      boolean boolean0 = token_StartTag0.isCharacter();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      Token.EndTag token_EndTag0 = new Token.EndTag();
      String string0 = "TP`RuK<m)[|4|dX";
      token_EndTag0.reset();
      token_EndTag0.name("TP`RuK<m)[|4|dX");
      token_EndTag0.appendAttributeName("TP`RuK<m)[|4|dX");
      Token.CData token_CData0 = new Token.CData("F2:zZoAojme_q_]b-p@");
      token_EndTag0.appendAttributeValue("s+");
      token_CData0.data("");
      Token.StartTag token_StartTag0 = new Token.StartTag();
      Attributes attributes0 = new Attributes();
      token_EndTag0.appendAttributeValue("");
      token_StartTag0.attributes = attributes0;
      Attributes attributes1 = new Attributes();
      String string1 = "";
      Attribute attribute0 = null;
      try {
        attribute0 = new Attribute("", "TP`RuK<m)[|4|dX", attributes1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // String must not be empty
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      Token.Comment token_Comment0 = new Token.Comment();
      token_Comment0.toString();
      token_Comment0.tokenType();
      token_Comment0.toString();
      token_Comment0.isDoctype();
      // Undeclared exception!
      try { 
        token_Comment0.asEndTag();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.jsoup.parser.Token$Comment cannot be cast to org.jsoup.parser.Token$EndTag
         //
         verifyException("org.jsoup.parser.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      Token.Character token_Character0 = new Token.Character();
      Token.TokenType token_TokenType0 = Token.TokenType.Doctype;
      token_Character0.type = token_TokenType0;
      token_Character0.toString();
      Token.StartTag token_StartTag0 = new Token.StartTag();
      token_StartTag0.normalName = null;
      ParseSettings parseSettings0 = new ParseSettings(false, true);
      Token.EndTag token_EndTag0 = new Token.EndTag();
      Attributes attributes0 = token_EndTag0.attributes;
      token_StartTag0.setEmptyAttributeValue();
      parseSettings0.normalizeAttributes((Attributes) null);
      Token.StartTag token_StartTag1 = token_StartTag0.nameAttr((String) null, (Attributes) null);
      // Undeclared exception!
      try { 
        token_StartTag1.name();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Must be false
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      Token.StartTag token_StartTag0 = new Token.StartTag();
      int[] intArray0 = new int[5];
      intArray0[0] = 1;
      intArray0[1] = 1;
      intArray0[2] = 12;
      intArray0[3] = 1660;
      intArray0[4] = 0;
      token_StartTag0.appendAttributeValue(intArray0);
      // Undeclared exception!
      try { 
        token_StartTag0.asEndTag();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.jsoup.parser.Token$StartTag cannot be cast to org.jsoup.parser.Token$EndTag
         //
         verifyException("org.jsoup.parser.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      Token.Comment token_Comment0 = new Token.Comment();
      token_Comment0.toString();
      token_Comment0.toString();
      token_Comment0.append("<!---->");
      // Undeclared exception!
      try { 
        token_Comment0.asEndTag();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.jsoup.parser.Token$Comment cannot be cast to org.jsoup.parser.Token$EndTag
         //
         verifyException("org.jsoup.parser.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      Token.EndTag token_EndTag0 = new Token.EndTag();
      Token.EndTag token_EndTag1 = (Token.EndTag)token_EndTag0.reset();
      // Undeclared exception!
      try { 
        token_EndTag1.name();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Must be false
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      int[] intArray0 = new int[1];
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      String string0 = "d@g*iWXSL ";
      Token.CData token_CData0 = new Token.CData("d@g*iWXSL ");
      Token.CData token_CData1 = (Token.CData)token_CData0.reset();
      // Undeclared exception!
      try { 
        token_CData1.asStartTag();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.jsoup.parser.Token$CData cannot be cast to org.jsoup.parser.Token$StartTag
         //
         verifyException("org.jsoup.parser.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      Token.Comment token_Comment0 = new Token.Comment();
      token_Comment0.toString();
      // Undeclared exception!
      try { 
        token_Comment0.asStartTag();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.jsoup.parser.Token$Comment cannot be cast to org.jsoup.parser.Token$StartTag
         //
         verifyException("org.jsoup.parser.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      String string0 = "org.jsoup.select.Evaluator$Tag";
      Token.CData token_CData0 = new Token.CData("org.jsoup.select.Evaluator$Tag");
      Token.TokenType token_TokenType0 = Token.TokenType.StartTag;
      token_CData0.type = token_TokenType0;
      Token.CData token_CData1 = (Token.CData)token_CData0.data("org.jsoup.select.Evaluator$Tag");
      token_CData1.getData();
      // Undeclared exception!
      try { 
        token_CData1.asEndTag();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.jsoup.parser.Token$CData cannot be cast to org.jsoup.parser.Token$EndTag
         //
         verifyException("org.jsoup.parser.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      String string0 = "";
      Token.CData token_CData0 = new Token.CData("");
      // Undeclared exception!
      try { 
        token_CData0.asStartTag();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.jsoup.parser.Token$CData cannot be cast to org.jsoup.parser.Token$StartTag
         //
         verifyException("org.jsoup.parser.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      Token.Comment token_Comment0 = new Token.Comment();
      Token.Doctype token_Doctype0 = new Token.Doctype();
      StringBuilder stringBuilder0 = token_Doctype0.name;
      int int0 = 1;
      // Undeclared exception!
      try { 
        stringBuilder0.append((CharSequence) null, 1, (-237));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // start 1, end -237, s.length() 4
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      Token.Comment token_Comment0 = new Token.Comment();
      char char0 = 's';
      // Undeclared exception!
      try { 
        token_Comment0.asDoctype();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.jsoup.parser.Token$Comment cannot be cast to org.jsoup.parser.Token$Doctype
         //
         verifyException("org.jsoup.parser.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      String string0 = null;
      Token.CData token_CData0 = new Token.CData((String) null);
      Token.CData token_CData1 = (Token.CData)token_CData0.data("open");
      // Undeclared exception!
      try { 
        token_CData1.asComment();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.jsoup.parser.Token$CData cannot be cast to org.jsoup.parser.Token$Comment
         //
         verifyException("org.jsoup.parser.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      Token.EndTag token_EndTag0 = new Token.EndTag();
      Token.Tag token_Tag0 = token_EndTag0.name((String) null);
      token_Tag0.toString();
      // Undeclared exception!
      try { 
        Token.TokenType.valueOf("</[unset]>");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant org.jsoup.parser.Token.TokenType.</[unset]>
         //
         verifyException("java.lang.Enum", e);
      }
  }

  // @Test(timeout = 4000)
  // public void test116()  throws Throwable  {
  //     Token.StartTag token_StartTag0 = new Token.StartTag();
  //     ParseSettings parseSettings0 = ParseSettings.preserveCase;
  //     Token.Doctype token_Doctype0 = new Token.Doctype();
  //     StringBuilder stringBuilder0 = token_Doctype0.publicIdentifier;
  //     StringBuilder stringBuilder1 = stringBuilder0.append(']');
  //     Object object0 = new Object();
  //     // Undeclared exception!
  //     try { 
  //       stringBuilder1.insert(1072, object0);
  //       fail("Expecting exception: StringIndexOutOfBoundsException");
  //     
  //     } catch(StringIndexOutOfBoundsException e) {
  //        //
  //        // String index out of range: 1072
  //        //
  //        verifyException("java.lang.AbstractStringBuilder", e);
  //     }
  // }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      Token.CData token_CData0 = new Token.CData("");
      Token.CData token_CData1 = (Token.CData)token_CData0.reset();
      // Undeclared exception!
      try { 
        token_CData1.asComment();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.jsoup.parser.Token$CData cannot be cast to org.jsoup.parser.Token$Comment
         //
         verifyException("org.jsoup.parser.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      String string0 = "";
      Token.CData token_CData0 = new Token.CData("");
      token_CData0.reset();
      int int0 = (-3381);
      StringBuilder stringBuilder0 = null;
      try {
        stringBuilder0 = new StringBuilder((-3381));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      String string0 = "";
      Token.CData token_CData0 = new Token.CData("");
      token_CData0.tokenType();
      Token.CData token_CData1 = (Token.CData)token_CData0.reset();
      token_CData1.tokenType();
      Token.TokenType token_TokenType0 = Token.TokenType.EndTag;
      token_CData0.type = token_TokenType0;
      token_CData0.data("CData");
      token_CData0.isStartTag();
      // Undeclared exception!
      try { 
        token_CData0.asStartTag();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.jsoup.parser.Token$CData cannot be cast to org.jsoup.parser.Token$StartTag
         //
         verifyException("org.jsoup.parser.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      Token.CData token_CData0 = new Token.CData("+zV*yT'");
      Token.CData token_CData1 = (Token.CData)token_CData0.reset();
      // Undeclared exception!
      try { 
        token_CData1.asComment();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.jsoup.parser.Token$CData cannot be cast to org.jsoup.parser.Token$Comment
         //
         verifyException("org.jsoup.parser.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      Token.StartTag token_StartTag0 = new Token.StartTag();
      String string0 = null;
      // Undeclared exception!
      try { 
        token_StartTag0.appendTagName((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.parser.Token$Tag", e);
      }
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      Token.Comment token_Comment0 = new Token.Comment();
      Token.TokenType token_TokenType0 = Token.TokenType.StartTag;
      token_Comment0.type = token_TokenType0;
      token_Comment0.append('V');
      token_Comment0.toString();
      Token.TokenType[] token_TokenTypeArray0 = Token.TokenType.values();
      assertEquals(6, token_TokenTypeArray0.length);
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      String string0 = "]]>";
      Token.CData token_CData0 = new Token.CData("]]>");
      token_CData0.toString();
      token_CData0.data("]]>");
      // Undeclared exception!
      try { 
        token_CData0.asDoctype();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.jsoup.parser.Token$CData cannot be cast to org.jsoup.parser.Token$Doctype
         //
         verifyException("org.jsoup.parser.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      Token.StartTag token_StartTag0 = new Token.StartTag();
      // Undeclared exception!
      try { 
        token_StartTag0.asEndTag();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.jsoup.parser.Token$StartTag cannot be cast to org.jsoup.parser.Token$EndTag
         //
         verifyException("org.jsoup.parser.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      Token.Comment token_Comment0 = new Token.Comment();
      String string0 = "Comment";
      Token.Comment token_Comment1 = token_Comment0.append("Comment");
      Token.Comment token_Comment2 = token_Comment1.append('\\');
      // Undeclared exception!
      try { 
        token_Comment2.asEndTag();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.jsoup.parser.Token$Comment cannot be cast to org.jsoup.parser.Token$EndTag
         //
         verifyException("org.jsoup.parser.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      Token.EOF token_EOF0 = new Token.EOF();
      // Undeclared exception!
      try { 
        token_EOF0.asEndTag();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.jsoup.parser.Token$EOF cannot be cast to org.jsoup.parser.Token$EndTag
         //
         verifyException("org.jsoup.parser.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      Token.StartTag token_StartTag0 = new Token.StartTag();
      token_StartTag0.newAttribute();
      char[] charArray0 = new char[3];
      charArray0[0] = '?';
      charArray0[1] = '!';
      charArray0[2] = 'j';
      // Undeclared exception!
      try { 
        token_StartTag0.asComment();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.jsoup.parser.Token$StartTag cannot be cast to org.jsoup.parser.Token$Comment
         //
         verifyException("org.jsoup.parser.Token", e);
      }
  }

  // @Test(timeout = 4000)
  // public void test128()  throws Throwable  {
  //     Token.Doctype token_Doctype0 = new Token.Doctype();
  //     StringBuilder stringBuilder0 = token_Doctype0.name;
  //     // Undeclared exception!
  //     try { 
  //       stringBuilder0.insert((-1289), (-822L));
  //       fail("Expecting exception: StringIndexOutOfBoundsException");
  //     
  //     } catch(StringIndexOutOfBoundsException e) {
  //        //
  //        // String index out of range: -1289
  //        //
  //        verifyException("java.lang.AbstractStringBuilder", e);
  //     }
  // }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      Token.EndTag token_EndTag0 = new Token.EndTag();
      // Undeclared exception!
      try { 
        token_EndTag0.asCharacter();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.jsoup.parser.Token$EndTag cannot be cast to org.jsoup.parser.Token$Character
         //
         verifyException("org.jsoup.parser.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      Token.TokenType.values();
      Token.EOF token_EOF0 = new Token.EOF();
      Token.TokenType token_TokenType0 = Token.TokenType.Comment;
      token_EOF0.type = token_TokenType0;
      token_EOF0.tokenType();
      boolean boolean0 = token_EOF0.isComment();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      String string0 = "e\\";
      Token.CData token_CData0 = new Token.CData("e");
      Token.CData token_CData1 = (Token.CData)token_CData0.reset();
      Token.TokenType token_TokenType0 = Token.TokenType.EndTag;
      String string1 = "]]>";
      token_CData0.data("]]>");
      token_CData1.type = token_TokenType0;
      // Undeclared exception!
      try { 
        token_CData1.asEndTag();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.jsoup.parser.Token$CData cannot be cast to org.jsoup.parser.Token$EndTag
         //
         verifyException("org.jsoup.parser.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      Token.EOF token_EOF0 = new Token.EOF();
      token_EOF0.tokenType();
      Token.reset((StringBuilder) null);
      token_EOF0.isEOF();
      // Undeclared exception!
      try { 
        token_EOF0.asStartTag();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.jsoup.parser.Token$EOF cannot be cast to org.jsoup.parser.Token$StartTag
         //
         verifyException("org.jsoup.parser.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      Token.EOF token_EOF0 = new Token.EOF();
      Token.EOF token_EOF1 = (Token.EOF)token_EOF0.reset();
      // Undeclared exception!
      try { 
        token_EOF1.asStartTag();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.jsoup.parser.Token$EOF cannot be cast to org.jsoup.parser.Token$StartTag
         //
         verifyException("org.jsoup.parser.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      Token.EndTag token_EndTag0 = new Token.EndTag();
      Token.EndTag token_EndTag1 = (Token.EndTag)token_EndTag0.reset();
      // Undeclared exception!
      try { 
        token_EndTag1.asStartTag();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.jsoup.parser.Token$EndTag cannot be cast to org.jsoup.parser.Token$StartTag
         //
         verifyException("org.jsoup.parser.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      Token.StartTag token_StartTag0 = new Token.StartTag();
      Token.StartTag token_StartTag1 = (Token.StartTag)token_StartTag0.reset();
      token_StartTag1.normalName();
      Attributes attributes0 = new Attributes();
      assertTrue(attributes0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      Token.TokenType.values();
      Token.CData token_CData0 = new Token.CData((String) null);
      token_CData0.getData();
      // Undeclared exception!
      try { 
        token_CData0.asDoctype();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.jsoup.parser.Token$CData cannot be cast to org.jsoup.parser.Token$Doctype
         //
         verifyException("org.jsoup.parser.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      Token.CData token_CData0 = new Token.CData("org.jsoup.parser.Token$Doctype");
      Token.StartTag token_StartTag0 = new Token.StartTag();
      token_StartTag0.hasAttribute("org.jsoup.parser.Token$Doctype");
      Token.CData token_CData1 = (Token.CData)token_CData0.data("TQt]wp?k=lcPk_0k1kj");
      Attributes attributes0 = new Attributes();
      Token.StartTag token_StartTag1 = token_StartTag0.nameAttr("TQt]wp?k=lcPk_0k1kj", attributes0);
      attributes0.hasDeclaredValueForKeyIgnoreCase("Character");
      token_StartTag1.appendAttributeName("meta[name=charset]");
      token_StartTag1.finaliseTag();
      Token.EndTag token_EndTag0 = new Token.EndTag();
      token_EndTag0.toString();
      token_CData0.reset();
      token_CData0.toString();
      token_EndTag0.appendTagName("<![CDATA[null]]>");
      token_EndTag0.tokenType();
      token_StartTag0.isStartTag();
      // Undeclared exception!
      try { 
        token_CData1.asEndTag();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.jsoup.parser.Token$CData cannot be cast to org.jsoup.parser.Token$EndTag
         //
         verifyException("org.jsoup.parser.Token", e);
      }
  }
}
