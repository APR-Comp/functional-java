/*
 * This file was automatically generated by EvoSuite
 * Sat Nov 25 04:48:55 GMT 2023
 */

package org.jsoup.parser;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jsoup.parser.TokeniserState;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class TokeniserState_ESTest extends TokeniserState_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      TokeniserState[] tokeniserStateArray0 = TokeniserState.values();
      assertEquals(67, tokeniserStateArray0.length);
      
      TokeniserState[] tokeniserStateArray1 = TokeniserState.values();
      assertEquals(67, tokeniserStateArray1.length);
      assertFalse(tokeniserStateArray1.equals((Object)tokeniserStateArray0));
      
      TokeniserState[] tokeniserStateArray2 = TokeniserState.values();
      assertEquals(67, tokeniserStateArray2.length);
      
      TokeniserState.valueOf("Data");
      // Undeclared exception!
      try { 
        TokeniserState.valueOf("<!");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant org.jsoup.parser.TokeniserState.<!
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      // Undeclared exception!
      try { 
        TokeniserState.valueOf("ny9Q)fI:+%9<)>X'c");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant org.jsoup.parser.TokeniserState.ny9Q)fI:+%9<)>X'c
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      TokeniserState.valueOf("TagOpen");
      // Undeclared exception!
      try { 
        TokeniserState.valueOf((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // Name is null
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      String string0 = ";:d`";
      // Undeclared exception!
      try { 
        TokeniserState.valueOf(";:d`");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant org.jsoup.parser.TokeniserState.;:d`
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      // Undeclared exception!
      try { 
        TokeniserState.valueOf("Unexpectedly reached end of file (EOF) in input state [%s]");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant org.jsoup.parser.TokeniserState.Unexpectedly reached end of file (EOF) in input state [%s]
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      String string0 = "*&XK`8wZ6CIuLz#p";
      // Undeclared exception!
      try { 
        TokeniserState.valueOf("*&XK`8wZ6CIuLz#p");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant org.jsoup.parser.TokeniserState.*&XK`8wZ6CIuLz#p
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      String string0 = "";
      // Undeclared exception!
      try { 
        TokeniserState.valueOf("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant org.jsoup.parser.TokeniserState.
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      TokeniserState.values();
      TokeniserState.values();
      TokeniserState.valueOf("BeforeDoctypePublicIdentifier");
      TokeniserState.valueOf("BeforeDoctypePublicIdentifier");
      TokeniserState.values();
      // Undeclared exception!
      try { 
        TokeniserState.valueOf("T<6`got6^--hY;ffaNR");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant org.jsoup.parser.TokeniserState.T<6`got6^--hY;ffaNR
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      // Undeclared exception!
      try { 
        TokeniserState.valueOf("@'T[h}6F4JP+a4|t.e");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant org.jsoup.parser.TokeniserState.@'T[h}6F4JP+a4|t.e
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      String string0 = "ScriptData";
      TokeniserState.valueOf("ScriptData");
      // Undeclared exception!
      try { 
        TokeniserState.valueOf("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant org.jsoup.parser.TokeniserState.
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      // Undeclared exception!
      try { 
        TokeniserState.valueOf("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant org.jsoup.parser.TokeniserState.
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      String string0 = "(H3Rd";
      // Undeclared exception!
      try { 
        TokeniserState.valueOf("(H3Rd");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant org.jsoup.parser.TokeniserState.(H3Rd
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      TokeniserState.values();
      String string0 = "e&\\tSh\\=";
      // Undeclared exception!
      try { 
        TokeniserState.valueOf("e&\tSh=");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant org.jsoup.parser.TokeniserState.e&\tSh=
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      TokeniserState.values();
      String string0 = null;
      // Undeclared exception!
      try { 
        TokeniserState.valueOf((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // Name is null
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      // Undeclared exception!
      try { 
        TokeniserState.valueOf("6yM%s");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant org.jsoup.parser.TokeniserState.6yM%s
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      // Undeclared exception!
      try { 
        TokeniserState.valueOf("BIaie7mR^M=");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant org.jsoup.parser.TokeniserState.BIaie7mR^M=
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      // Undeclared exception!
      try { 
        TokeniserState.valueOf("}B6|>PS");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant org.jsoup.parser.TokeniserState.}B6|>PS
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      String string0 = "ScriptDataEscapeStartDash";
      TokeniserState.valueOf("ScriptDataEscapeStartDash");
      String string1 = "X";
      // Undeclared exception!
      try { 
        TokeniserState.valueOf("X");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant org.jsoup.parser.TokeniserState.X
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      TokeniserState.values();
      // Undeclared exception!
      try { 
        TokeniserState.valueOf("'to8");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant org.jsoup.parser.TokeniserState.'to8
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      String string0 = "<![CDATA[";
      // Undeclared exception!
      try { 
        TokeniserState.valueOf("<![CDATA[");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant org.jsoup.parser.TokeniserState.<![CDATA[
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      TokeniserState.values();
      TokeniserState.values();
      String string0 = "BeforeAttributeValue";
      TokeniserState.valueOf("BeforeAttributeValue");
      TokeniserState.values();
      TokeniserState.valueOf("BeforeAttributeValue");
      TokeniserState.valueOf("BeforeAttributeValue");
      String string1 = "?Wu";
      // Undeclared exception!
      try { 
        TokeniserState.valueOf("?Wu");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant org.jsoup.parser.TokeniserState.?Wu
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      String string0 = "1S";
      // Undeclared exception!
      try { 
        TokeniserState.valueOf("1S");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant org.jsoup.parser.TokeniserState.1S
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      // Undeclared exception!
      try { 
        TokeniserState.valueOf(".3F}]");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant org.jsoup.parser.TokeniserState..3F}]
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      String string0 = "BeforeAttributeValue";
      TokeniserState.valueOf("BeforeAttributeValue");
      // Undeclared exception!
      try { 
        TokeniserState.valueOf("--");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant org.jsoup.parser.TokeniserState.--
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      String string0 = "Unexpected character '%s' in input state [%s]";
      // Undeclared exception!
      try { 
        TokeniserState.valueOf("Unexpected character '%s' in input state [%s]");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant org.jsoup.parser.TokeniserState.Unexpected character '%s' in input state [%s]
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      TokeniserState.values();
      String string0 = "WTF: No buffer left to unconsume.";
      // Undeclared exception!
      try { 
        TokeniserState.valueOf("WTF: No buffer left to unconsume.");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant org.jsoup.parser.TokeniserState.WTF: No buffer left to unconsume.
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      TokeniserState.valueOf("ScriptDataLessthanSign");
      TokeniserState.valueOf("CommentEndBang");
      TokeniserState.valueOf("CommentEndBang");
      // Undeclared exception!
      try { 
        TokeniserState.valueOf((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // Name is null
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      TokeniserState.values();
      String string0 = "";
      // Undeclared exception!
      try { 
        TokeniserState.valueOf("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant org.jsoup.parser.TokeniserState.
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      TokeniserState.values();
      String string0 = "Invalid character reference: ";
      // Undeclared exception!
      try { 
        TokeniserState.valueOf("Invalid character reference: ");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant org.jsoup.parser.TokeniserState.Invalid character reference: 
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      // Undeclared exception!
      try { 
        TokeniserState.valueOf((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // Name is null
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      String string0 = "ScriptDataEscaped";
      TokeniserState.valueOf("ScriptDataEscaped");
      TokeniserState.valueOf("ScriptDataEscaped");
      // Undeclared exception!
      try { 
        TokeniserState.valueOf("'S=_+/C9");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant org.jsoup.parser.TokeniserState.'S=_+/C9
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      TokeniserState.values();
      TokeniserState.values();
      TokeniserState.values();
      String string0 = "DoctypePublicIdentifier_doubleQuoted";
      TokeniserState.valueOf("DoctypePublicIdentifier_doubleQuoted");
      TokeniserState.valueOf("DoctypePublicIdentifier_doubleQuoted");
      String string1 = "";
      // Undeclared exception!
      try { 
        TokeniserState.valueOf("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant org.jsoup.parser.TokeniserState.
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      TokeniserState.values();
      TokeniserState.values();
      String string0 = "O3%j6Zt>8-";
      // Undeclared exception!
      try { 
        TokeniserState.valueOf("O3%j6Zt>8-");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant org.jsoup.parser.TokeniserState.O3%j6Zt>8-
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      TokeniserState.values();
      String string0 = ",\"%b";
      // Undeclared exception!
      try { 
        TokeniserState.valueOf(",\"%b");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant org.jsoup.parser.TokeniserState.,\"%b
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      TokeniserState.values();
      TokeniserState.values();
      TokeniserState.values();
      TokeniserState.values();
      TokeniserState.values();
      String string0 = ">:";
      // Undeclared exception!
      try { 
        TokeniserState.valueOf(">:");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant org.jsoup.parser.TokeniserState.>:
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      String string0 = "X;]l";
      // Undeclared exception!
      try { 
        TokeniserState.valueOf("X;]l");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant org.jsoup.parser.TokeniserState.X;]l
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      TokeniserState.values();
      String string0 = "Vv@BZ";
      // Undeclared exception!
      try { 
        TokeniserState.valueOf("Vv@BZ");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant org.jsoup.parser.TokeniserState.Vv@BZ
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      String string0 = "g;vf=!K";
      // Undeclared exception!
      try { 
        TokeniserState.valueOf("g;vf=!K");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant org.jsoup.parser.TokeniserState.g;vf=!K
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      TokeniserState.values();
      TokeniserState.values();
      TokeniserState.values();
      // Undeclared exception!
      try { 
        TokeniserState.valueOf("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant org.jsoup.parser.TokeniserState.
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      TokeniserState.values();
      String string0 = "Mark invalid";
      // Undeclared exception!
      try { 
        TokeniserState.valueOf("Mark invalid");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant org.jsoup.parser.TokeniserState.Mark invalid
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      String string0 = "character [%s] is not a valid unicode code point";
      // Undeclared exception!
      try { 
        TokeniserState.valueOf("character [%s] is not a valid unicode code point");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant org.jsoup.parser.TokeniserState.character [%s] is not a valid unicode code point
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      String string0 = "?kN/?V}83WuYM";
      // Undeclared exception!
      try { 
        TokeniserState.valueOf("?kN/?V}83WuYM");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant org.jsoup.parser.TokeniserState.?kN/?V}83WuYM
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      TokeniserState.values();
      String string0 = "_";
      // Undeclared exception!
      try { 
        TokeniserState.valueOf("_");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant org.jsoup.parser.TokeniserState._
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      TokeniserState.values();
      String string0 = "aDxum29g;9U+u";
      // Undeclared exception!
      try { 
        TokeniserState.valueOf("aDxum29g;9U+u");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant org.jsoup.parser.TokeniserState.aDxum29g;9U+u
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      TokeniserState.values();
      String string0 = "oQQp";
      // Undeclared exception!
      try { 
        TokeniserState.valueOf("oQQp");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant org.jsoup.parser.TokeniserState.oQQp
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      String string0 = "94#?&awa";
      // Undeclared exception!
      try { 
        TokeniserState.valueOf("94#?&awa");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant org.jsoup.parser.TokeniserState.94#?&awa
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      TokeniserState.values();
      TokeniserState.values();
      // Undeclared exception!
      try { 
        TokeniserState.valueOf("L!e+dL]ZNaU?2KRu?1?");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant org.jsoup.parser.TokeniserState.L!e+dL]ZNaU?2KRu?1?
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      TokeniserState.valueOf("CharacterReferenceInRcdata");
      // Undeclared exception!
      try { 
        TokeniserState.valueOf("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant org.jsoup.parser.TokeniserState.
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      TokeniserState.values();
      TokeniserState.values();
      // Undeclared exception!
      try { 
        TokeniserState.valueOf("?e9,");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant org.jsoup.parser.TokeniserState.?e9,
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      TokeniserState.values();
      TokeniserState.values();
      TokeniserState.values();
      String string0 = "d2]m^}6L";
      // Undeclared exception!
      try { 
        TokeniserState.valueOf("d2]m^}6L");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant org.jsoup.parser.TokeniserState.d2]m^}6L
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      // Undeclared exception!
      try { 
        TokeniserState.valueOf("+~UrRvhmfH`^]O");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant org.jsoup.parser.TokeniserState.+~UrRvhmfH`^]O
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      String string0 = "T5z";
      // Undeclared exception!
      try { 
        TokeniserState.valueOf("T5z");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant org.jsoup.parser.TokeniserState.T5z
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      TokeniserState.values();
      TokeniserState.values();
      TokeniserState.values();
      TokeniserState.values();
      String string0 = null;
      // Undeclared exception!
      try { 
        TokeniserState.valueOf((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // Name is null
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      String string0 = "~:[=^(_,sW- JCt PhI";
      // Undeclared exception!
      try { 
        TokeniserState.valueOf("~:[=^(_,sW- JCt PhI");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant org.jsoup.parser.TokeniserState.~:[=^(_,sW- JCt PhI
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      // Undeclared exception!
      try { 
        TokeniserState.valueOf("</");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant org.jsoup.parser.TokeniserState.</
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      // Undeclared exception!
      try { 
        TokeniserState.valueOf("org.jsoup.parser.Tokeniser");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant org.jsoup.parser.TokeniserState.org.jsoup.parser.Tokeniser
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      String string0 = "pbv@#lAR\\!t@caxTU2g";
      // Undeclared exception!
      try { 
        TokeniserState.valueOf("pbv@#lAR!t@caxTU2g");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant org.jsoup.parser.TokeniserState.pbv@#lAR!t@caxTU2g
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      TokeniserState.values();
      String string0 = "yq{C=ZLj|";
      // Undeclared exception!
      try { 
        TokeniserState.valueOf("yq{C=ZLj|");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant org.jsoup.parser.TokeniserState.yq{C=ZLj|
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      TokeniserState.values();
      // Undeclared exception!
      try { 
        TokeniserState.valueOf("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant org.jsoup.parser.TokeniserState.
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      TokeniserState.valueOf("TagOpen");
      TokeniserState.values();
      // Undeclared exception!
      try { 
        TokeniserState.valueOf("Kp_pyOMp&(|K");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant org.jsoup.parser.TokeniserState.Kp_pyOMp&(|K
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      TokeniserState.values();
      TokeniserState.values();
      TokeniserState.values();
      TokeniserState tokeniserState0 = TokeniserState.valueOf("CommentStart");
      TokeniserState.valueOf("CommentStart");
      TokeniserState.valueOf("CommentStart");
      TokeniserState.valueOf("CommentStart");
      TokeniserState.values();
      TokeniserState.values();
      TokeniserState.values();
      TokeniserState.values();
      TokeniserState.values();
      TokeniserState.values();
      TokeniserState.valueOf("CommentStart");
      TokeniserState.values();
      TokeniserState tokeniserState1 = TokeniserState.valueOf("CommentStart");
      assertSame(tokeniserState1, tokeniserState0);
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      TokeniserState.values();
      String string0 = "ScriptDataEscapedEndTagName";
      TokeniserState.valueOf("ScriptDataEscapedEndTagName");
      TokeniserState.valueOf("ScriptDataEscapedEndTagName");
      TokeniserState.valueOf("ScriptDataEscapedEndTagName");
      String string1 = "J";
      // Undeclared exception!
      try { 
        TokeniserState.valueOf("J");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant org.jsoup.parser.TokeniserState.J
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      String string0 = "Mark invalid";
      // Undeclared exception!
      try { 
        TokeniserState.valueOf("Mark invalid");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant org.jsoup.parser.TokeniserState.Mark invalid
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      TokeniserState.values();
      String string0 = "org.jsoup.parser.Token";
      // Undeclared exception!
      try { 
        TokeniserState.valueOf("org.jsoup.parser.Token");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant org.jsoup.parser.TokeniserState.org.jsoup.parser.Token
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      String string0 = null;
      // Undeclared exception!
      try { 
        TokeniserState.valueOf((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // Name is null
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      TokeniserState.values();
      String string0 = "Ry&";
      // Undeclared exception!
      try { 
        TokeniserState.valueOf("Ry&");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant org.jsoup.parser.TokeniserState.Ry&
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      // Undeclared exception!
      try { 
        TokeniserState.valueOf("R2re7B}bF");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant org.jsoup.parser.TokeniserState.R2re7B}bF
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      TokeniserState.values();
      String string0 = "H-2NFC^Cc]nZp}>^*";
      // Undeclared exception!
      try { 
        TokeniserState.valueOf("H-2NFC^Cc]nZp}>^*");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant org.jsoup.parser.TokeniserState.H-2NFC^Cc]nZp}>^*
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      // Undeclared exception!
      try { 
        TokeniserState.valueOf("^Qg");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant org.jsoup.parser.TokeniserState.^Qg
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      String string0 = "invalid named reference [%s]";
      // Undeclared exception!
      try { 
        TokeniserState.valueOf("invalid named reference [%s]");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant org.jsoup.parser.TokeniserState.invalid named reference [%s]
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      TokeniserState.values();
      TokeniserState.values();
      String string0 = "Attributes incorrectly present on end tag [/%s]";
      // Undeclared exception!
      try { 
        TokeniserState.valueOf("Attributes incorrectly present on end tag [/%s]");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant org.jsoup.parser.TokeniserState.Attributes incorrectly present on end tag [/%s]
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      String string0 = "I(";
      // Undeclared exception!
      try { 
        TokeniserState.valueOf("I(");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant org.jsoup.parser.TokeniserState.I(
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      TokeniserState.values();
      String string0 = "org.jsoup.parser.Token$Character";
      // Undeclared exception!
      try { 
        TokeniserState.valueOf("org.jsoup.parser.Token$Character");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant org.jsoup.parser.TokeniserState.org.jsoup.parser.Token$Character
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      TokeniserState.values();
      String string0 = "jNX-n'E#\"%a";
      // Undeclared exception!
      try { 
        TokeniserState.valueOf("jNX-n'E#\"%a");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant org.jsoup.parser.TokeniserState.jNX-n'E#\"%a
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      TokeniserState.values();
      String string0 = ")2}6qn{^C)EZ";
      // Undeclared exception!
      try { 
        TokeniserState.valueOf(")2}6qn{^C)EZ");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant org.jsoup.parser.TokeniserState.)2}6qn{^C)EZ
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      String string0 = "$(Pf#0d1h&D3A";
      // Undeclared exception!
      try { 
        TokeniserState.valueOf("$(Pf#0d1h&D3A");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant org.jsoup.parser.TokeniserState.$(Pf#0d1h&D3A
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      TokeniserState.values();
      String string0 = "Z_)Y";
      // Undeclared exception!
      try { 
        TokeniserState.valueOf("Z_)Y");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant org.jsoup.parser.TokeniserState.Z_)Y
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      TokeniserState.values();
      // Undeclared exception!
      try { 
        TokeniserState.valueOf("U?k?Nmj` <F");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant org.jsoup.parser.TokeniserState.U?k?Nmj` <F
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      TokeniserState.values();
      // Undeclared exception!
      try { 
        TokeniserState.valueOf("missing semicolon on [&%s]");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant org.jsoup.parser.TokeniserState.missing semicolon on [&%s]
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      String string0 = " 7U<R";
      // Undeclared exception!
      try { 
        TokeniserState.valueOf(" 7U<R");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant org.jsoup.parser.TokeniserState. 7U<R
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      TokeniserState.valueOf("RcdataLessthanSign");
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      TokeniserState.values();
      String string0 = "/{S[N>";
      // Undeclared exception!
      try { 
        TokeniserState.valueOf("/{S[N>");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant org.jsoup.parser.TokeniserState./{S[N>
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      TokeniserState.valueOf("ScriptDataLessthanSign");
      // Undeclared exception!
      try { 
        TokeniserState.valueOf("3X~S_+9Esa-KlPO(jG0");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant org.jsoup.parser.TokeniserState.3X~S_+9Esa-KlPO(jG0
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      TokeniserState.values();
      TokeniserState.valueOf("RCDATAEndTagOpen");
      // Undeclared exception!
      try { 
        TokeniserState.valueOf("I*#ei<jkt(e#xZarh?8");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant org.jsoup.parser.TokeniserState.I*#ei<jkt(e#xZarh?8
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      TokeniserState.values();
      String string0 = "WF:{e";
      // Undeclared exception!
      try { 
        TokeniserState.valueOf("WF:{e");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant org.jsoup.parser.TokeniserState.WF:{e
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      TokeniserState.values();
      TokeniserState.values();
      String string0 = "b^i{1:6l#Srz";
      // Undeclared exception!
      try { 
        TokeniserState.valueOf("b^i{1:6l#Srz");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant org.jsoup.parser.TokeniserState.b^i{1:6l#Srz
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      TokeniserState.values();
      TokeniserState.values();
      TokeniserState.values();
      TokeniserState.values();
      String string0 = "";
      // Undeclared exception!
      try { 
        TokeniserState.valueOf("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant org.jsoup.parser.TokeniserState.
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      TokeniserState.values();
      TokeniserState.values();
      String string0 = "DoctypePublicIdentifier_doubleQuoted";
      TokeniserState.valueOf("DoctypePublicIdentifier_doubleQuoted");
      TokeniserState.valueOf("DoctypePublicIdentifier_doubleQuoted");
      // Undeclared exception!
      try { 
        TokeniserState.valueOf(">x?AHr]S))HNzlMn%");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant org.jsoup.parser.TokeniserState.>x?AHr]S))HNzlMn%
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      // Undeclared exception!
      try { 
        TokeniserState.valueOf("Invalid character reference: ");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant org.jsoup.parser.TokeniserState.Invalid character reference: 
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      TokeniserState.values();
      String string0 = "&iH~:]=K?";
      // Undeclared exception!
      try { 
        TokeniserState.valueOf("&iH~:]=K?");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant org.jsoup.parser.TokeniserState.&iH~:]=K?
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      TokeniserState.values();
      TokeniserState.values();
      TokeniserState.values();
      String string0 = "h)RzZ3k8";
      // Undeclared exception!
      try { 
        TokeniserState.valueOf("h)RzZ3k8");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant org.jsoup.parser.TokeniserState.h)RzZ3k8
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      TokeniserState.values();
      String string0 = "+PBC";
      // Undeclared exception!
      try { 
        TokeniserState.valueOf("+PBC");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant org.jsoup.parser.TokeniserState.+PBC
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      // Undeclared exception!
      try { 
        TokeniserState.valueOf("R");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant org.jsoup.parser.TokeniserState.R
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      TokeniserState.values();
      String string0 = ";c)9N'X-(+cz";
      // Undeclared exception!
      try { 
        TokeniserState.valueOf(";c)9N'X-(+cz");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant org.jsoup.parser.TokeniserState.;c)9N'X-(+cz
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      TokeniserState.values();
      TokeniserState.values();
      TokeniserState.values();
      String string0 = null;
      // Undeclared exception!
      try { 
        TokeniserState.valueOf((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // Name is null
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      TokeniserState.values();
      TokeniserState.values();
      String string0 = "";
      // Undeclared exception!
      try { 
        TokeniserState.valueOf("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant org.jsoup.parser.TokeniserState.
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      // Undeclared exception!
      try { 
        TokeniserState.valueOf("org.jsoup.parser.Token");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant org.jsoup.parser.TokeniserState.org.jsoup.parser.Token
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      String string0 = "x{jl5~";
      // Undeclared exception!
      try { 
        TokeniserState.valueOf("x{jl5~");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant org.jsoup.parser.TokeniserState.x{jl5~
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      String string0 = "oDs(70z_.lp$6JcgMp";
      // Undeclared exception!
      try { 
        TokeniserState.valueOf("oDs(70z_.lp$6JcgMp");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant org.jsoup.parser.TokeniserState.oDs(70z_.lp$6JcgMp
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      TokeniserState.values();
      TokeniserState.values();
      TokeniserState[] tokeniserStateArray0 = TokeniserState.values();
      TokeniserState.values();
      TokeniserState.values();
      TokeniserState.values();
      TokeniserState.values();
      TokeniserState.valueOf("ScriptDataEndTagName");
      TokeniserState.valueOf("ScriptDataEndTagName");
      TokeniserState[] tokeniserStateArray1 = TokeniserState.values();
      assertFalse(tokeniserStateArray1.equals((Object)tokeniserStateArray0));
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      String string0 = "<o8B$+s1. OmD.";
      // Undeclared exception!
      try { 
        TokeniserState.valueOf("<o8B$+s1. OmD.");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant org.jsoup.parser.TokeniserState.<o8B$+s1. OmD.
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      // Undeclared exception!
      try { 
        TokeniserState.valueOf("<&7=J");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant org.jsoup.parser.TokeniserState.<&7=J
         //
         verifyException("java.lang.Enum", e);
      }
  }
}
